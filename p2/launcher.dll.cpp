//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
// Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
//

#include <ctype.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <windows.h>

// ---------------- Integer Types Definitions -----------------

typedef int8_t int3_t;
typedef int64_t int128_t;

// ----------------- Float Types Definitions ------------------

typedef float float32_t;
typedef double float64_t;
typedef long double float80_t;

// ------------------------ Structures ------------------------

struct WSAData {
    int16_t e0;
    int16_t e1;
    int16_t e2;
    int16_t e3;
    char * e4;
    char e5[1];
    char e6[1];
};

struct _EXCEPTION_RECORD {
    int32_t e0;
    int32_t e1;
    struct _EXCEPTION_RECORD * e2;
    int32_t * e3;
    int32_t e4;
    int32_t e5[1];
};

struct _IO_FILE {
    int32_t e0;
};

struct _SECURITY_ATTRIBUTES {
    int32_t e0;
    int32_t * e1;
    bool e2;
};

struct vtable_10022bd4_type {
    int32_t (*e0)(int32_t, int32_t);
};

struct vtable_10022bf8_type {
    int32_t (*e0)();
};

struct vtable_10022ce4_type {
    int32_t (*e0)();
    int32_t (*e1)();
    int32_t (*e2)();
    int32_t (*e3)();
    int32_t (*e4)();
    int32_t (*e5)();
    int32_t (*e6)();
    int32_t (*e7)(int32_t, int32_t);
    int32_t (*e8)();
    int32_t (*e9)(int32_t, int32_t, char, int32_t, int32_t, char);
    int32_t (*e10)(int32_t);
};

struct vtable_10023154_type {
    int32_t (*e0)(int32_t, int32_t);
    int32_t (*e1)();
    int32_t (*e2)();
    int32_t (*e3)();
    int32_t (*e4)();
};

struct vtable_1002367c_type {
    int32_t (*e0)(int32_t);
};

struct vtable_10023ea8_type {
    int32_t (*e0)(int32_t, int32_t);
};

struct vtable_10023eb0_type {
    int32_t (*e0)(int32_t);
};

struct vtable_10023eb8_type {
    int32_t (*e0)(int32_t, int32_t);
};

struct vtable_10023f50_type {
    int32_t (*e0)(char);
    int32_t (*e1)();
    int32_t (*e2)(int32_t);
    int32_t (*e3)(int32_t);
    int32_t (*e4)(int32_t);
    int32_t (*e5)();
    int32_t (*e6)();
    int32_t (*e7)();
    int32_t (*e8)();
    int32_t (*e9)();
    int32_t (*e10)(int32_t, int32_t, int32_t);
    int32_t (*e11)();
};

struct vtable_10023ff4_type {
    int32_t (*e0)(int32_t);
    int32_t (*e1)();
    int32_t (*e2)(int32_t);
    int32_t (*e3)();
    int32_t (*e4)();
    int32_t (*e5)();
    int32_t (*e6)();
    int32_t (*e7)();
};

struct vtable_1002401c_type {
    int32_t (*e0)(char);
    int32_t (*e1)();
    int32_t (*e2)(int32_t);
    int32_t (*e3)(int32_t);
    int32_t (*e4)(int32_t);
    int32_t (*e5)();
    int32_t (*e6)();
    int32_t (*e7)();
    int32_t (*e8)();
    int32_t (*e9)();
    int32_t (*e10)(int32_t, int32_t, int32_t);
    int32_t (*e11)();
    int32_t (*e12)(int32_t);
    int32_t (*e13)(int32_t);
    int32_t (*e14)(int32_t);
    int32_t (*e15)(int32_t);
    int32_t (*e16)(int32_t);
    int32_t (*e17)(int32_t, int32_t);
    int32_t (*e18)(int32_t, int32_t, int32_t, int32_t, char, int32_t, char, int32_t, int32_t);
};

// ------------------------- Classes --------------------------

// .?AV?$CFmtStrN@$0BAA@@@
// CAppSystemGroup
// CDefaultAccessor (base classes: IConCommandBaseAccessor)
// CLauncherLoggingListener (base classes: ILoggingListener)
// CResListGenerator (base classes: IResListGenerator)
// CSimpleLoggingListener (base classes: ILoggingListener)
// CSimpleWindowsLoggingListener (base classes: ILoggingListener)
// CSourceAppSystemGroup (base classes: IAppSystemGroup, CSteamAppSystemGroup, CAppSystemGroup)
// CSteamAppSystemGroup
// CUtlCStringConversion (base classes: CUtlCharConversion)
// CUtlCharConversion
// CUtlNoEscConversion (base classes: CUtlCharConversion)
// ConCommandBase
// ConVar (base classes: ConCommandBase, IConVar)
// IAppSystemGroup
// IConCommandBaseAccessor
// IConVar
// ILoggingListener
// IResListGenerator

// ------------------- Function Prototypes --------------------

int32_t ??0_Init_locks@std@@QAE@XZ(void);
int32_t ??0_Init_locks@std@@QAE@XZ2(void);
int32_t ??0_Init_locks@std@@QAE@XZ3(void);
int32_t ??__Finitlocks@@YAXXZ(void);
int32_t ??__Finitlocks@@YAXXZ2(void);
int32_t ??__Finitlocks@@YAXXZ3(void);
int32_t _3f__3f_0_Init_locks_40_std_40__40_QAE_40_XZ(void);
int32_t _3f__3f_3_40_YAXPAX_40_Z(int32_t result);
int32_t _3f__3f___Finitlocks_40__40_YAXXZ(void);
int32_t _40___security_check_cookie_40_4(void);
int32_t ___crtTlsAlloc_40_4(void);
int32_t * ___get_sigabrt(int32_t * Ptr);
int32_t ___iob_func(void);
int32_t ___mtold12(int32_t a1, uint32_t a2, int32_t result);
int32_t __calloc_crt(int32_t a1, int32_t a2);
int32_t __cexit(void);
int32_t __crt_debugger_hook(void);
int32_t * __encoded_null(int32_t * Ptr);
int32_t __flushall(void);
int32_t __heap_init(void);
int32_t __heap_term(void);
int32_t * __initp_eh_hooks(int32_t * Ptr);
int32_t __initp_heap_handler(int32_t result);
int32_t __initp_misc_invarg(int32_t result);
int32_t __initp_misc_purevirt(int32_t result);
int32_t __initp_misc_rand_s(int32_t result);
int32_t __lockexit(void);
int32_t __malloc_crt(int32_t result);
int32_t __msize(int32_t result);
int32_t __NLG_Call(void);
int32_t __output_l(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t __realloc_crt(int32_t result, int32_t a2);
int32_t __recalloc_crt(int32_t result, int32_t a2, int32_t a3);
int32_t __unlockexit(void);
int32_t __wcsdup(void);
int32_t __wcsdup2(int32_t a1);
int32_t _DllMain_40_12(void);
void _RtlUnwind_40_16(int32_t * TargetFrame, int32_t * TargetIp, struct _EXCEPTION_RECORD * ExceptionRecord, int32_t * ReturnValue);
int32_t CreateInterface(void);
int32_t function_10001000(int32_t a1, int32_t a2);
int32_t function_10001060(int32_t a1, int32_t a2);
int32_t function_10001090(int32_t a1);
int32_t function_100010b0(void);
int32_t function_100010c0(char * a1);
int32_t function_10001100(int32_t a1, int32_t a2);
int32_t function_10001170(int32_t a1, int32_t a2);
int32_t function_10001270(int32_t result, int32_t a2);
int32_t function_10001280(int32_t * a1, int32_t a2);
int32_t function_100013a0(void);
int32_t function_10001410(int32_t a1, int32_t result, char * a3);
int32_t function_100014a0(int32_t * a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_100015f0(int32_t a1);
int32_t function_10001660(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_100016c0(void);
int32_t function_10001730(int32_t a1, int32_t a2);
int32_t function_100018e0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_10001ad0(void);
int32_t function_10001b00(char * lpName);
int32_t function_10001bd0(int32_t * a1);
int32_t function_10001ce0(int32_t a1, int32_t * a2, int32_t * a3, int32_t * a4);
int32_t function_10001dd0(int32_t a1, int32_t * a2, int32_t a3);
int32_t function_10001ef0(int32_t a1, int32_t a2, int32_t * a3);
int32_t function_10002010(int32_t a1, int32_t * a2, int32_t a3);
int32_t function_10002070(int32_t * a1, int32_t a2, int32_t a3);
int32_t function_10002100(int32_t a1);
int32_t function_10002260(int32_t a1, int32_t * a2, int32_t a3);
int32_t function_10002380(char * a1, int32_t a2);
int32_t function_100023e0(int32_t a1);
int32_t function_100024a0(void);
int32_t function_100024c0(void);
int32_t function_10002520(void);
int32_t function_10002820(void);
int32_t function_10002830(void);
int32_t function_10002850(int32_t a1, int32_t * a2);
int32_t function_10002880(int32_t a1);
int32_t function_100028b0(void);
int32_t function_10002920(void);
int32_t function_100029e0(int32_t a1);
int32_t function_10002a30(void);
int32_t function_10002b40(int32_t a1, int32_t lpText);
int32_t function_10002bc0(void);
int32_t function_10002bd0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_10002c60(int32_t * a1, char * a2);
int32_t function_10002cd0(int32_t a1);
int32_t function_10002d20(int32_t a1);
int32_t function_10002e00(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10002e40(int32_t a1, int32_t * a2, int32_t * a3);
int32_t function_10002f30(void);
int32_t function_10003000(int32_t a1);
int32_t function_100030b0(int32_t a1);
int32_t function_10003160(int32_t a1);
int32_t function_10003360(int32_t a1);
int32_t function_10003560(int32_t a1);
int32_t function_100035c0(int32_t a1);
int32_t function_10003620(int32_t a1);
int32_t function_10003680(void);
int32_t function_100036d0(int32_t a1);
int32_t function_10003730(void);
int32_t function_10003770(void);
int32_t function_100037a0(int32_t * a1);
int32_t function_10003890(int32_t a1);
int32_t function_10003ce0(void);
int32_t function_10003d90(void);
int32_t function_10003e60(int32_t a1);
int32_t function_10004050(int32_t a1, int32_t a2, int32_t a3);
int32_t function_100040c0(void);
int32_t function_10004260(void);
int32_t function_10004370(void);
int32_t function_100043d0(void);
int32_t function_10004430(int32_t a1);
int32_t function_100044a0(void);
int32_t function_100045a0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_100046b0(int32_t a1, int32_t a2);
int32_t function_100046d0(void);
int32_t function_10004910(void);
int32_t function_10004a30(void);
int32_t function_10004c30(void);
int32_t function_10004c60(void);
int32_t function_10005560(void);
int32_t function_100056d0(int32_t a1, int32_t a2);
int32_t function_10005710(void);
int32_t function_10005730(void);
int32_t function_10005750(int32_t a1);
int32_t function_100057e0(int32_t a1);
int32_t function_10005840(int32_t a1, int32_t a2, int32_t a3, char * a4, int32_t a5, int32_t a6);
int32_t function_100058d0(int32_t a1);
int32_t function_10005a80(int32_t a1, int32_t a2);
int32_t function_10005af0(int32_t * a1, int32_t a2, int32_t a3);
int32_t function_10005be0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10005db0(void);
int32_t function_10005e20(int32_t a1, int32_t a2);
int32_t function_10005ea0(int32_t a1);
int32_t function_10005f40(void);
int32_t function_10005f80(int32_t * a1, int32_t a2, int32_t a3);
int32_t function_10006160(int32_t a1, int32_t a2);
int32_t function_100061c0(void);
int32_t function_10006220(int32_t a1, int32_t a2);
int32_t function_10006280(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10006330(void);
int32_t function_10006540(char * a1);
int32_t function_100066e0(void);
int32_t function_100067a0(void);
int32_t function_10006a80(int32_t * a1, int32_t a2);
int32_t function_10006f50(int32_t a1, int32_t a2);
int32_t function_1000701a(void);
int32_t function_10007020(int16_t wVersionRequested, struct WSAData * lpWSAData);
int32_t function_10007030(int32_t a1, int32_t a2);
int32_t function_10007090(int32_t a1);
int32_t function_100070b0(int32_t a1, int32_t a2, char a3, int32_t a4, int32_t a5, char a6);
int32_t function_10007150(void);
int32_t function_10007160(int32_t result, int32_t a2);
int32_t function_10007180(int32_t a1);
int32_t function_100071a0(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10007260(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10007300(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
int32_t function_100073b0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, char a8, int32_t a9);
int32_t function_100074a0(void);
int32_t function_100075a0(int32_t a1);
int32_t function_10007690(int32_t a1);
int32_t function_10007780(void);
int32_t function_100077e0(int32_t a1);
int32_t function_10007970(void);
int32_t function_100079e0(int32_t * a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_10007ae0(int32_t result, int32_t a2);
int32_t function_10007ba0(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10008190(void);
int32_t function_100081e0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10008260(int32_t a1);
int32_t function_10008380(int32_t a1);
int32_t function_10008400(char * a1);
int32_t function_100084c0(int32_t a1);
int32_t function_10008520(void);
int32_t function_100085f0(int32_t a1, int32_t a2);
int32_t function_10008620(int32_t a1);
int32_t function_10008630(void);
int32_t function_10008700(int32_t a1, int32_t a2);
int32_t function_10008770(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10008810(int32_t a1);
int32_t function_10008ab0(void);
int32_t function_10008b50(void);
int32_t function_10008b60(int32_t a1);
int32_t function_10008b90(int32_t a1, int32_t a2);
int32_t function_10008c00(int32_t a1, int32_t a2);
int32_t function_10008d40(int32_t * a1, char * a2, int32_t a3);
int32_t function_10008da0(int32_t a1);
int32_t function_10008f80(void);
int32_t function_10009010(void);
int32_t function_10009050(int32_t a1, int32_t a2);
int32_t function_10009060(int32_t result, int32_t a2);
int32_t function_100090b0(void);
int32_t function_100090c0(int32_t result);
int32_t function_100090d0(void);
int32_t function_10009170(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10009190(void);
int32_t function_100091a0(void);
int32_t function_100091d0(void);
int32_t function_10009220(void);
int32_t function_10009240(int32_t a1);
int32_t function_10009280(int32_t * a1);
int32_t function_100092b0(int32_t a1, int32_t a2);
int32_t function_10009400(void);
int32_t function_1000943e(void);
int32_t function_10009450(int32_t a1);
int32_t function_10009470(int32_t a1, int32_t a2);
int32_t function_100094b0(int32_t * a1, char * a2);
char * function_10009530(char * String);
int32_t function_10009540(int32_t a1, int32_t a2, int32_t a3);
int32_t function_10009580(int32_t * a1, int32_t * a2);
int32_t function_10009640(void);
int32_t function_10009650(int32_t a1, int32_t * a2, uint32_t a3, int32_t a4);
int32_t function_100096c0(int32_t * a1);
int32_t function_10009700(int32_t a1);
int32_t function_10009740(int32_t result, int32_t a2);
int32_t function_10009770(int32_t * a1);
int32_t function_100097c0(int32_t a1, int32_t a2);
int32_t function_10009910(int32_t * a1, uint32_t a2);
int32_t function_10009960(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10009990(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_10009a40(void);
int32_t * function_10009a50(int32_t * dest, int32_t * src, int32_t n);
int32_t function_10009a60(int32_t * a1, int32_t a2, uint32_t a3);
int32_t function_10009a90(int32_t * a1, int32_t a2, char * a3);
int32_t function_10009ac0(int32_t * a1, int32_t a2, int32_t a3, int32_t * a4);
int32_t function_10009af0(int32_t a1, int32_t a2, int32_t a3, int32_t * a4, int32_t * a5, int32_t a6, int32_t a7, int32_t a8);
int32_t function_10009b30(int32_t a1, int32_t result, int32_t a3);
int32_t function_10009bf0(int32_t a1, int32_t * a2, int32_t a3);
int32_t function_10009c90(int32_t a1, int32_t a2);
int32_t function_10009d40(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10009e40(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_10009ff0(int32_t a1, uint32_t a2, int32_t * a3, uint32_t a4);
int32_t function_1000a060(char a1);
int32_t function_1000a100(int32_t a1, int32_t a2);
int32_t function_1000a120(int32_t a1);
int32_t function_1000a140(void);
int32_t function_1000a1e0(int32_t a1, int32_t * a2, int32_t * a3);
int32_t function_1000a380(int32_t a1);
int32_t function_1000a3e0(int32_t a1);
int32_t function_1000a440(int32_t a1, int32_t a2);
int32_t function_1000a480(int32_t a1);
int32_t function_1000a4a0(int32_t a1);
int32_t function_1000a510(char * a1, int32_t a2);
int32_t function_1000a660(int32_t a1, int32_t result);
int32_t function_1000a6e0(int32_t a1, int32_t * a2);
int32_t function_1000a710(void);
int32_t function_1000a8a0(void);
int32_t function_1000a8c0(int32_t result);
int32_t function_1000a9a0(int32_t a1);
int32_t function_1000aa00(char * a1, int32_t result);
int32_t function_1000ac10(int32_t a1);
int32_t function_1000ad10(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000b150(int32_t * a1);
int32_t function_1000b190(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000b2f0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
int32_t function_1000b450(int32_t a1, int32_t * a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_1000b8a0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_1000b960(int32_t a1, int32_t a2);
int32_t function_1000b9e0(int32_t a1);
int32_t function_1000ba00(void);
int32_t function_1000bb30(void);
int32_t function_1000bbe0(int32_t a1, int32_t a2);
int32_t function_1000bd90(int32_t hLibModule);
int32_t function_1000bdb0(int32_t hModule);
int32_t function_1000bdd0(void);
int32_t function_1000bde0(void);
int32_t function_1000bdf0(int32_t a1, int32_t a2);
int32_t function_1000be10(int32_t a1, int32_t * a2, uint32_t a3, int32_t * a4);
int32_t function_1000bea0(int32_t a1, int32_t a2);
int32_t function_1000bf00(int32_t a1);
int32_t function_1000bf20(int32_t a1);
int32_t function_1000bf80(int32_t a1, int32_t * a2);
int32_t function_1000bff0(int32_t a1, int32_t a2);
int32_t function_1000c030(int32_t a1, int32_t a2);
int32_t function_1000c090(int32_t a1);
int32_t function_1000c0e0(int32_t a1);
int32_t function_1000c130(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000c180(int32_t a1);
int32_t function_1000c210(void);
int32_t function_1000c280(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_1000c320(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000c470(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000c570(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000c5d0(int32_t * a1, int32_t a2);
int32_t function_1000c6c0(int32_t a1, int32_t a2);
int32_t function_1000c770(int32_t a1);
int32_t function_1000c7c0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000c880(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000c900(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000c990(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000ca20(void);
int32_t function_1000caa0(int32_t result, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
int32_t function_1000cbb0(int32_t a1);
int32_t function_1000cc50(int32_t a1, int32_t * a2, int32_t a3);
int32_t function_1000cdc0(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4, int32_t a5);
int32_t function_1000cf90(int32_t a1);
int32_t function_1000d060(void);
int32_t function_1000d070(void);
int32_t function_1000d080(uint32_t a1, int32_t a2);
int32_t function_1000d100(char * a1);
int32_t function_1000d140(void);
int32_t function_1000d150(int32_t a1);
int32_t function_1000d190(int32_t a1);
int32_t function_1000d1e0(int32_t a1, int32_t a2);
int32_t function_1000d290(void);
int32_t function_1000d2e0(void);
int32_t function_1000d2f0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000d340(void);
int32_t function_1000d350(int32_t a1);
int32_t function_1000d360(int32_t result);
int32_t function_1000d370(int32_t a1);
int32_t function_1000d380(void);
int32_t function_1000d390(void);
int32_t function_1000d3a0(void);
int32_t function_1000d3b0(int32_t a1);
int32_t function_1000d3d0(void);
int32_t function_1000d3e0(void);
int32_t function_1000d3f0(int32_t a1);
int32_t function_1000d400(void);
int32_t function_1000d410(void);
int32_t function_1000d420(void);
int32_t function_1000d440(void);
int32_t function_1000d450(void);
int32_t function_1000d470(int32_t a1);
int32_t function_1000d510(int32_t a1);
int32_t function_1000d640(int32_t a1);
int32_t function_1000d680(int32_t a1);
int32_t function_1000d760(int32_t a1);
int32_t function_1000d830(int32_t a1);
int32_t function_1000d870(void);
int32_t function_1000d880(int32_t a1);
int32_t function_1000d8a0(void);
int32_t function_1000d8b0(int32_t a1);
int32_t function_1000d8d0(int32_t a1);
int32_t function_1000d8f0(char a1);
int32_t function_1000d920(int32_t a1);
int32_t function_1000d9b0(int32_t a1, int32_t a2);
int32_t function_1000da70(void);
int32_t function_1000dae0(void);
int32_t function_1000daf0(void);
int32_t function_1000db00(int32_t a1, int32_t result, int32_t a3, int32_t a4, unsigned char a5, int32_t a6, unsigned char a7, int32_t a8, int32_t a9);
int32_t function_1000ddb0(void);
int32_t function_1000ddc0(void);
int32_t function_1000ddd0(void);
int32_t function_1000dde0(void);
int32_t function_1000ddf0(void);
int32_t function_1000de00(char a1);
int32_t function_1000de50(int32_t * a1, int32_t a2);
int32_t function_1000de60(void);
int32_t function_1000de70(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4, int32_t * a5, int32_t a6, int32_t a7, int32_t a8);
int32_t function_1000dec0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);
int32_t function_1000df70(void);
int32_t function_1000e070(int32_t a1);
int32_t function_1000e0e0(int32_t a1, int32_t a2);
int32_t function_1000e1f0(int32_t a1);
int32_t function_1000e250(int32_t a1);
int32_t function_1000e2c0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, char a8, int32_t a9);
int32_t function_1000e3b0(int32_t a1);
int32_t function_1000e4b0(int32_t a1);
int32_t function_1000e5b0(int32_t a1);
int32_t function_1000e5f0(int32_t * a1);
int32_t function_1000e6f0(int32_t a1, int32_t a2);
int32_t function_1000e7b0(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000ed60(int32_t result, int32_t a2);
int32_t function_1000edc0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000ee40(int32_t a1);
int32_t function_1000eec0(void);
int32_t function_1000ef30(void);
int32_t function_1000ef50(int32_t a1, int32_t a2);
int32_t function_1000efc0(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000f030(char a1, int32_t a2);
int32_t function_1000f200(int32_t a1);
int32_t function_1000f240(int32_t a1);
int32_t function_1000f2b0(int32_t a1);
int32_t function_1000f390(int32_t a1);
int32_t function_1000f3c0(int32_t a1);
int32_t function_1000f400(int32_t a1, int32_t a2, int32_t a3);
int32_t function_1000f4e0(int32_t a1);
int32_t function_1000f560(void);
int32_t function_1000f590(int32_t a1);
int32_t function_1000f6c0(int32_t a1);
int32_t function_1000f750(int32_t a1);
int32_t function_1000f850(int32_t * a1, int32_t a2, int32_t a3, int32_t a4);
int32_t function_1000f970(int32_t * a1, int32_t a2);
int32_t function_1000f9c0(void);
int32_t function_1000f9f0(int32_t * a1);
int32_t function_1000fa20(void);
int32_t function_1000fa60(int32_t a1);
int32_t function_1000fde0(void);
int32_t function_1000ffd9(void);
int32_t function_10010171(void);
int32_t function_10010248(void);
int32_t function_10010aca(void);
int32_t function_10010d12(void);
int32_t function_10010f28(void);
int32_t function_1001102e(void);
int32_t function_100110ea(void);
int32_t function_100110f4(int32_t a1, char * a2, int32_t a3, int32_t a4);
int32_t function_10011126(void);
int32_t function_1001162a(void);
int32_t function_1001192c(void);
int32_t function_10011fb1(void);
int32_t function_10011fc0(void);
int32_t function_10011fc6(int32_t a1);
int32_t function_10011fd7(int32_t a1);
int32_t function_10011fed(int32_t a1);
int32_t function_10011ffd(void);
int32_t function_100120f8(void);
int32_t function_1001210c(void);
int32_t function_10012330(void);
int32_t function_10012360(int32_t result, char * a2);
int32_t function_100128e0(int32_t a1);
int32_t function_10012c64(int32_t a1, int32_t a2);
int32_t function_10012c91(int32_t a1);
int32_t function_10012dd7(int32_t a1);
int32_t function_100147fa(void);
int32_t function_100151a3(int32_t a1, int32_t result);
int32_t function_10015f65(void);
int32_t function_10016116(void);
int32_t function_10016145(void);
int32_t function_1001691e(void);
int32_t function_10016d74(void);
int32_t function_1001713d(void);
int32_t function_10017226(int32_t a1);
int32_t function_100173c2(void);
int32_t function_100177fd(void);
int32_t function_10017ac4(void);
int32_t function_10017e93(void);
int32_t function_10017e9c(void);
int32_t function_10018217(void);
int32_t function_10018348(void);
int32_t function_10018351(void);
int32_t function_10018507(void);
int32_t function_10018513(void);
int32_t function_10018a1f(void);
int32_t function_10018bff(void);
int32_t function_10018c0e(void);
int32_t function_10018c12(int32_t a1);
int32_t function_1001b52f(void);
int32_t function_1001b536(int32_t a1);
int32_t function_1001bab8(void);
int32_t function_1001c694(void);
int32_t function_1001ce67(void);
int32_t function_1001d286(void);
int32_t function_1001d388(void);
int32_t function_1001d391(void);
int32_t function_1001d446(void);
int32_t function_1001d520(void);
int32_t function_1001dcf2(void);
int32_t function_1001e1dc(void);
int32_t function_100213d0(void (*func)());
int32_t function_10021400(void);
int32_t function_10021420(void);
int32_t function_10021480(void);
int32_t function_10021490(void);
int32_t function_100214f0(void);
int32_t function_10021540(void (*func)());
int32_t function_10021550(void);
int32_t function_10021570(void);
int32_t function_10021630(void);
int32_t LauncherMain(int32_t a1);

// --------------------- Global Variables ---------------------

int32_t g1 = 0; // eax
int32_t g2 = 0; // ebp
int32_t g3 = 0; // ebx
int32_t g4 = 0; // ecx
int32_t g5 = 0; // edi
int32_t g6 = 0; // edx
int32_t g7 = 0; // esi
int32_t g8 = 0; // esp
int3_t g9 = 0; // fpu_stat_TOP
bool (*g10)(int32_t) = (bool (*)(int32_t))0x15ff026a;
int32_t g11 = 92;
int32_t g12 = 59;
int32_t g13 = 46;
int32_t g14 = 0;
int32_t g17 = 34;
int32_t g19 = 10;
int32_t g21 = 0x100112ce;
int32_t g22 = 0x100112ce;
int32_t g24 = 0x100090d0;
int32_t g25 = 110;
int32_t g30 = 0x100112ce;
int32_t g33 = 0x1000d8b0;
int32_t g34 = 0x1000de00;
int32_t g35 = 48;
int32_t g36 = 0x100112ad;
char * g37;
int32_t g38 = 0x6000006;
int32_t g39 = 1;
char * g43[2] = {
    "CONNECTION",
    "PREINITIALIZATION"
};
char * g44[8] = {
    "INITIALIZATION",
    "POSTINITIALIZATION",
    "RUNNING",
    "PRESHUTDOWN",
    "SHUTDOWN",
    "POSTSHUTDOWN",
    "DISCONNECTION",
    "DESTRUCTION"
};
char (*g47)[15] = "VEngineCvar007";
int32_t g48; // 0x1002825c
char (*g49)[8] = "unknown";
int32_t g50 = 0;
char (*g51)[5] = "NULL";
int32_t g52 = 0;
int32_t g53 = 0;
int32_t g54 = 10;
int32_t g56 = 127;
int32_t g58 = -1;
int32_t g59; // 0x100286fc
int32_t g60 = 238;
int32_t g62 = 0x1001b52f;
int32_t g63 = 0x1001b52f;
int32_t g64 = 0x1001b52f;
int32_t g65 = -0x44bf19b2;
char (*g66)[7] = "(null)";
int16_t (*g67)[7] = L"(null)";
int32_t g68 = -1;
int32_t g69 = -1;
int32_t g70 = 0;
char g71 = 0;
char g72 = 0;
int32_t g73 = 0;
int32_t g74 = 0;
char * g75;
char * g76;
int32_t g77 = 0;
char g78 = 0;
int32_t g79 = 0;
int32_t g80 = 0;
int32_t g81 = 0;
int32_t g82 = 0;
char g83 = 0;
int32_t g84 = 0;
char * g85;
int32_t g86 = 0;
int32_t g87 = 0;
int32_t g88 = 0;
int32_t g89 = 0;
int32_t g90 = 0;
int32_t g91 = 0;
int32_t g92 = 0;
int32_t g93 = 0;
char g94 = 0;
int16_t * g95 = NULL;
int16_t g96 = 0;
int16_t g97 = 0;
int32_t g98 = 0;
char g99 = 0;
int32_t g100 = 0;
int32_t g101 = 0;
int32_t g102 = 0;
int32_t g103 = 0;
int32_t g104 = 0;
int32_t g105 = 0;
char g106 = 0;
int32_t g107 = 0;
int32_t g108 = 0;
char g109 = 0;
int32_t g110 = 0;
int32_t g111 = 0;
int32_t g112 = 0;
int32_t g113 = 0;
int32_t g114 = 0;
int32_t g115 = 0;
int32_t g116 = 0;
int32_t g117 = 0;
int32_t g118 = 0;
int32_t g119 = 0;
int32_t g120 = 0;
int32_t g121 = 0;
char g122 = 0;
int32_t g123 = 0;
char * g124;
int32_t g125 = 0;
int32_t g126 = 0;
int32_t g127 = 0;
int32_t g128 = 0;
int32_t g129 = 0;
int32_t g130 = 0;
char g131 = 0;
int32_t g132 = 0;
int32_t g133 = 0;
int32_t g134 = 0;
int32_t g135 = 0;
int32_t g136 = 0;
int32_t g137 = 0;
char g138 = 0;
int32_t g139 = 0;
int32_t g140 = 0;
int32_t g141 = 0;
int32_t g142 = 0;
int32_t g143 = 0;
int16_t * g144 = NULL;
int16_t g145 = 0;
int16_t g146 = 0;
int32_t g147 = 0;
char g148 = 0;
char g149 = 0;
char g150 = 0;
int32_t g151 = 0;
int32_t g152 = 0;
int32_t g153 = 0;
int32_t g154 = 0;
int32_t g155 = 0;
int32_t g156 = 0;
int32_t g157 = 0;
int32_t g158 = 0;
int32_t g159 = 0;
int32_t g160 = 0;
int32_t g161 = 0;
int32_t g162 = 0;
float80_t g163 = 0.0L; // st7
int32_t g164;
int32_t g165;
int32_t g166;
int32_t g167;
int32_t g168;
int32_t g169;
int128_t g170 = 0; // xmm0
struct vtable_10022bd4_type g15 = {
    .e0 = function_10002b40
};
struct vtable_10022bf8_type g16 = {
    .e0 = function_10002bc0
};
struct vtable_10022ce4_type g18 = {
    .e0 = function_10002520,
    .e1 = function_10004a30,
    .e2 = function_10004c60,
    .e3 = function_10002820,
    .e4 = __heap_term,
    .e5 = function_10004c30,
    .e6 = function_10002830,
    .e7 = function_10009050,
    .e8 = function_10008b50,
    .e9 = function_100070b0,
    .e10 = function_10007180
};
struct vtable_10023154_type g20 = {
    .e0 = function_10006f50,
    .e1 = __heap_term,
    .e2 = function_10005710,
    .e3 = function_100067a0,
    .e4 = function_10005730
};
struct vtable_1002367c_type g23 = {
    .e0 = function_10009240
};
struct vtable_10023ea8_type g26 = {
    .e0 = function_1000bea0
};
struct vtable_10023eb0_type g27 = {
    .e0 = function_1000bf00
};
struct vtable_10023eb8_type g28 = {
    .e0 = function_1000bdf0
};
struct vtable_10023f50_type g29 = {
    .e0 = function_1000d8f0,
    .e1 = function_10004c60,
    .e2 = function_1000d350,
    .e3 = function_1000d360,
    .e4 = function_1000d370,
    .e5 = function_1000d380,
    .e6 = function_1000d340,
    .e7 = function_1000d390,
    .e8 = function_1000d3a0,
    .e9 = function_1000d2e0,
    .e10 = function_1000d2f0,
    .e11 = function_1000d450
};
struct vtable_10023ff4_type g31 = {
    .e0 = function_1000d8b0,
    .e1 = function_1000d8a0,
    .e2 = function_1000d880,
    .e3 = function_1000d870,
    .e4 = function_1000daf0,
    .e5 = function_1000d420,
    .e6 = function_1000dae0,
    .e7 = __wcsdup
};
struct vtable_1002401c_type g32 = {
    .e0 = function_1000de00,
    .e1 = function_1000d440,
    .e2 = function_1000d3b0,
    .e3 = function_1000d3f0,
    .e4 = function_1000d370,
    .e5 = function_1000d3d0,
    .e6 = function_1000d410,
    .e7 = function_1000d3e0,
    .e8 = function_1000d400,
    .e9 = function_1000d2e0,
    .e10 = function_1000d2f0,
    .e11 = function_1000d450,
    .e12 = function_1000d510,
    .e13 = function_1000d680,
    .e14 = function_1000d760,
    .e15 = function_1000d830,
    .e16 = function_1000d640,
    .e17 = function_1000d9b0,
    .e18 = function_1000db00
};
char * g40[7] = {
    ".dem",
    "playdemo",
    ".sav",
    "load",
    ".bsp",
    "map",
    (char *)&g15
};
int32_t * g41 = (int32_t *)&g15;
int32_t * g42 = &g111;
int32_t * g46 = (int32_t *)&g23;
int32_t ** g45 = &g46;
int32_t * g55 = &g25;
int32_t * g57 = &g14;
int32_t * g61 = &g162;

// ------------------------ Functions -------------------------

// Address range: 0x10001000 - 0x1000105d
int32_t function_10001000(int32_t a1, int32_t a2) {
    // 0x10001000
    __chkstk();
    g4 = a2;
    int32_t v1; // bp+12
    int32_t v2; // bp-4100
    function_10009ac0(&v2, 0x1000, a2, &v1);
    g4 = a1;
    int32_t v3; // bp-8196
    function_10009a90(&v3, 0x1000, "%s=%s");
    g4 = &v3;
    return __putenv((char *)&v3);
}

// Address range: 0x10001060 - 0x1000108f
int32_t function_10001060(int32_t a1, int32_t a2) {
    int32_t v1 = g7; // 0x10001063
    g7 = a1;
    int32_t v2 = g5; // 0x10001067
    g5 = a2;
    __getcwd((char *)a1, a2);
    function_10009650(g7, &g11, g5, -1);
    int32_t v3 = g7; // 0x10001082
    g5 = v2;
    g7 = v1;
    return function_10009740(v3, 92);
}

// Address range: 0x10001090 - 0x100010a1
int32_t function_10001090(int32_t a1) {
    int32_t result = g4; // 0x10001090
    g4 = 0;
    *(int32_t *)result = 0;
    *(int16_t *)(result + 4) = 256;
    *(int16_t *)(result + 7) = (int16_t)g4;
    return result;
}

// Address range: 0x100010b0 - 0x100010be
int32_t function_100010b0(void) {
    int32_t result = g4; // 0x100010b0
    g4 = 0;
    *(char *)result = 1;
    *(int32_t *)(result + 4) = g4;
    *(int32_t *)(result + 8) = g4;
    return result;
}

// Address range: 0x100010c0 - 0x100010f4
int32_t function_100010c0(char * a1) {
    int32_t v1 = CommandLine(); // 0x100010c9
    int32_t v2 = CommandLine(); // 0x100010cd
    g4 = v1;
    g4 = v2;
    g5 = (int32_t)"-vproject";
    g7 = *(int32_t *)v1;
    g3 = (int32_t)"-game";
    return *(int32_t *)(*(int32_t *)v2 + 32);
}

// Address range: 0x10001100 - 0x1000116e
int32_t function_10001100(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x10001106
    g4 = v3;
    function_10009a60(&v2, a1, 260);
    function_10009910(&v2, 260);
    g4 = v3;
    function_10009650(v3, (int32_t *)a2, 260, -1);
    g6 = v3;
    function_10009740(v3, 92);
    int32_t v4 = __access((char *)&v2, 0); // 0x1000115d
    g2 = v1;
    return (int32_t)(v4 == 0) | v4 & -256;
}

// Address range: 0x10001170 - 0x10001268
int32_t function_10001170(int32_t a1, int32_t a2) {
    // 0x10001170
    __chkstk();
    int32_t v1 = 0x2000; // bp-8
    int32_t v2; // bp-8456
    int32_t v3 = &v2; // 0x10001186
    g4 = v3;
    function_10009a60(&v2, a1, 0x2000);
    g6 = v3;
    function_10009740(v3, 92);
    int32_t v4; // bp-264
    int32_t v5 = &v4; // 0x100011a9
    g4 = v5;
    function_10009a60(&v4, a2, 260);
    g6 = v5;
    function_10009740(v5, 92);
    int32_t v6; // bp-263
    int32_t v7 = &v6; // 0x100011cc
    g6 = v7;
    int32_t v8 = v5; // 0x100011d2
    unsigned char v9 = *(char *)v8; // 0x100011d0
    int32_t v10 = (int32_t)v9 | g4 & -256; // 0x100011d0
    g4 = v10;
    int32_t v11 = v8 + 1; // 0x100011d2
    while (v9 != 0) {
        // 0x100011d0
        v8 = v11;
        v9 = *(char *)v8;
        v10 = (int32_t)v9 | v10 & -256;
        g4 = v10;
        v11 = v8 + 1;
    }
    int32_t v12 = &v1; // 0x10001180
    int32_t v13 = v11 - v7; // 0x100011d7
    if (v13 == 0) {
        goto lab_0x100011f4;
    } else {
        char * v14 = (char *)(v13 - 261 + g2); // 0x100011db
        if (*v14 == 92) {
            // 0x100011f1
            *v14 = 0;
            goto lab_0x100011f4;
        } else {
            // 0x100011ec
            if (*v14 != 47) {
                goto lab_0x100011f4;
            } else {
                // 0x100011f1
                *v14 = 0;
                goto lab_0x100011f4;
            }
        }
    }
  lab_0x10001240:;
    // 0x10001240
    int32_t v15; // 0x10001229
    if (*(char *)(v15 + 1) == 59) {
        // break -> 0x10001261
        goto lab_0x10001261;
    }
    goto lab_0x10001246;
  lab_0x10001246:
    // 0x10001246
    g6 = v5;
    int32_t v16; // 0x10001253
    *(int32_t *)(v16 - 4) = v5;
    *(int32_t *)(v16 - 8) = v15;
    int32_t v17 = function_10009580(&g169, &g169); // 0x1000124e
    v16 = g8 + 8;
    int32_t result; // 0x1000125a
    if (v17 == 0) {
        result = v17 & -256;
        goto lab_0x1000125a_2;
    }
    goto lab_0x10001210;
  lab_0x100011f4:
    // 0x100011f4
    v1 = g7;
    g4 = v3;
    int32_t v24 = function_10009580(&v2, &v4); // 0x10001203
    if (v24 == 0) {
        v16 = v12;
        result = 0;
      lab_0x1000125a_2:
        // 0x1000125a
        g7 = *(int32_t *)v16;
        return result;
    }
    v16 = v12;
    v17 = v24;
    while (true) {
      lab_0x10001210:
        // 0x10001210
        g4 = v5;
        g7 = v7;
        int32_t v18 = g6; // 0x10001220
        int32_t v19 = v5; // 0x10001222
        unsigned char v20 = *(char *)v19; // 0x10001220
        int32_t v21 = v19 + 1; // 0x10001222
        g4 = v21;
        while (v20 != 0) {
            // 0x10001220
            v18 = (int32_t)v20 | v18 & -256;
            v19 = v21;
            v20 = *(char *)v19;
            v21 = v19 + 1;
            g4 = v21;
        }
        int32_t v22 = v21 - v7; // 0x10001227
        g4 = v22;
        v15 = v22 + v17;
        unsigned char v23 = *(char *)v15; // 0x1000122b
        g4 = (int32_t)v23 | v22 & -256;
        if (v23 == 0) {
            // break -> 0x10001261
            break;
        }
        if (v23 == 59) {
            // break -> 0x10001261
            break;
        }
        if (v23 == 92) {
            goto lab_0x10001240;
        } else {
            if (v23 != 47) {
                goto lab_0x10001246;
            } else {
                goto lab_0x10001240;
            }
        }
    }
  lab_0x10001261:
    // 0x10001261
    g7 = *(int32_t *)v16;
    return v15 & -256 | 1;
}

// Address range: 0x10001270 - 0x1000127d
int32_t function_10001270(int32_t result, int32_t a2) {
    // 0x10001270
    g39 = result;
    return result;
}

// Address range: 0x10001280 - 0x10001394
int32_t function_10001280(int32_t * a1, int32_t a2) {
    // 0x10001280
    g7 = (int32_t)a1;
    *(char *)a1 = 0;
    char * v1; // bp-284
    int32_t v2; // bp-288
    if (g71 != 0) {
        int32_t v3 = CommandLine(); // 0x100012a1
        int32_t v4 = CommandLine(); // 0x100012a5
        int32_t v5 = *(int32_t *)v4; // 0x100012a7
        g5 = v5;
        v1 = "-game";
        g4 = v4;
        v2 = *(int32_t *)v3;
        g3 = (int32_t)"-vproject";
        if (*(int32_t *)(v5 + 32) == 0) {
            // 0x100012cf
            if (_getenv("VProject") == NULL) {
                // 0x100012ff
                g5 = v2;
                g7 = *(int32_t *)((int32_t)&v2 + 4);
                return 0;
            }
        }
        // 0x100012e0
        g4 = a2;
        int32_t v6 = function_10009a90((int32_t *)g7, a2, "%s%c..%cbin"); // 0x100012ef
        g5 = v2;
        g7 = (int32_t)v1;
        return v6 & -256 | 1;
    }
    // 0x10001307
    g5 = a2;
    v1 = NULL;
    int32_t * moduleHandle = GetModuleHandleA(NULL); // 0x1000130e
    v2 = (int32_t)moduleHandle;
    if (GetModuleFileNameA(moduleHandle, (char *)&g169, (int32_t)&g169) == 0) {
        // 0x100012ff
        g5 = v2;
        g7 = *(int32_t *)(g8 + 4);
        return 0;
    }
    // 0x1000131f
    function_10009700(g7);
    function_10009740(g7, 92);
    char v7; // bp-264
    function_10009ff0(g7, 4, (int32_t *)&v7, 260);
    if (v7 == 92) {
        // 0x1000134d
        int32_t v8; // bp-263
        if (function_100094b0(&v8, "bin") == 0) {
            // 0x1000138c
            g5 = v2;
            g7 = (int32_t)v1;
            return 1;
        }
    }
    // 0x10001365
    function_10009650(g7, &g11, g5, -1);
    function_10009650(g7, (int32_t *)"bin", g5, -1);
    int32_t result = function_10009740(g7, 92) & -256 | 1; // 0x1000138d
    // 0x1000138c
    g5 = v2;
    g7 = (int32_t)v1;
    return result;
}

// Address range: 0x100013a0 - 0x1000140f
int32_t function_100013a0(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-276
    int32_t v3 = &v2; // 0x100013a3
    function_10001280(&v2, 260);
    g4 = v3;
    function_10009910(&v2, 260);
    g6 = v3;
    function_10009650(v3, (int32_t *)"vconfig.exe", 260, -1);
    g4 = &v3;
    return __spawnv(1, (char *)&v2, (char **)&v3);
}

// Address range: 0x10001410 - 0x10001498
int32_t function_10001410(int32_t a1, int32_t result, char * a3) {
    int32_t v1 = (int32_t)a3; // 0x10001413
    g4 = v1;
    int32_t v2; // bp+16
    function_10009ac0(&g70, 256, v1, &v2);
    Warning();
    if ((char)a1 != 0) {
        // 0x10001443
        if (g39 == 1) {
            int32_t v3 = CommandLine(); // 0x1000144c
            g4 = v3;
            if (*(int32_t *)(*(int32_t *)v3 + 40) == 0) {
                // 0x10001464
                if (function_100010c0("-NoVConfig") == 0) {
                    // 0x1000146d
                    function_100013a0();
                }
            }
        }
    }
    // 0x10001472
    if (g39 != 0) {
        if (g39 != 1) {
            // 0x10001493
            g2 = *(int32_t *)g8;
            return result;
        }
    }
    // 0x10001480
    *(int32_t *)(g8 - 4) = (int32_t)&g70;
    *(int32_t *)(g8 - 8) = (int32_t)"%s\n";
    Error();
    // 0x10001493
    g2 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x100014a0 - 0x100015e2
int32_t function_100014a0(int32_t * a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x100014a0
    __chkstk();
    int32_t v1; // bp-264
    int32_t v2 = &v1; // 0x100014ad
    int32_t v3 = v2; // bp-12
    char v4 = function_10001280(&v1, 260); // 0x100014c1
    if (v4 == 0) {
        if ((char)a4 == v4) {
            // 0x100014e1
            v3 = 3;
            return function_10001410(0, 3, "FileSystem_GetExecutableDir failed.");
        }
        // 0x100014ca
        Warning();
        return 3;
    }
    int32_t v5 = &v3; // 0x100014b8
    g7 = (int32_t)a1;
    v3 = g5;
    g5 = a2;
    g4 = v2;
    function_10009a60(a1, v2, a2);
    int32_t v6; // 0x100015b7
    char v7; // 0x1000153e
    while (true) {
        // 0x10001510
        *(int32_t *)(v5 - 4) = (int32_t)"steam.dll";
        *(int32_t *)(v5 - 8) = g7;
        int32_t v8 = function_10001100((int32_t)&g169, (int32_t)&g169); // 0x10001516
        g1 = v8;
        int32_t v9;
        if ((char)v8 != 0) {
            // 0x10001522
            *(int32_t *)(g8 + 4) = (int32_t)"steamapp.cfg";
            *(int32_t *)g8 = g7;
            int32_t v10 = function_10001100((int32_t)&g169, (int32_t)&g169); // 0x10001528
            g1 = v10;
            if ((char)v10 == 0) {
                // 0x1000156c
                g5 = a3;
                *(int32_t *)(g8 + 4) = 0x2000;
                int32_t v11; // bp-8456
                int32_t v12 = &v11; // 0x10001577
                *(int32_t *)g8 = v12;
                *(int32_t *)(g8 - 4) = *(int32_t *)(a3 + 100);
                GetEnvironmentVariableA((char *)&g169, (char *)&g169, (int32_t)&g169);
                g4 = v12;
                *(int32_t *)(g8 - 4) = g7;
                *(int32_t *)(g8 - 8) = v12;
                int32_t v13 = function_10001170((int32_t)&g169, (int32_t)&g169); // 0x1000158d
                if ((char)v13 != 0) {
                    v6 = g8 + 8;
                    goto lab_0x100015b7;
                } else {
                    // 0x10001599
                    *(int32_t *)(g8 + 4) = g7;
                    *(int32_t *)g8 = (int32_t)&g12;
                    *(int32_t *)(g8 - 4) = v12;
                    *(int32_t *)(g8 - 8) = (int32_t)"%s%s%s";
                    int32_t v14 = g5 + 96; // 0x100015ab
                    g5 = v14;
                    *(int32_t *)(g8 - 12) = v14;
                    function_10001000((int32_t)&g169, (int32_t)&g169);
                    v6 = g8 + 20;
                    goto lab_0x100015b7;
                }
            }
            v9 = g8;
        } else {
            v9 = g8;
        }
        // 0x10001534
        *(int32_t *)(v9 + 4) = g5;
        *(int32_t *)v9 = g7;
        v7 = function_10009c90((int32_t)&g169, (int32_t)&g169);
        if (v7 == 0) {
            // break -> 0x10001542
            break;
        }
        v5 = g8 + 8;
    }
    if ((char)a4 == v7) {
        // 0x100015bf
        g4 = v2;
        *(int32_t *)(g8 + 4) = v2;
        *(int32_t *)g8 = (int32_t)"steam.dll";
        *(int32_t *)(g8 - 4) = (int32_t)"Can't find %s relative to executable path: %s.";
        *(int32_t *)(g8 - 8) = 5;
        *(int32_t *)(g8 - 12) = 0;
        int32_t result = function_10001410((int32_t)&g169, (int32_t)&g169, (char *)&g169); // 0x100015d4
        g5 = *(int32_t *)(g8 + 20);
        g7 = *(int32_t *)(g8 + 24);
        return result;
    }
    // 0x10001547
    *(int32_t *)(g8 + 4) = v2;
    *(int32_t *)g8 = (int32_t)"steam.dll";
    *(int32_t *)(g8 - 4) = (int32_t)"Can't find %s relative to executable path: %s.\n";
    Warning();
    g5 = *(int32_t *)(g8 + 12);
    g7 = *(int32_t *)(g8 + 16);
    return 5;
  lab_0x100015b7:
    // 0x100015b7
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    return 0;
}

// Address range: 0x100015f0 - 0x10001657
int32_t function_100015f0(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    char * v2 = "EXECUTABLE_PATH"; // bp-272
    g4 = a1;
    int32_t v3; // bp-264
    if ((char)function_10001280(&v3, 260) != 0) {
        // 0x10001639
        g4 = g7;
        g7 = &v3;
        g2 = v1;
        return 0;
    }
    int32_t result = function_10001410(0, 3, "FileSystem_GetExecutableDir failed."); // 0x1000162c
    g7 = (int32_t)v2;
    g2 = v1;
    return result;
}

// Address range: 0x10001660 - 0x100016c0
int32_t function_10001660(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x10001666
    g4 = v3;
    *(char *)a3 = 0;
    if ((char)function_10001280((int32_t *)v3, 260) == 0) {
        // 0x10001687
        return function_10001410(0, 3, "FileSystem_GetExecutableDir failed.");
    }
    // 0x1000169c
    g4 = a1;
    function_10009a90((int32_t *)a1, a2, "%s%cfilesystem_stdio.dll");
    return 0;
}

// Address range: 0x100016c0 - 0x1000172c
int32_t function_100016c0(void) {
    int32_t v1 = g7; // bp-520
    int32_t v2 = g4; // 0x100016ca
    g7 = v2;
    int32_t result; // 0x10001722
    if ((char)v2 == 0) {
        // 0x1000171f
        g4 = v2 + 12;
        result = function_1000da70();
        g7 = v1;
        return result;
    }
    // 0x100016d1
    if (*(char *)(v2 + 8) != 0) {
        // 0x100016d7
        function_10001000(v2, (int32_t)"%s");
        g4 = g7 + 12;
        int32_t result2 = function_1000da70(); // 0x100016ec
        g7 = v1;
        return result2;
    }
    // 0x100016f6
    g4 = *(int32_t *)(v2 + 4);
    int32_t v3; // bp-516
    function_10009a90(&v3, 512, "%s=");
    __putenv((char *)&v3);
    // 0x1000171f
    g4 = g7 + 12;
    result = function_1000da70();
    g7 = v1;
    return result;
}

// Address range: 0x10001730 - 0x100018d8
int32_t function_10001730(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x10001733
    g3 = a1;
    int32_t v4 = __malloc_crt(a1); // 0x1000173f
    g5 = v4;
    function_10009a60((int32_t *)v4, g7, g3);
    int32_t v5 = g3 + g5; // 0x1000174e
    g4 = v5;
    *(char *)(v5 - 1) = 0;
    int32_t v6 = g5; // 0x10001758
    int32_t v7 = v6; // eax
    int32_t v8 = g4; // 0x1000175a
    if (v6 < v8) {
        while (true) {
            char * v9 = (char *)v6; // 0x10001760
            int32_t v10; // 0x10001768
            int32_t v11; // 0x10001769
            if (*v9 == 92) {
                // 0x10001765
                *v9 = 47;
                v11 = g4;
                v10 = v7;
            } else {
                v11 = v8;
                v10 = v6;
            }
            int32_t v12 = v10 + 1; // 0x10001768
            v7 = v12;
            if (v12 >= v11) {
                // break -> 0x10001770
                break;
            }
            v8 = v11;
            v6 = v12;
        }
    }
    int32_t v13 = g8; // 0x10001770
    int32_t v14; // 0x100017c7
    while (true) {
        // 0x10001770
        *(int32_t *)(v13 - 4) = 260;
        *(int32_t *)(v13 - 8) = g7;
        *(int32_t *)(v13 - 12) = v3;
        function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
        g4 = v3;
        *(int32_t *)(g8 - 4) = 260;
        *(int32_t *)(g8 - 8) = v3;
        function_10009910(&g169, (int32_t)&g169);
        *(int32_t *)(g8 - 4) = -1;
        *(int32_t *)(g8 - 8) = 260;
        g6 = v3;
        *(int32_t *)(g8 - 12) = (int32_t)"GameInfo.txt";
        *(int32_t *)(g8 - 16) = v3;
        function_10009650((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169);
        *(int32_t *)(g8 - 4) = 92;
        *(int32_t *)(g8 - 8) = v3;
        function_10009740((int32_t)&g169, (int32_t)&g169);
        g4 = v3;
        *(int32_t *)(g8 - 4) = 0;
        *(int32_t *)(g8 - 8) = v3;
        int32_t v15 = __access((char *)&g169, (int32_t)&g169); // 0x100017c2
        g1 = v15;
        v14 = g8 + 52;
        if (v15 == 0) {
            // break -> 0x100018c0
            break;
        }
        if ((char)a2 == 0) {
            goto lab_0x100017e6_2;
        }
        // 0x100017d8
        *(int32_t *)(g8 + 48) = g3;
        *(int32_t *)(g8 + 44) = g7;
        int32_t v16 = function_10009c90((int32_t)&g169, (int32_t)&g169); // 0x100017da
        int32_t v17 = g8 + 8; // 0x100017df
        if ((char)v16 == 0) {
            v14 = v17;
            goto lab_0x100017e6_2;
        }
        v13 = v17;
    }
    goto lab_0x100018c0;
  lab_0x100017e6_2:
    // 0x100017e6
    *(int32_t *)(v14 - 4) = g3;
    *(int32_t *)(v14 - 8) = g5;
    *(int32_t *)(v14 - 12) = g7;
    function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = (int32_t)"/content/";
    *(int32_t *)(g8 - 8) = g7;
    *(char *)(g7 - 1 + g3) = 0;
    int32_t v24 = function_10009640(); // 0x100017f9
    int32_t v19; // 0x10001833
    int32_t v18; // 0x100018a5
    if (v24 == 0) {
        v18 = g8 + 20;
        goto lab_0x100018a5;
    } else {
        // 0x1000180c
        *(int32_t *)(g8 + 16) = (int32_t)"/game/";
        *(int32_t *)(g8 + 12) = v24;
        _sprintf((char *)v24, (char *)&g169);
        v7 = v24;
        int32_t v25 = -9 - v24 + g7 + g3; // 0x1000181e
        g4 = v25;
        *(int32_t *)(g8 - 4) = v25;
        *(int32_t *)(g8 - 8) = v7 + 9;
        *(int32_t *)(g8 - 12) = v7 + 6;
        _memcpy(&g169, &g169, (int32_t)&g169);
        v19 = g8 + 20;
        goto lab_0x10001833;
    }
  lab_0x100018c0:
    // 0x100018c0
    *(int32_t *)(v14 - 4) = g5;
    _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
    *(int32_t *)(g8 - 4) = 0;
    _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
    g5 = *(int32_t *)(g8 + 8);
    g3 = *(int32_t *)(g8 + 12);
    g2 = v1;
    return 0;
  lab_0x100018a5:
    // 0x100018a5
    *(int32_t *)(v18 - 4) = g5;
    _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
    *(int32_t *)(g8 - 4) = 0;
    _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
    g5 = *(int32_t *)(g8 + 8);
    g3 = *(int32_t *)(g8 + 12);
    g2 = v1;
    return 1;
  lab_0x10001833:
    // 0x10001833
    *(int32_t *)(v19 - 4) = 260;
    *(int32_t *)(v19 - 8) = g7;
    *(int32_t *)(v19 - 12) = v3;
    function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
    g4 = v3;
    *(int32_t *)(g8 - 4) = 260;
    *(int32_t *)(g8 - 8) = v3;
    function_10009910(&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = -1;
    *(int32_t *)(g8 - 8) = 260;
    g6 = v3;
    *(int32_t *)(g8 - 12) = (int32_t)"GameInfo.txt";
    *(int32_t *)(g8 - 16) = v3;
    function_10009650((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = 92;
    *(int32_t *)(g8 - 8) = v3;
    function_10009740((int32_t)&g169, (int32_t)&g169);
    g4 = v3;
    *(int32_t *)(g8 - 4) = 0;
    *(int32_t *)(g8 - 8) = v3;
    int32_t v20 = __access((char *)&g169, (int32_t)&g169); // 0x10001885
    g1 = v20;
    int32_t v21 = g8 + 52; // 0x1000188a
    if (v20 == 0) {
        v14 = v21;
        goto lab_0x100018c0;
    } else {
        if ((char)a2 == 0) {
            v18 = v21;
            goto lab_0x100018a5;
        } else {
            // 0x10001897
            *(int32_t *)(g8 + 48) = g3;
            *(int32_t *)(g8 + 44) = g7;
            int32_t v22 = function_10009c90((int32_t)&g169, (int32_t)&g169); // 0x10001899
            int32_t v23 = g8 + 8; // 0x1000189e
            if ((char)v22 != 0) {
                v19 = v23;
                goto lab_0x10001833;
            } else {
                v18 = v23;
                goto lab_0x100018a5;
            }
        }
    }
}

// Address range: 0x100018e0 - 0x10001ace
int32_t function_100018e0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = a1;
    int32_t v2 = g7; // bp-8
    g7 = a1;
    if (*(char *)(a1 + 4) != 0) {
        int32_t v3 = *(int32_t *)a1; // 0x100018ed
        if (v3 == 0) {
            int32_t result = function_10001410(v3, 1, "bOnlyUseDirectoryName=1 and pDirectoryName=NULL."); // 0x100018fb
            g7 = v2;
            return result;
        }
        // 0x10001906
        if ((char)function_10001100(v3, (int32_t)"GameInfo.txt") == 0) {
            int32_t result2 = function_10001410(1, 1, "Setup file '%s' doesn't exist in subdirectory '%s'.\nCheck your -game parameter or VCONFIG setting."); // 0x10001929
            g7 = v2;
            return result2;
        }
        // 0x10001934
        g4 = a3;
        function_10009a60((int32_t *)a2, *(int32_t *)g7, a3);
        g7 = v2;
        return 0;
    }
    // 0x1000194c
    g5 = CommandLine();
    int32_t v4 = CommandLine(); // 0x10001958
    int32_t v5 = g5; // 0x1000195a
    g3 = v4;
    int32_t v6 = *(int32_t *)(*(int32_t *)v5 + 32); // 0x1000195e
    char * v7 = NULL; // bp-20
    char * v8 = "-game"; // bp-24
    g4 = v5;
    g6 = *(int32_t *)(*(int32_t *)v4 + 32);
    char * v9 = "-vproject"; // bp-32
    int32_t v10 = (int32_t)&v9; // 0x10001972
    g4 = v4;
    g7 = v6;
    if (v6 == 0) {
        // 0x100019d6
        g3 = a1;
        if (*(char *)(a1 + 8) == 0) {
            // 0x100019fb
            g5 = a3;
            g7 = a2;
            v1 = 1;
            if (g72 == 0) {
                goto lab_0x10001a2f;
            } else {
                // 0x10001a1e
                g4 = &v1;
                if (function_10001730(a1, a2) == 0) {
                    goto lab_0x100019f4;
                } else {
                    goto lab_0x10001a2f;
                }
            }
        } else {
            // 0x100019df
            function_10009a60((int32_t *)a2, (int32_t)&g14, a3);
            goto lab_0x100019f4;
        }
    } else {
        // 0x10001981
        if ((char)function_10001100(v6, (int32_t)"GameInfo.txt") != 0) {
            // 0x10001993
            g1 = a3;
            g4 = a2;
            function_10009e40(a2, a3, v6, 0);
            g5 = (int32_t)v9;
            g3 = v6;
            g7 = (int32_t)v8;
            g2 = (int32_t)v7;
            return 0;
        }
        // 0x100019ad
        if (*(char *)(v1 + 8) != 0) {
            // 0x100019ba
            g4 = a2;
            function_10009a60((int32_t *)a2, (int32_t)&g14, a3);
            g5 = (int32_t)v9;
            g3 = v6;
            g7 = (int32_t)v8;
            g2 = (int32_t)v7;
            return 0;
        }
        goto lab_0x10001aae;
    }
  lab_0x10001aae:;
    int32_t result3 = function_10001410(1, 1, "Unable to find %s. Solutions:\n\n1. Read http://www.valve-erc.com/srcsdk/faq.html#NoGameDir\n2. Run vconfig to specify which game you're working on.\n3. Add -game <path> on the command line where <path> is the directory that %s is in.\n"); // 0x10001ac1
    g5 = (int32_t)v9;
    g3 = v6;
    g7 = (int32_t)v8;
    g2 = (int32_t)v7;
    return result3;
  lab_0x10001a2f:;
    char * v11 = _getenv("VProject"); // 0x10001a34
    int32_t v12 = (int32_t)v11; // 0x10001a34
    g1 = v12;
    if (v11 == NULL) {
        goto lab_0x10001a59;
    } else {
        // 0x10001a40
        function_10009e40(g7, g5, v12, 0);
        if (function_10001730(g5, 0) == 0) {
            goto lab_0x100019f4;
        } else {
            goto lab_0x10001a59;
        }
    }
  lab_0x100019f4:
    // 0x100019f4
    g5 = *(int32_t *)&v9;
    g3 = *(int32_t *)(v10 + 4);
    g7 = *(int32_t *)(v10 + 8);
    g2 = *(int32_t *)(v10 + 12);
    return 0;
  lab_0x10001a59:
    // 0x10001a59
    Warning();
    int32_t v13 = *(int32_t *)g3; // 0x10001a64
    g1 = v13;
    int32_t v14 = v13 == 0 ? (int32_t)&g13 : v13; // 0x10001a79
    function_10009e40(g7, g5, v14, 0);
    if (function_10001730(g5, 1) == 0) {
        goto lab_0x100019f4;
    } else {
        // 0x10001a94
        function_10001060(g7, g5);
        if (function_10001730(g5, 1) == 0) {
            goto lab_0x100019f4;
        } else {
            goto lab_0x10001aae;
        }
    }
}

// Address range: 0x10001ad0 - 0x10001af3
int32_t function_10001ad0(void) {
    int32_t v1 = g7; // 0x10001ad0
    int32_t v2 = g4; // 0x10001ad1
    g7 = v2;
    g4 = v2 + 96;
    function_100016c0();
    g4 = g7 + 64;
    function_100016c0();
    g4 = g7 + 32;
    function_100016c0();
    g4 = g7;
    g7 = v1;
    return function_100016c0();
}

// Address range: 0x10001b00 - 0x10001bcf
int32_t function_10001b00(char * lpName) {
    // 0x10001b00
    __chkstk();
    int32_t result = g4; // 0x10001b0e
    int32_t v1 = 0; // eax
    *(int32_t *)(result + 12) = 0;
    *(int32_t *)(result + 16) = v1;
    *(int32_t *)(result + 20) = v1;
    *(int32_t *)(result + 24) = v1;
    *(int32_t *)(result + 28) = v1;
    int32_t lpBuffer; // bp-4100
    int32_t v2 = &lpBuffer; // 0x10001b2a
    g4 = v2;
    *(char *)result = 1;
    *(int32_t *)(result + 4) = (int32_t)lpName;
    if (GetEnvironmentVariableA(lpName, (char *)&lpBuffer, 0x1000) == 0) {
        // 0x10001bc1
        g7 = (int32_t)lpName;
        *(char *)(result + 8) = 0;
        g3 = v2;
        return result;
    }
    // 0x10001b42
    *(char *)(result + 8) = 1;
    int32_t v3 = v2; // 0x10001b52
    unsigned char v4 = *(char *)v3; // 0x10001b50
    int32_t v5 = (int32_t)v4 | g4 & -256; // 0x10001b50
    g4 = v5;
    int32_t v6 = v3 + 1; // 0x10001b52
    while (v4 != 0) {
        // 0x10001b50
        v3 = v6;
        v4 = *(char *)v3;
        v5 = (int32_t)v4 | v5 & -256;
        g4 = v5;
        v6 = v3 + 1;
    }
    // 0x10001b57
    int32_t v7; // bp-4099
    int32_t v8 = v6 - (int32_t)&v7 + 1; // 0x10001b5a
    g5 = v8;
    *(int32_t *)(result + 24) = 0;
    if (v8 != 0) {
        int32_t v9 = *(int32_t *)(result + 16); // 0x10001b68
        g1 = v9;
        if (v8 > v9) {
            // 0x10001b6f
            g4 = result + 12;
            function_1000c180(v8 - v9);
        }
        int32_t * v10 = (int32_t *)(result + 24); // 0x10001b7c
        *v10 = *v10 + v8;
        int32_t v11 = *(int32_t *)(result + 12); // 0x10001b82
        g4 = v11;
        int32_t v12 = *(int32_t *)(result + 24) - v8; // 0x10001b85
        *(int32_t *)(result + 28) = v11;
        if (v12 >= 1) {
            if (v8 >= 1) {
                // 0x10001b92
                *(int32_t *)(g8 - 4) = v12;
                *(int32_t *)(g8 - 8) = g4;
                int32_t v13 = g4 + v8; // 0x10001b94
                g4 = v13;
                *(int32_t *)(g8 - 12) = v13;
                _memcpy(&g169, &g169, (int32_t)&g169);
            }
        }
    }
    // 0x10001b9f
    *(int32_t *)(g8 - 4) = *(int32_t *)(result + 24);
    g4 = v2;
    *(int32_t *)(g8 - 8) = v2;
    *(int32_t *)(g8 - 12) = *(int32_t *)(result + 12);
    _memcpy2();
    g5 = *(int32_t *)(g8 + 12);
    g7 = *(int32_t *)(g8 + 16);
    g3 = *(int32_t *)(g8 + 20);
    return result;
}

// Address range: 0x10001bd0 - 0x10001cd7
int32_t function_10001bd0(int32_t * a1) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // bp-4
    g2 = &v2;
    int32_t v3; // bp-24
    int32_t v4 = &v3; // 0x10001bd6
    int32_t v5 = g3; // 0x10001bd9
    int32_t v6 = g5; // 0x10001bda
    int32_t v7 = function_100110f4(v1, "rb", v6, v5); // 0x10001be1
    g3 = v7;
    g5 = 0;
    if (v7 == 0) {
        // 0x10001bf1
        g5 = v6;
        g3 = v5;
        g2 = v2;
        return 0;
    }
    // 0x10001bf9
    v3 = 0;
    _fseek((struct _IO_FILE *)v7, 0, 2);
    int32_t v8 = _ftell((struct _IO_FILE *)g3); // 0x10001c10
    g1 = v8;
    uint32_t v9 = v8 + 1; // 0x10001c1a
    g7 = v9;
    int32_t v10 = g5; // 0x10001c1b
    int32_t v11;
    if (v9 != 0) {
        if (v9 >= 1) {
            // 0x10001c24
            g4 = v4;
            function_1000c180(v9);
            g5 = v3;
        } else {
            v3 = v10;
        }
        int32_t v12 = v10 + v9; // 0x10001c33
        if (v10 >= 1) {
            if (v9 >= 1) {
                // 0x10001c45
                *(int32_t *)(g8 - 4) = v10;
                int32_t v13 = g5; // 0x10001c46
                g4 = v13 + v9;
                *(int32_t *)(g8 - 8) = v13;
                *(int32_t *)(g8 - 12) = g4;
                _memcpy((int32_t *)v12, (int32_t *)v3, (int32_t)&g169);
                v11 = v12;
            } else {
                v11 = v12;
            }
        } else {
            v11 = v12;
        }
    } else {
        v11 = v10;
    }
    // 0x10001c53
    *(int32_t *)(g8 - 4) = 0;
    *(int32_t *)(g8 - 8) = 0;
    *(int32_t *)(g8 - 12) = g3;
    _fseek((struct _IO_FILE *)&g169, (int32_t)&g169, (int32_t)&g169);
    g7 = v11;
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g8 - 8) = g7 - 1;
    *(int32_t *)(g8 - 12) = 1;
    *(int32_t *)(g8 - 16) = g5;
    _fread(&g169, (int32_t)&g169, (int32_t)&g169, (struct _IO_FILE *)&g169);
    *(int32_t *)(g8 - 4) = g3;
    _fclose((struct _IO_FILE *)&g169);
    *(int32_t *)(g8 - 4) = 36;
    *(char *)(g5 - 1 + g7) = 0;
    int32_t v14 = function_1000a480((int32_t)&g169); // 0x10001c7a
    int32_t v15;
    int32_t v16; // 0x10001c9b
    if (v14 == 0) {
        // 0x10001c96
        v16 = g8 + 36;
        v15 = 0;
    } else {
        // 0x10001c86
        *(int32_t *)(g8 + 32) = (int32_t)&g14;
        g4 = v14;
        int32_t v17 = function_1000a4a0((int32_t)&g169); // 0x10001c8d
        v16 = g8;
        v15 = v17;
    }
    // 0x10001c98
    g7 = v15;
    g1 = v1;
    *(int32_t *)(v16 - 4) = 0;
    *(int32_t *)(v16 - 8) = 0;
    *(int32_t *)(v16 - 12) = 0;
    *(int32_t *)(v16 - 16) = g5;
    *(int32_t *)(v16 - 20) = g1;
    g4 = g7;
    int32_t v18 = function_1000b8a0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x10001ca5
    g1 = v18;
    if ((char)v18 != 0) {
        // 0x10001cc6
        g4 = v4;
        function_1000da70();
        int32_t result = g7; // 0x10001cce
        g7 = *(int32_t *)g8;
        g5 = *(int32_t *)(g8 + 4);
        g3 = *(int32_t *)(g8 + 8);
        g2 = v2;
        return result;
    }
    // 0x10001cae
    g4 = g7;
    function_1000a8a0();
    g4 = v4;
    function_1000da70();
    g7 = *(int32_t *)g8;
    g5 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = v2;
    return 0;
}

// Address range: 0x10001ce0 - 0x10001dc4
int32_t function_10001ce0(int32_t a1, int32_t * a2, int32_t * a3, int32_t * a4) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x10001ce6
    int32_t v4 = g7; // 0x10001cec
    g4 = v3;
    function_10009a60(&v2, a1, 260);
    function_10009910(&v2, 260);
    function_10009650(v3, (int32_t *)"GameInfo.txt", 260, -1);
    g4 = v3;
    function_10009740(v3, 92);
    int32_t v5 = function_10001bd0(&v2); // 0x10001d3d
    g7 = (int32_t)a2;
    *a2 = v5;
    if (v5 == 0) {
        int32_t result = function_10001410(1, 1, "%s is missing."); // 0x10001d5e
        g7 = v4;
        g2 = v1;
        return result;
    }
    // 0x10001d6b
    g4 = v5;
    int32_t v6 = function_1000a510("FileSystem", 0); // 0x10001d74
    g1 = v6;
    g4 = (int32_t)a3;
    *a3 = v6;
    if (v6 != 0) {
        char * v7 = "SearchPaths"; // bp-284
        g4 = v6;
        int32_t v8 = function_1000a510("SearchPaths", 0); // 0x10001daf
        g1 = v8;
        g4 = (int32_t)a4;
        *a4 = v8;
        if (v8 != 0) {
            // 0x10001dbd
            g7 = (int32_t)v7;
            g2 = v1;
            return 0;
        }
    }
    // 0x10001d82
    g4 = *(int32_t *)g7;
    function_1000a8a0();
    *(int32_t *)(g8 - 4) = v3;
    *(int32_t *)(g8 - 8) = (int32_t)"%s is not a valid format.";
    *(int32_t *)(g8 - 12) = 2;
    *(int32_t *)(g8 - 16) = 1;
    int32_t result2 = function_10001410((int32_t)&g169, (int32_t)&g169, (char *)&g169); // 0x10001d99
    g7 = *(int32_t *)(g8 + 16);
    g2 = v1;
    return result2;
}

// Address range: 0x10001dd0 - 0x10001eed
int32_t function_10001dd0(int32_t a1, int32_t * a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-524
    int32_t v3 = &v2; // 0x10001dd3
    g3 = a3;
    int32_t lpName = *(int32_t *)(a3 + 68); // 0x10001ddd
    g4 = lpName;
    int32_t lpBuffer; // bp-264
    int32_t v4 = &lpBuffer; // 0x10001de5
    int32_t result = GetEnvironmentVariableA((char *)lpName, (char *)&lpBuffer, 260); // 0x10001ded
    if (result != 0) {
        // 0x10001ee8
        g3 = *(int32_t *)g8;
        g2 = v1;
        return result;
    }
    // 0x10001dfb
    g4 = a1;
    int32_t v5 = g7; // bp-544
    g7 = 0;
    int32_t v6;
    int32_t v7; // 0x10001e33
    if (a1 == 0) {
        v7 = &v5;
        goto lab_0x10001e30;
    } else {
        char * v8 = "SteamAppUser"; // bp-552
        int32_t v9 = function_1000aa00("SteamAppUser", 0); // 0x10001e0b
        g7 = v9;
        if (v9 == 0) {
            // 0x10001e05
            v7 = g8;
            goto lab_0x10001e30;
        } else {
            // 0x10001e16
            function_10009a60(&lpBuffer, v9, 260);
            v6 = (int32_t)&v8;
            goto lab_0x10001ec3;
        }
    }
  lab_0x10001e30:
    // 0x10001e30
    *(int32_t *)(v7 - 4) = g5;
    *(int32_t *)(v7 - 8) = 260;
    *(int32_t *)(v7 - 12) = (int32_t)a2;
    g4 = v3;
    *(int32_t *)(v7 - 16) = v3;
    function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = 260;
    *(int32_t *)(g8 - 8) = v3;
    function_10009910(&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = -1;
    *(int32_t *)(g8 - 8) = 260;
    *(int32_t *)(g8 - 12) = (int32_t)"config\\SteamAppData.vdf";
    *(int32_t *)(g8 - 16) = v3;
    function_10009650((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169);
    g4 = v3;
    *(int32_t *)(g8 - 4) = v3;
    int32_t v10 = function_10001bd0(&g169); // 0x10001e76
    g5 = v10;
    int32_t v11; // 0x10001e98
    int32_t v12; // 0x10001ea6
    if (v10 == 0) {
        v11 = g8 + 40;
        goto lab_0x10001e98;
    } else {
        // 0x10001e84
        *(int32_t *)(g8 + 36) = 0;
        *(int32_t *)(g8 + 32) = (int32_t)"AutoLoginUser";
        g4 = v10;
        int32_t v13 = function_1000aa00((char *)&g169, (int32_t)&g169); // 0x10001e8d
        g7 = v13;
        if (v13 != 0) {
            v12 = g8;
            goto lab_0x10001ea6;
        } else {
            v11 = g8;
            goto lab_0x10001e98;
        }
    }
  lab_0x10001e98:
    // 0x10001e98
    *(int32_t *)(v11 - 4) = (int32_t)"Can't find steam app user info.";
    Error();
    v12 = g8 + 4;
    goto lab_0x10001ea6;
  lab_0x10001ea6:
    // 0x10001ea6
    *(int32_t *)(v12 - 4) = 260;
    *(int32_t *)(v12 - 8) = g7;
    *(int32_t *)(v12 - 12) = v4;
    g1 = function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
    g4 = v10;
    function_1000a8a0();
    g5 = *(int32_t *)g8;
    v6 = g8 + 4;
    goto lab_0x10001ec3;
  lab_0x10001ec3:
    // 0x10001ec3
    *(int32_t *)(v6 - 4) = v4;
    __strlwr((char *)&g169);
    g4 = v4;
    *(int32_t *)(g8 - 4) = v4;
    *(int32_t *)(g8 - 8) = (int32_t)"%s";
    *(int32_t *)(g8 - 12) = g3 + 64;
    int32_t result2 = function_10001000((int32_t)&g169, (int32_t)&g169); // 0x10001edf
    g7 = *(int32_t *)(g8 + 16);
    // 0x10001ee8
    g3 = *(int32_t *)(g8 + 20);
    g2 = v1;
    return result2;
}

// Address range: 0x10001ef0 - 0x1000200c
int32_t function_10001ef0(int32_t a1, int32_t a2, int32_t * a3) {
    int32_t v1 = (int32_t)a3;
    int32_t v2 = g2; // bp-4
    g2 = &v2;
    int32_t v3 = g5; // bp-792
    int32_t v4; // bp-264
    int32_t v5 = &v4; // 0x10001f04
    g4 = v5;
    function_10009a60(&v4, a2, 260);
    function_10009910(&v4, 260);
    function_10009650(v5, (int32_t *)"steaminfo.txt", 260, -1);
    g4 = v5;
    int32_t v6 = function_10001bd0(&v4); // 0x10001f40
    g5 = v1;
    int32_t v7; // bp-524
    int32_t result = function_100014a0(&v7, 260, v1, 0); // 0x10001f59
    if (result != 0) {
        // 0x10002006
        g5 = *(int32_t *)(int32_t)&v3;
        g2 = v2;
        return result;
    }
    // 0x10001f69
    function_10001dd0(v6, &v7, g5);
    int32_t lpName = *(int32_t *)(g5 + 36); // 0x10001f77
    int32_t lpBuffer; // bp-784
    g4 = &lpBuffer;
    int32_t v8 = GetEnvironmentVariableA((char *)lpName, (char *)&lpBuffer, 260); // 0x10001f8a
    if (v8 == 0) {
        if (v6 != 0) {
            // 0x10001f98
            g4 = v6;
            if (function_1000aa00("SteamUserPassphrase", v8) != 0) {
                // 0x10001fa9
                function_10001000(g5 + 32, (int32_t)"%s");
            }
        }
    }
    // 0x10001fbb
    g4 = a1;
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g8 - 8) = -1;
    *(int32_t *)(g8 - 12) = (int32_t)"SteamAppId";
    int32_t v9 = function_1000a660((int32_t)&g169, (int32_t)&g169); // 0x10001fc6
    int32_t v10; // 0x10001fe9
    if (v9 != -1) {
        // 0x10001fbb
        v10 = g8;
    } else {
        // 0x10001fd2
        g4 = a2;
        *(int32_t *)(g8 - 4) = (int32_t)"GameInfo.txt";
        *(int32_t *)(g8 - 8) = g4;
        *(int32_t *)(g8 - 12) = (int32_t)"Missing SteamAppId in %s\\%s.";
        Error();
        v10 = g8 + 12;
    }
    // 0x10001fe9
    *(int32_t *)(v10 - 4) = v9;
    *(int32_t *)(v10 - 8) = (int32_t)"%d";
    *(int32_t *)(v10 - 12) = g5;
    g1 = function_10001000((int32_t)&g169, (int32_t)&g169);
    g3 = *(int32_t *)(g8 + 12);
    int32_t v11;
    if (v6 != 0) {
        // 0x10001ffd
        g4 = v6;
        function_1000a8a0();
        v11 = g8;
    } else {
        v11 = g8 + 16;
    }
    // 0x10002006
    g5 = *(int32_t *)v11;
    g2 = v2;
    return 0;
}

// Address range: 0x10002010 - 0x10002069
int32_t function_10002010(int32_t a1, int32_t * a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-8
    g4 = &v2;
    int32_t v3 = 0; // bp-12
    v2 = 0;
    int32_t v4 = 0; // bp-16
    int32_t v5 = function_10001ce0(a1, &v3, &v2, &v4); // 0x1000203b
    int32_t result; // 0x10002068
    if (v5 == 0) {
        // 0x10002047
        g4 = v2;
        int32_t v6 = function_1000a660((int32_t)"ToolsAppId", -1); // 0x10002051
        g1 = v6;
        *a2 = v6;
        g4 = v3;
        function_1000a8a0();
        result = 0;
    } else {
        result = v5;
    }
    // 0x10002065
    g2 = v1;
    return result;
}

// Address range: 0x10002070 - 0x100020f5
int32_t function_10002070(int32_t * a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-132
    int32_t v3 = &v2; // 0x1000207f
    g4 = v3;
    function_10001b00("SteamAppId");
    int32_t v4; // bp-100
    int32_t v5 = &v4; // 0x1000208c
    g4 = v5;
    function_10001b00("SteamUserPassphrase");
    int32_t v6; // bp-68
    int32_t v7 = &v6; // 0x10002099
    g4 = v7;
    function_10001b00("SteamAppUser");
    char * v8 = "path"; // bp-412
    int32_t v9; // bp-36
    int32_t v10 = &v9; // 0x100020a6
    g4 = v10;
    function_10001b00("path");
    int32_t v11; // bp-392
    g4 = &v11;
    int32_t v12 = function_100014a0(&v11, 260, v3, 1); // 0x100020c0
    g4 = v10;
    g7 = v12;
    v9 = 0;
    function_100016c0();
    g4 = v7;
    function_100016c0();
    g4 = v5;
    function_100016c0();
    g4 = v3;
    function_100016c0();
    int32_t result = g7; // 0x100020ee
    g7 = (int32_t)v8;
    g2 = v1;
    return result;
}

// Address range: 0x10002100 - 0x10002258
int32_t function_10002100(int32_t a1) {
    int32_t v1 = a1;
    int32_t v2 = g2; // bp-4
    g2 = &v2;
    int32_t v3 = g7; // 0x10002109
    int32_t v4 = g5; // 0x1000210a
    int32_t v5 = v4; // bp-700
    g5 = a1;
    int32_t v6 = a1 + 9; // 0x10002113
    g7 = v6;
    int32_t v7 = function_100018e0(a1, v6, 512, v4, v3); // 0x10002118
    int32_t v8; // 0x10002252
    int32_t result3; // 0x10002257
    if (v7 == 0) {
        // 0x10002128
        int32_t v9; // bp-432
        function_10009a90(&v9, 292, "%s=%s");
        g4 = &v9;
        __putenv((char *)&v9);
        int32_t v10; // bp-140
        int32_t v11 = &v10; // 0x10002158
        g4 = v11;
        function_10001b00("SteamAppId");
        int32_t v12; // bp-108
        int32_t v13 = &v12; // 0x10002168
        g4 = v13;
        function_10001b00("SteamUserPassphrase");
        char * v14 = "SteamAppUser"; // bp-712
        int32_t v15; // bp-76
        int32_t v16 = &v15; // 0x10002175
        g4 = v16;
        function_10001b00("SteamAppUser");
        char * v17 = "path"; // bp-716
        int32_t v18; // bp-44
        int32_t v19 = &v18; // 0x10002182
        g4 = v19;
        function_10001b00("path");
        int32_t v20 = g5; // 0x1000218a
        if (*(char *)(v20 + 7) != 0) {
            // 0x10002194
            if (*(char *)(v20 + 5) == 0) {
                // 0x10002206
                if (*(char *)(v20 + 6) != 0) {
                    // 0x1000220c
                    g4 = v11;
                    int32_t v21; // bp-692
                    function_100014a0(&v21, 260, v11, 1);
                    v18 = 0;
                }
            } else {
                // 0x1000219a
                int32_t v22; // bp-8
                g4 = &v22;
                int32_t v23; // bp-12
                int32_t result = function_10001ce0(g7, &v22, &v1, &v23); // 0x100021a7
                g5 = result;
                if (result != 0) {
                    // 0x100021b5
                    g4 = v11;
                    function_10001ad0();
                    g5 = (int32_t)v17;
                    g7 = (int32_t)v14;
                    g2 = v2;
                    return result;
                }
                int32_t result2 = function_10001ef0(v1, g7, &v10); // 0x100021d4
                g1 = result2;
                g7 = result2;
                if (result2 != 0) {
                    // 0x100021e2
                    g4 = v11;
                    function_10001ad0();
                    g5 = (int32_t)v17;
                    g7 = (int32_t)v14;
                    g2 = v2;
                    return result2;
                }
                // 0x100021f5
                g4 = v22;
                v10 = 0;
                function_1000a8a0();
            }
        }
        // 0x1000222d
        g4 = v19;
        function_100016c0();
        g4 = v16;
        function_100016c0();
        g4 = v13;
        function_100016c0();
        g4 = v11;
        function_100016c0();
        result3 = 0;
        v8 = g8;
    } else {
        result3 = v7;
        v8 = &v5;
    }
    // 0x10002252
    g5 = *(int32_t *)v8;
    g7 = *(int32_t *)(v8 + 4);
    g2 = v2;
    return result3;
}

// Address range: 0x10002260 - 0x10002376
int32_t function_10002260(int32_t a1, int32_t * a2, int32_t a3) {
    int32_t v1 = a1;
    int32_t v2; // bp-524
    int32_t v3 = &v2; // 0x10002263
    int32_t v4 = g7; // 0x10002269
    int32_t v5 = v4; // bp-528
    int32_t v6 = &v5; // 0x10002269
    g7 = a1;
    int32_t v7 = *(int32_t *)(a1 + 8); // 0x1000226d
    g4 = v7;
    int32_t v8; // 0x10002365
    int32_t v9;
    if ((char)*(int32_t *)v7 != 0) {
        // 0x1000227f
        v1 = -1;
        char * v10; // bp-532
        if (*(char *)a1 != 0) {
            int32_t v11 = *(int32_t *)(a1 + 4); // 0x1000228b
            g4 = v11;
            v10 = (char *)&v1;
            int32_t result = function_10002010(v11, &v1, v4); // 0x10002293
            if (result != 0) {
                // 0x10002371
                g7 = *(int32_t *)v6;
                return result;
            }
        }
        // 0x100022a3
        v9 = (int32_t)&v10;
        v10 = (char *)260;
        if ((char)function_10001280(&v2, 260) == 0) {
            // 0x1000234f
            v10 = "FileSystem_GetBaseDir failed.";
            int32_t result2 = function_10001410(0, 3, "FileSystem_GetBaseDir failed."); // 0x10002358
            g7 = v5;
            return result2;
        }
        // 0x100022bf
        v10 = (char *)&v2;
        function_10009700(v3);
        v10 = (char *)g5;
        int32_t v12; // bp-264
        int32_t v13 = &v12; // 0x100022cf
        g4 = v13;
        __getcwd((char *)&v12, 260);
        g6 = v13;
        function_10009650(v13, &g11, 260, -1);
        function_10009740(v13, 92);
        g4 = v3;
        __chdir((char *)&v2);
        g4 = *(int32_t *)(g7 + 8);
        __chdir((char *)&v12);
        g5 = v1;
        if (v1 != 0) {
            int32_t result3 = function_10001410(1, 4, "Unable to mount Steam content in the file system"); // 0x10002342
            g7 = (int32_t)v10;
            return result3;
        }
        v8 = g7;
    } else {
        v9 = v6;
        v8 = a1;
    }
    int32_t v14 = *(int32_t *)(v8 + 8); // 0x10002365
    g4 = v14;
    *(int32_t *)(v9 - 4) = v14;
    int32_t result4 = function_100015f0((int32_t)&g169); // 0x10002369
    // 0x10002371
    g7 = *(int32_t *)(g8 + 4);
    return result4;
}

// Address range: 0x10002380 - 0x100023df
int32_t function_10002380(char * a1, int32_t a2) {
    // 0x10002380
    *(char *)&g85 = 0;
    int32_t * moduleHandle = GetModuleHandleA(NULL); // 0x1000239e
    if (GetModuleFileNameA(moduleHandle, (char *)&g169, (int32_t)&g169) != 0) {
        // 0x100023af
        int32_t v1; // bp-264
        g4 = &v1;
        __splitpath(&v1, 0, 0, (int32_t *)&g85, 0);
    }
    // 0x100023c9
    __strlwr((char *)&g85);
    return (int32_t)&g85;
}

// Address range: 0x100023e0 - 0x10002494
int32_t function_100023e0(int32_t a1) {
    // 0x100023e0
    *(char *)&g76 = 0;
    int32_t * moduleHandle = GetModuleHandleA(NULL); // 0x100023f3
    if (GetModuleFileNameA(moduleHandle, (char *)&g169, (int32_t)&g169) == 0) {
        goto lab_0x10002448;
    } else {
        char * v1 = _strrchr((char *)&g76, 92); // 0x1000240b
        if (*v1 != 0) {
            // 0x10002418
            *(char *)((int32_t)v1 + 1) = 0;
        }
        int32_t v2 = (int32_t)&g76; // 0x10002426
        unsigned char v3 = *(char *)v2; // 0x10002424
        int32_t v4 = g4 & -256; // 0x10002424
        int32_t v5 = (int32_t)v3 | v4; // 0x10002424
        g4 = v5;
        int32_t v6 = v2 + 1; // 0x10002426
        while (v3 != 0) {
            // 0x10002424
            v2 = v6;
            v3 = *(char *)v2;
            v4 = v5 & -256;
            v5 = (int32_t)v3 | v4;
            g4 = v5;
            v6 = v2 + 1;
        }
        int32_t v7 = v6 - (int32_t)&g77; // 0x1000242b
        if (v7 < 1) {
            goto lab_0x10002448;
        } else {
            char * v8 = (char *)(v7 + (int32_t)&g75); // 0x10002431
            unsigned char v9 = *v8; // 0x10002431
            g4 = (int32_t)v9 | v4;
            if (v9 == 92) {
                // 0x10002441
                *v8 = 0;
                goto lab_0x10002448;
            } else {
                if (v9 != 47) {
                    goto lab_0x10002448;
                } else {
                    // 0x10002441
                    *v8 = 0;
                    goto lab_0x10002448;
                }
            }
        }
    }
  lab_0x10002448:;
    int32_t v10 = CommandLine(); // 0x10002448
    int32_t v11 = *(int32_t *)v10; // 0x1000244e
    g6 = v11;
    g4 = v10;
    int32_t v12 = *(int32_t *)(v11 + 12); // 0x10002454
    if (v12 == 0) {
        // 0x1000247a
        __strlwr((char *)&g76);
        return function_10009740((int32_t)&g76, 92);
    }
    int32_t v13 = (int32_t)&g76 - v12; // 0x10002467
    g6 = v13;
    unsigned char v14 = *(char *)v12; // 0x10002470
    g4 = (int32_t)v14 | v10 & -256;
    *(char *)(v12 + v13) = v14;
    int32_t v15 = v12 + 1; // 0x10002475
    int32_t v16 = g4; // 0x10002476
    while ((char)v16 != 0) {
        // 0x10002470
        v12 = v15;
        v14 = *(char *)v12;
        g4 = (int32_t)v14 | v16 & -256;
        *(char *)(v12 + g6) = v14;
        v15++;
        v16 = g4;
    }
    // 0x1000247a
    __strlwr((char *)&g76);
    return function_10009740((int32_t)&g76, 92);
}

// Address range: 0x100024a0 - 0x100024b7
int32_t function_100024a0(void) {
    int32_t * processHandle = GetCurrentProcess(); // 0x100024a2
    TerminateProcess(processHandle, (int32_t)&g169);
    return 1;
}

// Address range: 0x100024c0 - 0x1000251c
int32_t function_100024c0(void) {
    // 0x100024c0
    AllocConsole();
    SetConsoleCtrlHandler((bool (*)(int32_t))&g10, true);
    _freopen("CONIN$", "rb", (struct _IO_FILE *)___iob_func());
    _freopen("CONOUT$", "wb", (struct _IO_FILE *)(___iob_func() + 32));
    int32_t v1 = ___iob_func(); // 0x10002500
    return (int32_t)_freopen("CONOUT$", "wb", (struct _IO_FILE *)(v1 + 64));
}

// Address range: 0x10002520 - 0x10002819
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10002520(void) {
    int32_t v1; // ebp
    g2 = &v1;
    g7 = g4;
    COM_TimestampedLog();
    Plat_FloatTime();
    g4 = g7;
    g4 = function_10008400("VFileSystem017");
    CoInitialize(NULL);
    g5 = *(int32_t *)0x100221e4;
    int32_t v2 = CommandLine(); // 0x10002573
    g4 = v2;
    int32_t v3 = *(int32_t *)(*(int32_t *)v2 + 12); // 0x1000257b
    *(char *)(g7 + 364) = (char)(v3 != 0);
    g3 = (int32_t)"datacache.dll";
    char * v4 = "engine.dll"; // bp-144
    g4 = g7;
    int32_t v5 = function_10008d40((int32_t *)&v4, "-edit", 0); // 0x10002680
    int32_t v6; // 0x1000268b
    int32_t v7; // 0x100026c3
    if ((char)v5 != 0) {
        int32_t v8 = CommandLine(); // 0x10002692
        g4 = v8;
        if (*(int32_t *)(*(int32_t *)v8 + 40) == 0) {
            goto lab_0x100026ba;
        } else {
            int32_t v9 = CommandLine(); // 0x100026a6
            g4 = v9;
            char * v10 = "-nop4"; // bp-196
            if (*(int32_t *)(*(int32_t *)v9 + 40) == 0) {
                v7 = (int32_t)&v10;
                goto lab_0x100026ce;
            } else {
                goto lab_0x100026ba;
            }
        }
    } else {
        v6 = v5;
        return v6 & -256;
    }
    // 0x10002689
    return v6 & -256;
  lab_0x100026ba:;
    int32_t v11 = CommandLine(); // 0x100026ba
    g4 = v11;
    v7 = g8 - 4;
    *(int32_t *)v7 = (int32_t)"-p4";
    if (*(int32_t *)(*(int32_t *)v11 + 40) == 0) {
        goto lab_0x100026ff;
    } else {
        goto lab_0x100026ce;
    }
  lab_0x100026ff:
    // 0x100026ff
    *(int32_t *)(v7 - 4) = (int32_t)"vstdlib.dll";
    g4 = g7;
    int32_t v12 = function_10008260((int32_t)&g169); // 0x10002706
    *(int32_t *)(g8 - 4) = (int32_t)"VProcessUtils002";
    *(int32_t *)(g8 - 8) = v12;
    g4 = g7;
    int32_t v13; // 0x10002729
    if (function_10008c00((int32_t)&g169, (int32_t)&g169) == 0) {
        v6 = 0;
        return v6 & -256;
    } else {
        int32_t v14 = CommandLine(); // 0x10002720
        g4 = v14;
        v13 = g8 - 4;
        *(int32_t *)v13 = (int32_t)"-dev";
        if (*(int32_t *)(*(int32_t *)v14 + 40) == 0) {
            goto lab_0x10002751;
        } else {
            // 0x10002734
            *(int32_t *)(g8 - 8) = g3;
            g4 = g7;
            int32_t v15 = function_10008260((int32_t)&g169); // 0x10002737
            *(int32_t *)(g8 - 4) = (int32_t)"VResourceAccessControl001";
            *(int32_t *)(g8 - 8) = v15;
            g4 = g7;
            if (function_10008c00((int32_t)&g169, (int32_t)&g169) == 0) {
                v6 = 0;
                return v6 & -256;
            } else {
                // 0x10002734
                v13 = g8;
                goto lab_0x10002751;
            }
        }
    }
  lab_0x100026ce:
    // 0x100026ce
    *(int32_t *)(v7 - 4) = (int32_t)"p4lib.dll";
    g4 = g7;
    int32_t v16 = function_10008260((int32_t)&g169); // 0x100026d5
    *(int32_t *)(g8 - 4) = (int32_t)"VP4002";
    *(int32_t *)(g8 - 8) = v16;
    g4 = g7;
    if (function_10008c00((int32_t)&g169, (int32_t)&g169) != 0) {
        // 0x100026ce
        v7 = g8;
        goto lab_0x100026ff;
    } else {
        int32_t v17 = CommandLine(); // 0x100026eb
        g4 = v17;
        int32_t v18 = g8 - 4; // 0x100026f4
        *(int32_t *)v18 = (int32_t)"-steam";
        if (*(int32_t *)(*(int32_t *)v17 + 40) == 0) {
            v6 = 0;
            return v6 & -256;
        } else {
            v7 = v18;
            goto lab_0x100026ff;
        }
    }
  lab_0x10002751:
    // 0x10002751
    *(int32_t *)(v13 - 4) = (int32_t)"VMaterialSystem080";
    g4 = g7;
    int32_t v19 = function_10008400((char *)&g169); // 0x10002758
    g3 = v19;
    if (v19 == 0) {
        v6 = 0;
        return v6 & -256;
    } else {
        // 0x10002767
        *(int32_t *)(g8 - 4) = (int32_t)"VENGINE_LAUNCHER_API_VERSION004";
        g4 = g7;
        g74 = function_10008400((char *)&g169);
        if (*(char *)(g7 + 364) == 0) {
            goto lab_0x100027a7;
        } else {
            // 0x10002781
            *(int32_t *)(g8 - 4) = (int32_t)"hammer_dll.dll";
            g4 = g7;
            int32_t v20 = function_10008260((int32_t)&g169); // 0x10002788
            *(int32_t *)(g8 - 4) = (int32_t)"Hammer001";
            *(int32_t *)(g8 - 8) = v20;
            g4 = g7;
            int32_t v21 = function_10008c00((int32_t)&g169, (int32_t)&g169); // 0x10002795
            g73 = v21;
            if (v21 == 0) {
                v6 = 0;
                return v6 & -256;
            } else {
                goto lab_0x100027a7;
            }
        }
    }
  lab_0x100027a7:;
    int32_t v22 = (int32_t)"shaderapidx9.dll"; // esi
    int32_t v23 = 0; // bp-8
    int32_t v24 = CommandLine(); // 0x100027b3
    g4 = v24;
    *(int32_t *)(g8 - 4) = (int32_t)"-noshaderapi";
    if (*(int32_t *)(*(int32_t *)v24 + 40) != 0) {
        // 0x100027c7
        v22 = (int32_t)"shaderapiempty.dll";
    }
    int32_t v25 = CommandLine(); // 0x100027cc
    *(int32_t *)(g8 - 4) = (int32_t)&v23;
    *(int32_t *)(g8 - 8) = (int32_t)"-shaderapi";
    g4 = v25;
    *(int32_t *)(g8 - 12) = v25 != 0 ? v23 : v22;
    g4 = v19;
    Plat_FloatTime();
    *(float64_t *)(g8 - 8) = (float64_t)0.0;
    *(int32_t *)(g8 - 12) = (int32_t)"CSourceAppSystemGroup::Create() - Took %.4f secs to load libraries and get factories.";
    return COM_TimestampedLog() & -256 | 1;
}

// Address range: 0x10002820 - 0x1000282d
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10002820(void) {
    // 0x10002820
    g4 = g74;
    return *(int32_t *)g74;
}

// Address range: 0x10002830 - 0x1000284c
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10002830(void) {
    // 0x10002830
    g74 = 0;
    g120 = 0;
    g73 = 0;
    g79 = 0;
    CoUninitialize();
    return &g169;
}

// Address range: 0x10002850 - 0x10002880
int32_t function_10002850(int32_t a1, int32_t * a2) {
    // 0x10002850
    if (*(char *)(g4 + 364) != 0) {
        // 0x10002873
        g4 = g73;
        return *(int32_t *)(*(int32_t *)g73 + 48);
    }
    int32_t v1 = CommandLine(); // 0x10002859
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 32);
}

// Address range: 0x10002880 - 0x100028b0
int32_t function_10002880(int32_t a1) {
    // 0x10002880
    if (*(char *)(g4 + 364) != 0) {
        // 0x100028a3
        g4 = g73;
        return *(int32_t *)(*(int32_t *)g73 + 52);
    }
    int32_t v1 = CommandLine(); // 0x10002889
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 32);
}

// Address range: 0x100028b0 - 0x10002913
int32_t function_100028b0(void) {
    int32_t * hHandle = CreateMutexA(NULL, false, "hl2_singleton_mutex"); // 0x100028b9
    g80 = (int32_t)hHandle;
    int32_t v1 = WaitForSingleObject(hHandle, 0); // 0x100028c7
    if (v1 == 0) {
        // 0x10002910
        return 1;
    }
    if (v1 == 128) {
        // 0x10002910
        return v1 & -256 | 1;
    }
    // 0x100028d8
    CloseHandle((int32_t *)g80);
    if (_getenv("VPROJECT") == NULL) {
        // 0x1000290d
        return 0;
    }
    int32_t v2 = CommandLine(); // 0x100028f5
    g4 = v2;
    int32_t v3 = *(int32_t *)(*(int32_t *)v2 + 40); // 0x100028ff
    if (v3 != 0) {
        // 0x10002910
        return v3 & -256 | 1;
    }
    // 0x1000290d
    return v3 & -256;
}

// Address range: 0x10002920 - 0x100029da
int32_t function_10002920(void) {
    // 0x10002920
    int32_t v1; // bp-264
    int32_t v2 = &v1; // 0x10002923
    g5 = *(int32_t *)0x100221e4;
    int32_t v3 = 0; // ebx
    g7 = 0;
    int32_t v4 = CommandLine(); // 0x10002936
    g4 = v4;
    int32_t v5 = *(int32_t *)(*(int32_t *)v4 + 36) - 1; // 0x10002941
    int32_t result; // eax
    if (v5 >= 1) {
        int32_t v6; // 0x100029a2
        while (true) {
            int32_t v7 = CommandLine(); // 0x10002950
            *(int32_t *)(g8 - 4) = (int32_t)"-game";
            g4 = v7;
            *(int32_t *)(g8 - 8) = g7;
            *(int32_t *)(g8 - 12) = *(int32_t *)(*(int32_t *)v7 + 44);
            if (function_100094b0(&g169, (char *)&g169) == 0) {
                int32_t v8 = CommandLine(); // 0x1000296e
                int32_t v9 = g7 + 1; // 0x10002972
                g7 = v9;
                g4 = v8;
                *(int32_t *)(g8 - 4) = v9;
                *(int32_t *)(g8 - 8) = *(int32_t *)(*(int32_t *)v8 + 44);
                *(int32_t *)(g8 - 12) = (int32_t)"\"%s\"";
                g4 = v2;
                *(int32_t *)(g8 - 16) = 260;
                *(int32_t *)(g8 - 20) = v2;
                function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
                v3++;
            }
            // 0x10002996
            g7++;
            int32_t v10 = CommandLine(); // 0x10002997
            g4 = v10;
            v6 = *(int32_t *)(*(int32_t *)v10 + 36) - 1;
            if (g7 >= v6) {
                // break -> 0x100029a7
                break;
            }
        }
        // 0x100029a7
        if (v3 > 1) {
            // 0x100029ac
            g4 = CommandLine();
            *(int32_t *)(g8 - 4) = (int32_t)"-game";
            result = CommandLine();
            *(int32_t *)(g8 - 4) = v2;
            *(int32_t *)(g8 - 8) = (int32_t)"-game";
            g4 = result;
        } else {
            result = v6;
        }
    } else {
        result = v5;
    }
    // 0x100029d3
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x100029e0 - 0x10002a27
int32_t function_100029e0(int32_t a1) {
    int32_t v1 = g87 + 1 & -0x7ffffff9; // 0x100029e9
    int32_t v2; // 0x100029fc
    if (v1 < 0) {
        // 0x100029f0
        v2 = (g87 | -8) + 1;
    } else {
        v2 = v1;
    }
    // 0x100029f5
    g6 = a1;
    int32_t v3;
    g4 = &v3;
    g87 = v2;
    function_10009ac0((int32_t *)(512 * v2 + (int32_t)&g86), 512, a1, &v3);
    return 512 * g87 + (int32_t)&g86;
}

// Address range: 0x10002a30 - 0x10002b40
int32_t function_10002a30(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-524
    int32_t v3 = &v2; // 0x10002a33
    int32_t v4 = g7; // 0x10002a39
    int32_t v5 = g1; // 0x10002a3f
    int32_t v6 = v5; // bp-536
    g4 = v3;
    function_10009a60(&v2, v5, 512);
    g6 = v3;
    function_10009740(v3, 92);
    __strlwr((char *)&v2);
    g4 = v3;
    int32_t result = function_10009770(&v2); // 0x10002a74
    g1 = result;
    if (result == 0) {
        // 0x10002a82
        g7 = v4;
        g2 = v1;
        return result;
    }
    int32_t v7 = &v6; // 0x10002a3f
    v6 = g5;
    int32_t v8 = (int32_t)&g40; // ebx
    int32_t v9 = (int32_t)&g40; // 0x10002a92
    int32_t v10; // 0x10002ac0
    while (true) {
        // 0x10002a92
        *(int32_t *)(v7 - 4) = *(int32_t *)v9;
        *(int32_t *)(v7 - 8) = result - 1;
        int32_t v11 = function_10009470((int32_t)&g169, (int32_t)&g169); // 0x10002a96
        g1 = v11;
        if (v11 == 0) {
            int32_t v12 = CommandLine(); // 0x10002aa2
            g5 = v12;
            g7 = *(int32_t *)v12;
            *(int32_t *)(g8 - 4) = *(int32_t *)(v8 + 4);
            *(int32_t *)(g8 - 8) = (int32_t)"+%s";
            int32_t v13 = function_100029e0((int32_t)&g169); // 0x10002ab5
            g1 = v13;
            g6 = *(int32_t *)(g7 + 40);
            v10 = g8 + 4;
            *(int32_t *)v10 = v13;
            g4 = g5;
            if (v13 == 0) {
                // 0x10002ae1
                *(int32_t *)g8 = 512;
                *(int32_t *)(g8 - 4) = v3;
                *(int32_t *)(g8 - 8) = (int32_t)&g88;
                function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
                *(int32_t *)(g8 - 4) = 512;
                g4 = v3;
                *(int32_t *)(g8 - 8) = v3;
                *(int32_t *)(g8 - 12) = (int32_t)&g88;
                function_10009b30((int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                g6 = v3;
                *(int32_t *)(g8 - 4) = v3;
                *(int32_t *)(g8 - 8) = *(int32_t *)(v8 + 4);
                *(int32_t *)(g8 - 12) = (int32_t)"%s %s";
                *(int32_t *)(g8 - 16) = 512;
                *(int32_t *)(g8 - 20) = (int32_t)&g88;
                function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
                g5 = *(int32_t *)(g8 + 44);
                g3 = *(int32_t *)(g8 + 48);
                g7 = *(int32_t *)(g8 + 52);
                g2 = v1;
                return &g88;
            }
        } else {
            v10 = g8 + 8;
        }
        int32_t v14 = v8 + 8; // 0x10002acc
        v8 = v14;
        if ((char **)v14 >= (char **)&g41) {
            // break -> 0x10002ad7
            break;
        }
        v7 = v10;
        v9 = v14;
    }
    // 0x10002ad7
    g5 = *(int32_t *)v10;
    g3 = *(int32_t *)(v10 + 4);
    g7 = *(int32_t *)(v10 + 8);
    g2 = v1;
    return 0;
}

// Address range: 0x10002b40 - 0x10002bbf
// From class:    CLauncherLoggingListener
// Type:          virtual member function
int32_t function_10002b40(int32_t a1, int32_t lpText) {
    int32_t v1 = *(int32_t *)(a1 + 8); // 0x10002b47
    if (v1 == 1) {
        int32_t v2 = *(int32_t *)a1; // 0x10002b4f
        g4 = v2;
        if (v2 == g84) {
            // 0x10002b59
            return MessageBoxA(NULL, (char *)lpText, "Warning!", 0x1010);
        }
    }
    int32_t v3; // 0x10002b79
    if (v1 == 2) {
        // 0x10002b79
        int32_t v4; // ebp
        int32_t v5; // esi
        v3 = ShouldUseNewAssertDialog(v5, v4);
        if ((char)v3 == 0) {
            // 0x10002b83
            return MessageBoxA(NULL, (char *)lpText, "Assert!", 0x1010);
        }
    } else {
        v3 = v1;
    }
    // 0x10002b9e
    int32_t result; // 0x10002bbc
    if (*(int32_t *)(a1 + 8) == 3) {
        // 0x10002ba4
        g4 = lpText;
        result = MessageBoxA(NULL, (char *)lpText, "Error!", 0x1010);
    } else {
        result = v3;
    }
    // 0x10002bba
    return result;
}

// Address range: 0x10002bc0 - 0x10002bc5
// From class:    .?AV?$CFmtStrN@$0BAA@@@
// Type:          virtual member function
int32_t function_10002bc0(void) {
    // 0x10002bc0
    *(char *)(g4 + 4) = 1;
    int32_t result; // eax
    return result;
}

// Address range: 0x10002bd0 - 0x10002c5f
int32_t function_10002bd0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x10002bd5
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x10002bd7
    int32_t v4; // eax
    int32_t v5; // 0x10002c2d
    int32_t v6; // 0x10002c59
    int32_t * v7; // 0x10002bde
    int32_t v8; // 0x10002be4
    int32_t v9; // 0x10002c03
    if (v3 < 0) {
        v6 = &v1;
        goto lab_0x10002c59;
    } else {
        // 0x10002bde
        v7 = (int32_t *)(v2 + 4);
        int32_t v10 = *v7; // 0x10002bde
        v4 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v3 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x10002bfa
                v4 = 1;
                v11 = 1;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x10002c03
                    v9 *= 2;
                }
                goto lab_0x10002c09;
            } else {
                v5 = v11;
                goto lab_0x10002c2b;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x10002bea
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v3) + 1) * v3; // 0x10002bf1
            v9 = v13;
            goto lab_0x10002c09;
        }
    }
  lab_0x10002c59:
    // 0x10002c59
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x10002c2b:
    // 0x10002c2b
    *v7 = v5;
    int32_t v14 = *(int32_t *)0x100221e8; // 0x10002c30
    g4 = v14;
    int32_t v15 = *(int32_t *)v14; // 0x10002c36
    g4 = v15;
    int32_t result = 32 * v4; // 0x10002c38
    int32_t v16 = *(int32_t *)v15; // 0x10002c50
    if (v8 != 0) {
        // 0x10002c40
        g6 = *(int32_t *)(v16 + 12);
        *(int32_t *)v2 = result;
        g7 = result;
        g2 = v1;
        return result;
    }
    // 0x10002c50
    g6 = v16;
    int32_t v17 = *(int32_t *)(v16 + 4); // 0x10002c52
    g1 = v17;
    *(int32_t *)v2 = v17;
    v6 = g8;
    goto lab_0x10002c59;
  lab_0x10002c09:
    // 0x10002c09
    v4 = v9;
    int32_t v18; // 0x10002c251
    if (v9 < v8) {
        if (v9 != 0) {
            v18 = v9;
            goto lab_0x10002c20;
        } else {
            if (v8 > -1) {
                v18 = v9;
                goto lab_0x10002c20;
            } else {
                // 0x10002c16
                v4 = -1;
                v5 = -1;
                goto lab_0x10002c2b;
            }
        }
    } else {
        v5 = v9;
        goto lab_0x10002c2b;
    }
  lab_0x10002c20:;
    int32_t v19; // 0x10002c25
    while (true) {
        int32_t v20 = v18 + v8; // 0x10002c20
        v19 = (v20 - (v20 >> 31)) / 2;
        if (v19 >= v8) {
            // break -> 0x10002c2b
            break;
        }
        v18 = v19;
    }
    // 0x10002c2b
    v4 = v19;
    v5 = v19;
    goto lab_0x10002c2b;
}

// Address range: 0x10002c60 - 0x10002cd0
// From class:    .?AV?$CFmtStrN@$0BAA@@@
// Type:          constructor
int32_t function_10002c60(int32_t * a1, char * a2) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // bp-4
    g2 = &v2;
    int32_t v3 = (int32_t)a2; // 0x10002c63
    g6 = v3;
    int32_t v4 = g7; // 0x10002c66
    g7 = v1;
    int32_t v5 = g5; // bp-12
    char v6;
    int32_t v7 = &v6; // 0x10002c6b
    int32_t v8; // bp+12
    g4 = &v8;
    int32_t v9 = v1 + 5; // 0x10002c74
    g5 = v9;
    *a1 = (int32_t)&g16;
    *(char *)(g7 + 4) = 1;
    v6 = 0;
    int32_t v10 = function_10009af0(v9, 255, v3, &v8, (int32_t *)v7, v5, v4, v2); // 0x10002c8b
    *(char *)(g7 + 260) = 0;
    if (v6 != 0) {
        // 0x10002ca0
        if (*(char *)(g7 + 4) == 0) {
            int32_t v11 = g89; // 0x10002ca6
            if (v11 < 5) {
                // 0x10002caf
                g89 = v11 + 1;
            }
        }
    }
    // 0x10002cb5
    *(int32_t *)(g7 + 264) = v10;
    *(int32_t *)(g7 + 264) = function_10009450(g5);
    g5 = v5;
    int32_t result = g7; // 0x10002ccb
    g7 = v4;
    g2 = v2;
    return result;
}

// Address range: 0x10002cd0 - 0x10002d20
int32_t function_10002cd0(int32_t a1) {
    char v1 = g94; // 0x10002cdb
    if ((v1 & 1) == 0) {
        // 0x10002ce3
        g94 = v1 | 1;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    }
    if (a1 == -1) {
        // 0x10002d14
        return g92;
    }
    // 0x10002d07
    return *(int32_t *)(*(int32_t *)(g4 + 4) + 32 * a1 + 8);
}

// Address range: 0x10002d20 - 0x10002df9
int32_t function_10002d20(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g4; // 0x10002d2a
    g7 = v2;
    g4 = v2 + 300;
    int32_t v3 = function_1000d070(); // 0x10002d33
    g4 = g7 + 316;
    g5 = v3;
    function_1000d070();
    int32_t v4; // bp-272
    function_10002c60(&v4, "%s\\%s\\%s");
    g4 = g119;
    int32_t v5 = g119 + 4; // 0x10002d63
    g4 = v5;
    int32_t result; // 0x10002df6
    if (*(int32_t *)(*(int32_t *)v5 + 8) != 0) {
        // 0x10002d85
        g4 = g119;
        function_10009450(a1);
        int32_t v6 = g119 + 4; // 0x10002dc0
        g4 = g119;
        g4 = v6;
        result = *(int32_t *)v6;
    } else {
        result = 0;
    }
    // 0x10002df1
    return result;
}

// Address range: 0x10002e00 - 0x10002e32
int32_t function_10002e00(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x10002e00
    g7 = g4;
    int32_t v1 = function_1000c090(1); // 0x10002e08
    int32_t result; // 0x10002e2f
    if ((char)v1 != 0) {
        int32_t v2 = g7; // 0x10002e11
        int32_t v3 = *(int32_t *)(v2 + 16); // 0x10002e11
        int32_t v4 = *(int32_t *)(v2 + 32); // 0x10002e14
        *(char *)(g4 + v3 - v4) = (char)a1;
        int32_t * v5 = (int32_t *)(g7 + 16); // 0x10002e1f
        *v5 = *v5 + 1;
        int32_t v6 = g7; // 0x10002e22
        int32_t v7 = *(int32_t *)(v6 + 16); // 0x10002e22
        g1 = v7;
        g4 = v6;
        result = function_1000c0e0(v7);
    } else {
        result = v1;
    }
    // 0x10002e2d
    return result;
}

// Address range: 0x10002e40 - 0x10002f2a
int32_t function_10002e40(int32_t a1, int32_t * a2, int32_t * a3) {
    int32_t v1 = (int32_t)a3;
    int32_t v2 = g4; // 0x10002e47
    g4 = v1;
    int32_t v3 = *(int32_t *)(v2 + 16); // edi
    *a2 = -1;
    *(char *)g4 = 0;
    int32_t v4 = v3; // 0x10002e59
    int32_t v5; // 0x10002f24
    int32_t result; // 0x10002f27
    if (v4 == -1) {
        // 0x10002e40
        result = (int32_t)a2;
        v5 = g8;
    } else {
        int32_t v6; // 0x10002f278
        while (true) {
            // 0x10002e63
            g4 = a1;
            *a2 = v4;
            int32_t v7 = 32 * v3; // 0x10002e72
            int32_t v8 = (v7 | 16) + *(int32_t *)(v2 + 4); // 0x10002e75
            *(int32_t *)(g8 - 4) = v8;
            *(int32_t *)(g8 - 8) = g4;
            int32_t v9; // 0x10002f17
            if ((char)v8 == 0) {
                // 0x10002ed0
                g4 = v1;
                *(char *)a3 = 0;
                char v10 = g94; // 0x10002ed6
                if ((v10 & 1) != 0) {
                    // branch -> 0x10002f07
                } else {
                    // 0x10002edf
                    g4 = 1;
                    g94 = v10 | 1;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                }
                // 0x10002f07
                int32_t v11;
                if (v3 != -1) {
                    // 0x10002f0b
                    v11 = v7 + *(int32_t *)(v2 + 4);
                } else {
                    v11 = &g90;
                }
                // 0x10002f17
                v9 = *(int32_t *)(v11 + 4);
                v3 = v9;
                v6 = v11;
            } else {
                // 0x10002e84
                *(char *)a3 = 1;
                char v12 = g94; // 0x10002e8a
                if ((v12 & 1) == 0) {
                    // 0x10002e93
                    g94 = v12 | 1;
                    g4 = -1;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                }
                // 0x10002eb8
                if (v3 == -1) {
                    int32_t v13 = g90; // 0x10002ecc
                    v3 = v13;
                    v6 = &g90;
                    v9 = v13;
                } else {
                    int32_t v14 = v7 + *(int32_t *)(v2 + 4); // 0x10002ec0
                    int32_t v15 = *(int32_t *)v14; // 0x10002ec0
                    v3 = v15;
                    v6 = v14;
                    v9 = v15;
                }
            }
            if (v9 == -1) {
                // break -> 0x10002f23
                break;
            }
            v4 = v9;
        }
        // 0x10002f23
        g7 = *(int32_t *)g8;
        result = v6;
        v5 = g8 + 4;
    }
    // 0x10002f24
    g5 = *(int32_t *)v5;
    g3 = *(int32_t *)(v5 + 4);
    g2 = *(int32_t *)(v5 + 8);
    return result;
}

// Address range: 0x10002f30 - 0x10002ffd
int32_t function_10002f30(void) {
    int32_t v1 = g4; // 0x10002f33
    int32_t v2 = v1; // bp-8
    int32_t v3 = &v2; // 0x10002f33
    int32_t v4 = g7; // 0x10002f34
    g7 = v1;
    int32_t * v5 = (int32_t *)(v1 + 24); // 0x10002f37
    int32_t v6 = *v5; // 0x10002f37
    int32_t v7 = g5; // 0x10002f3a
    int32_t * v8;
    int32_t v9; // 0x10002f52
    int32_t v10; // 0x10002f4b
    if (v6 != -1) {
        int32_t v11 = *(int32_t *)(v1 + 4); // 0x10002fcb
        g4 = v11;
        g5 = v6;
        *v5 = *(int32_t *)(v11 + (32 * v6 | 4));
        goto lab_0x10002fda;
    } else {
        int32_t v12 = *(int32_t *)(v1 + 28); // 0x10002f44
        g4 = v12;
        v8 = (int32_t *)(v1 + 8);
        if (v12 < 0) {
            goto lab_0x10002f5e;
        } else {
            // 0x10002f4b
            v10 = *v8;
            g1 = v10;
            if (v12 < v10) {
                // 0x10002f52
                v9 = v12 + 1;
                g4 = v9;
                if (v9 < 0) {
                    goto lab_0x10002f59;
                } else {
                    if (v9 < v10) {
                        goto lab_0x10002f69;
                    } else {
                        goto lab_0x10002f59;
                    }
                }
            } else {
                goto lab_0x10002f5e;
            }
        }
    }
  lab_0x10002fda:;
    int32_t v13 = (32 * g5 | 16) + *(int32_t *)(g7 + 4); // 0x10002fe2
    g4 = v13;
    int32_t v14; // 0x10002ff5
    if (v13 != 0) {
        // 0x10002fea
        function_1000d140();
        v14 = g7;
    } else {
        v14 = g7;
    }
    // 0x10002fef
    *(int32_t *)(v14 + 32) = *(int32_t *)(v14 + 4);
    g7 = *(int32_t *)g8;
    return g5;
  lab_0x10002f5e:;
    int32_t v15 = *v8; // 0x10002f5e
    g1 = v15;
    int32_t v16 = v15 >= 0 != v15 != 0; // 0x10002f68
    g4 = v16;
    v10 = v15;
    v9 = v16;
    goto lab_0x10002f69;
  lab_0x10002f69:
    // 0x10002f69
    v2 = v9;
    g4 = v3;
    g5 = v9;
    if (v9 < 0) {
        goto lab_0x10002f79;
    } else {
        if (v9 < v10) {
            // 0x10002fc6
            *(int32_t *)(v1 + 28) = v9;
            goto lab_0x10002fda;
        } else {
            goto lab_0x10002f79;
        }
    }
  lab_0x10002f79:
    // 0x10002f79
    g4 = v1 + 4;
    function_10002bd0(1, v7, v4, v9, g2);
    int32_t v17 = *(int32_t *)(g7 + 28); // 0x10002f83
    g4 = v17;
    int32_t * v18 = (int32_t *)(g7 + 8);
    int32_t v19; // 0x10002f91
    int32_t v20; // 0x10002f8a
    if (v17 < 0) {
        goto lab_0x10002f9d;
    } else {
        // 0x10002f8a
        v20 = *v18;
        if (v17 < v20) {
            // 0x10002f91
            v19 = v17 + 1;
            g4 = v19;
            if (v19 < 0) {
                goto lab_0x10002f98;
            } else {
                if (v19 < v20) {
                    goto lab_0x10002fa8;
                } else {
                    goto lab_0x10002f98;
                }
            }
        } else {
            goto lab_0x10002f9d;
        }
    }
  lab_0x10002f59:
    // 0x10002f59
    g4 = -1;
    v9 = -1;
    goto lab_0x10002f69;
  lab_0x10002f9d:;
    int32_t v21 = *v18; // 0x10002f9d
    int32_t v22 = v21 >= 0 != v21 != 0; // 0x10002fa7
    g4 = v22;
    v20 = v21;
    v19 = v22;
    goto lab_0x10002fa8;
  lab_0x10002fa8:
    // 0x10002fa8
    v2 = v19;
    g4 = v3;
    g5 = v19;
    if (v19 < 0) {
        goto lab_0x10002fb8;
    } else {
        if (v19 < v20) {
            // 0x10002fc6
            *(int32_t *)(g7 + 28) = v19;
            goto lab_0x10002fda;
        } else {
            goto lab_0x10002fb8;
        }
    }
  lab_0x10002fb8:
    // 0x10002fb8
    Error();
    // 0x10002fc6
    *(int32_t *)(g7 + 28) = g5;
    goto lab_0x10002fda;
  lab_0x10002f98:
    // 0x10002f98
    g4 = -1;
    v19 = -1;
    goto lab_0x10002fa8;
}

// Address range: 0x10003000 - 0x100030a4
int32_t function_10003000(int32_t a1) {
    int32_t v1 = g94; // 0x10003003
    int32_t v2 = g5; // 0x1000300d
    int32_t v3; // 0x10003013
    if ((v1 & 1) == 0) {
        // 0x10003013
        v3 = v1 | 1;
        g94 = v3;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v3 = v1;
    }
    int32_t v4;
    if (a1 != -1) {
        // 0x1000303f
        v4 = *(int32_t *)(g4 + 4) + 32 * a1;
    } else {
        v4 = &g90;
    }
    int32_t v5 = *(int32_t *)(v4 + 8); // 0x1000304e
    if ((v3 & 1) == 0) {
        // 0x10003056
        g94 = v3 | 1;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    }
    if (v5 == -1) {
        // 0x10003092
        g4 = 0;
        g5 = v2;
        return (int32_t)(g90 == a1) | (int32_t)&g90 & -256;
    }
    int32_t v6 = *(int32_t *)(g4 + 4) + 32 * v5; // 0x10003082
    g4 = 0;
    g5 = v2;
    return (int32_t)(*(int32_t *)v6 == a1) | v6 & -256;
}

// Address range: 0x100030b0 - 0x10003156
int32_t function_100030b0(int32_t a1) {
    int32_t v1 = g94; // 0x100030b3
    int32_t v2 = g5; // 0x100030bd
    int32_t v3; // 0x100030c3
    if ((v1 & 1) == 0) {
        // 0x100030c3
        v3 = v1 | 1;
        g94 = v3;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v3 = v1;
    }
    int32_t v4;
    if (a1 != -1) {
        // 0x100030ef
        v4 = *(int32_t *)(g4 + 4) + 32 * a1;
    } else {
        v4 = &g90;
    }
    int32_t v5 = *(int32_t *)(v4 + 8); // 0x100030fe
    if ((v3 & 1) == 0) {
        // 0x10003106
        g94 = v3 | 1;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    }
    if (v5 == -1) {
        // 0x10003143
        g4 = 0;
        g5 = v2;
        return (int32_t)(g91 == a1) | (int32_t)&g90 & -256;
    }
    int32_t v6 = *(int32_t *)(g4 + 4) + 32 * v5; // 0x10003132
    g4 = 0;
    g5 = v2;
    return (int32_t)(*(int32_t *)(v6 + 4) == a1) | v6 & -256;
}

// Address range: 0x10003160 - 0x10003354
int32_t function_10003160(int32_t a1) {
    int32_t v1 = g4; // 0x10003164
    g7 = v1;
    char v2 = g94; // 0x10003166
    int32_t v3 = v2; // 0x10003166
    g4 = v3;
    int32_t v4; // 0x100031be
    if ((v2 & 1) != 0) {
        v4 = v3;
    } else {
        int32_t v5 = v3 | 1; // 0x10003172
        char v6 = v5; // 0x10003172
        g4 = v5;
        g94 = v6;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
        v2 = v6;
        v4 = v5;
    }
    int32_t v7 = a1; // ebx
    int32_t v8;
    if (a1 != -1) {
        // 0x100031a7
        v8 = *(int32_t *)(v1 + 4) + 32 * a1;
    } else {
        v8 = &g90;
    }
    int32_t v9 = *(int32_t *)(v8 + 4); // 0x100031b6
    g5 = v9;
    char v10; // 0x100031be
    if ((v4 & 1) == 0) {
        int32_t v11 = v4 | 1; // 0x100031be
        v10 = v11;
        g4 = v11;
        g94 = v10;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v10 = v2;
    }
    int32_t v12;
    int32_t * v13;
    if (v9 == -1) {
        // 0x100031e3
        v13 = (int32_t *)(v1 + 4);
        v12 = &g90;
    } else {
        int32_t * v14 = (int32_t *)(v1 + 4); // 0x100031ec
        v13 = v14;
        v12 = *v14 + 32 * v9;
    }
    int32_t v15 = *v13; // 0x100031f6
    g4 = v15;
    int32_t v16 = 32 * a1; // 0x100031fd
    int32_t v17 = v16; // edx
    *(int32_t *)(v15 + (v16 | 4)) = *(int32_t *)v12;
    int32_t v18 = v10; // 0x10003204
    g4 = v18;
    int32_t v19 = v17; // 0x1000320a
    int32_t v20; // 0x10003259
    char v21; // 0x100032a217
    if ((v10 & 1) != 0) {
        // 0x10003239
        v21 = v10;
        v20 = v18;
    } else {
        int32_t v22 = v18 | 1; // 0x10003212
        char v23 = v22; // 0x10003212
        g4 = v22;
        g94 = v23;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
        v21 = v23;
        v20 = v22;
    }
    int32_t v24 = g5; // 0x1000323c
    int32_t v25;
    if (v24 != -1) {
        // 0x10003240
        v25 = *(int32_t *)(g7 + 4) + 32 * v24;
    } else {
        v25 = &g90;
    }
    // 0x1000324f
    int32_t v26; // 0x100032b4
    int32_t v27; // 0x100032ec
    if (*(int32_t *)v25 != -1) {
        char v28; // 0x100032a2
        if ((v20 & 1) != 0) {
            // 0x10003280
            v28 = v21;
        } else {
            int32_t v29 = v20 | 1; // 0x10003259
            char v30 = v29; // 0x10003259
            g4 = v29;
            g94 = v30;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
            v28 = v30;
        }
        int32_t v31;
        if (v24 == -1) {
            // 0x10003283
            v31 = &g90;
        } else {
            // 0x10003287
            v31 = *(int32_t *)(g7 + 4) + 32 * v24;
        }
        int32_t v32 = *(int32_t *)v31; // 0x10003296
        g4 = v32;
        *(int32_t *)(*(int32_t *)(g7 + 4) + (32 * v32 | 8)) = v7;
        int32_t v33 = v28; // 0x100032a2
        g4 = v33;
        v26 = v33;
        v27 = g5;
    } else {
        v26 = v20;
        v27 = v24;
    }
    // 0x100032a8
    if (v27 != -1) {
        if ((v26 & 1) == 0) {
            int32_t v34 = v26 | 1; // 0x100032b4
            g4 = v34;
            g94 = v34;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        }
        int32_t * v35 = (int32_t *)(g7 + 4);
        int32_t v36;
        if (v7 != -1) {
            // 0x100032da
            v36 = v17 + *v35;
        } else {
            v36 = &g90;
        }
        int32_t v37 = 32 * v27; // 0x100032ee
        g4 = v37;
        *(int32_t *)(*v35 + (v37 | 8)) = *(int32_t *)(v36 + 8);
        v17 = v19;
    }
    int32_t * v38 = (int32_t *)(g7 + 16); // 0x100032f8
    if (v7 == *v38) {
        // 0x10003333
        *v38 = g5;
    } else {
        // 0x100032fd
        g4 = g7;
        int32_t v39 = function_10003000(v7); // 0x10003300
        g4 = g7;
        int32_t v40 = function_10002cd0(v7); // 0x1000331f
        int32_t v41 = *(int32_t *)(g7 + 4); // 0x10003324
        if ((char)v39 == 0) {
            // 0x1000331f
            *(int32_t *)(v41 + (32 * v40 | 4)) = g5;
            v17 = v19;
        } else {
            // 0x1000330c
            g4 = v41;
            v17 = v19;
            *(int32_t *)(v41 + 32 * v40) = g5;
        }
    }
    int32_t v42 = *(int32_t *)(g7 + 4); // 0x10003336
    g4 = v42;
    int32_t v43 = 32 * g5; // 0x1000333b
    int32_t result = v43; // eax
    *(int32_t *)(v43 + v42) = v7;
    int32_t v44; // 0x1000334e
    if (v7 != -1) {
        int32_t v45 = *(int32_t *)(g7 + 4); // 0x10003347
        result = v45;
        *(int32_t *)(v45 + 8 + v17) = g5;
        v44 = g8;
    } else {
        v44 = g8 + 4;
    }
    // 0x1000334e
    g5 = *(int32_t *)v44;
    g7 = *(int32_t *)(v44 + 4);
    g2 = *(int32_t *)(v44 + 8);
    return result;
}

// Address range: 0x10003360 - 0x10003556
int32_t function_10003360(int32_t a1) {
    int32_t v1 = g4; // 0x10003364
    g7 = v1;
    char v2 = g94; // 0x10003366
    int32_t v3 = v2; // 0x10003366
    g4 = v3;
    int32_t v4; // 0x100033bd
    if ((v2 & 1) != 0) {
        v4 = v3;
    } else {
        int32_t v5 = v3 | 1; // 0x10003372
        char v6 = v5; // 0x10003372
        g4 = v5;
        g94 = v6;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
        v2 = v6;
        v4 = v5;
    }
    int32_t v7 = a1; // ebx
    int32_t v8;
    if (a1 != -1) {
        // 0x100033a7
        v8 = *(int32_t *)(v1 + 4) + 32 * a1;
    } else {
        v8 = &g90;
    }
    int32_t v9 = *(int32_t *)v8; // 0x100033b6
    g5 = v9;
    char v10; // 0x100033bd
    if ((v4 & 1) == 0) {
        int32_t v11 = v4 | 1; // 0x100033bd
        v10 = v11;
        g4 = v11;
        g94 = v10;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v10 = v2;
    }
    int32_t v12;
    int32_t * v13;
    if (v9 == -1) {
        // 0x100033e2
        v13 = (int32_t *)(v1 + 4);
        v12 = &g90;
    } else {
        int32_t * v14 = (int32_t *)(v1 + 4); // 0x100033eb
        v13 = v14;
        v12 = *v14 + 32 * v9;
    }
    int32_t v15 = *v13; // 0x100033f5
    g4 = v15;
    int32_t v16 = 32 * a1; // 0x100033fd
    int32_t v17 = v16; // edx
    *(int32_t *)(v15 + v16) = *(int32_t *)(v12 + 4);
    int32_t v18 = v10; // 0x10003403
    g4 = v18;
    int32_t v19 = v17; // 0x10003409
    int32_t v20; // 0x10003459
    char v21; // 0x100034a317
    if ((v10 & 1) != 0) {
        // 0x10003438
        v21 = v10;
        v20 = v18;
    } else {
        int32_t v22 = v18 | 1; // 0x10003411
        char v23 = v22; // 0x10003411
        g4 = v22;
        g94 = v23;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
        v21 = v23;
        v20 = v22;
    }
    int32_t v24 = g5; // 0x1000343b
    int32_t v25;
    if (v24 != -1) {
        // 0x1000343f
        v25 = *(int32_t *)(g7 + 4) + 32 * v24;
    } else {
        v25 = &g90;
    }
    // 0x1000344e
    int32_t v26; // 0x100034b5
    int32_t v27; // 0x100034ed
    if (*(int32_t *)(v25 + 4) != -1) {
        char v28; // 0x100034a3
        if ((v20 & 1) != 0) {
            // 0x10003480
            v28 = v21;
        } else {
            int32_t v29 = v20 | 1; // 0x10003459
            char v30 = v29; // 0x10003459
            g4 = v29;
            g94 = v30;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
            v28 = v30;
        }
        int32_t v31;
        if (v24 == -1) {
            // 0x10003483
            v31 = &g90;
        } else {
            // 0x10003487
            v31 = *(int32_t *)(g7 + 4) + 32 * v24;
        }
        int32_t v32 = *(int32_t *)(v31 + 4); // 0x10003496
        g4 = v32;
        *(int32_t *)(*(int32_t *)(g7 + 4) + (32 * v32 | 8)) = v7;
        int32_t v33 = v28; // 0x100034a3
        g4 = v33;
        v26 = v33;
        v27 = g5;
    } else {
        v26 = v20;
        v27 = v24;
    }
    // 0x100034a9
    if (v27 != -1) {
        if ((v26 & 1) == 0) {
            int32_t v34 = v26 | 1; // 0x100034b5
            g4 = v34;
            g94 = v34;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        }
        int32_t * v35 = (int32_t *)(g7 + 4);
        int32_t v36;
        if (v7 != -1) {
            // 0x100034db
            v36 = v17 + *v35;
        } else {
            v36 = &g90;
        }
        int32_t v37 = 32 * v27; // 0x100034ef
        g4 = v37;
        *(int32_t *)(*v35 + (v37 | 8)) = *(int32_t *)(v36 + 8);
        v17 = v19;
    }
    int32_t * v38 = (int32_t *)(g7 + 16); // 0x100034f9
    if (v7 == *v38) {
        // 0x10003534
        *v38 = g5;
    } else {
        // 0x100034fe
        g4 = g7;
        int32_t v39 = function_100030b0(v7); // 0x10003501
        g4 = g7;
        int32_t v40 = function_10002cd0(v7); // 0x10003521
        int32_t v41 = *(int32_t *)(g7 + 4); // 0x10003526
        if ((char)v39 == 0) {
            // 0x10003521
            *(int32_t *)(v41 + 32 * v40) = g5;
            v17 = v19;
        } else {
            // 0x1000350d
            g4 = v41;
            v17 = v19;
            *(int32_t *)(v41 + (32 * v40 | 4)) = g5;
        }
    }
    int32_t v42 = *(int32_t *)(g7 + 4); // 0x10003537
    g4 = v42;
    int32_t v43 = 32 * g5; // 0x1000353c
    int32_t result = v43; // eax
    *(int32_t *)((v43 | 4) + v42) = v7;
    int32_t v44; // 0x10003550
    if (v7 != -1) {
        int32_t v45 = *(int32_t *)(g7 + 4); // 0x10003549
        result = v45;
        *(int32_t *)(v45 + 8 + v17) = g5;
        v44 = g8;
    } else {
        v44 = g8 + 4;
    }
    // 0x10003550
    g5 = *(int32_t *)v44;
    g7 = *(int32_t *)(v44 + 4);
    g2 = *(int32_t *)(v44 + 8);
    return result;
}

// Address range: 0x10003560 - 0x100035bf
int32_t function_10003560(int32_t a1) {
    char v1 = g99; // 0x10003568
    if ((v1 & 1) == 0) {
        // 0x10003570
        g99 = v1 | 1;
        *(int16_t *)&g95 = -1;
        g96 = -1;
        g97 = -1;
    }
    if ((int16_t)a1 == -1) {
        // 0x100035b2
        return (int32_t)g97 | (int32_t)&g95 & -0x10000;
    }
    int32_t v2 = *(int32_t *)(g4 + 4) + 16 * (a1 & 0xffff); // 0x100035a7
    return (int32_t)*(int16_t *)(v2 + 4) | v2 & -0x10000;
}

// Address range: 0x100035c0 - 0x1000361d
int32_t function_100035c0(int32_t a1) {
    char v1 = g99; // 0x100035c8
    if ((v1 & 1) == 0) {
        // 0x100035d0
        g99 = v1 | 1;
        *(int16_t *)&g95 = -1;
        g96 = -1;
        g97 = -1;
    }
    if ((int16_t)a1 == -1) {
        uint16_t v2 = *(int16_t *)&g95; // 0x10003616
        return (int32_t)v2 | (int32_t)&g95 & -0x10000;
    }
    int32_t v3 = *(int32_t *)(g4 + 4) + 16 * (a1 & 0xffff); // 0x10003607
    return (int32_t)*(int16_t *)v3 | v3 & -0x10000;
}

// Address range: 0x10003620 - 0x1000367f
int32_t function_10003620(int32_t a1) {
    char v1 = g99; // 0x10003628
    if ((v1 & 1) == 0) {
        // 0x10003630
        g99 = v1 | 1;
        *(int16_t *)&g95 = -1;
        g96 = -1;
        g97 = -1;
    }
    if ((int16_t)a1 == -1) {
        // 0x10003672
        return (int32_t)g96 | (int32_t)&g95 & -0x10000;
    }
    int32_t v2 = *(int32_t *)(g4 + 4) + 16 * (a1 & 0xffff); // 0x10003667
    return (int32_t)*(int16_t *)(v2 + 2) | v2 & -0x10000;
}

// Address range: 0x10003680 - 0x100036cd
int32_t function_10003680(void) {
    int32_t v1 = g7; // bp-8
    int32_t v2 = &v1; // 0x10003681
    int32_t v3 = g4; // 0x10003682
    g7 = v3;
    int32_t result;
    if ((*(char *)(v3 + 21) & 16) == 0) {
        // 0x1000368e
        result = *(int32_t *)(v3 + 24);
    } else {
        result = 0;
    }
    // 0x10003691
    g1 = result;
    int32_t v4 = result - 1; // 0x10003691
    int32_t v5 = v4; // ebx
    if (v4 < 0) {
        // 0x100036ca
        g7 = *(int32_t *)v2;
        g3 = *(int32_t *)(v2 + 4);
        return result;
    }
    int32_t result2; // 0x100036c2
    while (true) {
        // 0x100036a0
        *(int32_t *)(v2 - 4) = 1;
        g4 = g7;
        int32_t v6 = function_1000c090((int32_t)&g169); // 0x100036a4
        g1 = v6;
        if ((char)v6 != 0) {
            int32_t v7 = g4; // 0x100036ad
            int32_t v8 = g7; // 0x100036af
            int32_t v9 = *(int32_t *)(v8 + 16); // 0x100036b2
            g4 = v9;
            *(char *)(v9 + v7 - *(int32_t *)(v8 + 32)) = 9;
            int32_t * v10 = (int32_t *)(g7 + 16); // 0x100036b9
            *v10 = *v10 + 1;
            int32_t v11 = *(int32_t *)(g7 + 16); // 0x100036bc
            g1 = v11;
            *(int32_t *)(g8 - 4) = v11;
            g4 = g7;
            result2 = function_1000c0e0((int32_t)&g169);
            g1 = result2;
        } else {
            result2 = v6;
        }
        int32_t v12 = v5 - 1; // 0x100036c7
        v5 = v12;
        if (v12 < 0) {
            v2 = g8;
            // break -> 0x100036ca
            break;
        }
        v2 = g8;
    }
    // 0x100036ca
    g7 = *(int32_t *)v2;
    g3 = *(int32_t *)(v2 + 4);
    return result2;
}

// Address range: 0x100036d0 - 0x10003729
int32_t function_100036d0(int32_t a1) {
    int32_t v1 = g4; // 0x100036d4
    g7 = v1;
    int32_t v2; // 0x100036fd
    if ((*(char *)(v1 + 21) & 1) != 0) {
        int32_t v3 = *(int32_t *)(v1 + 16); // 0x100036dc
        g1 = v3;
        if (v3 != 0) {
            int32_t v4 = v3 - *(int32_t *)(v1 + 32); // 0x100036e3
            char v5 = *(char *)(v1 - 1 + v4); // 0x100036e8
            g1 = (int32_t)(v5 == 10) | v4 & -256;
            if (v5 == 10) {
                // 0x100036f4
                g1 = function_10003680();
                v2 = g7;
            } else {
                v2 = v1;
            }
        } else {
            v2 = v1;
        }
    } else {
        v2 = v1;
    }
    // 0x100036fb
    g4 = v2;
    int32_t v6 = function_1000c090(1); // 0x100036ff
    int32_t result; // 0x10003726
    if ((char)v6 != 0) {
        int32_t v7 = g7; // 0x10003708
        int32_t v8 = *(int32_t *)(v7 + 16); // 0x10003708
        int32_t v9 = *(int32_t *)(v7 + 32); // 0x1000370b
        int32_t v10 = g4; // 0x1000370e
        g4 = v10 & -256 | a1 & 255;
        *(char *)(v10 + v8 - v9) = (char)a1;
        int32_t * v11 = (int32_t *)(g7 + 16); // 0x10003716
        *v11 = *v11 + 1;
        int32_t v12 = g7; // 0x10003719
        int32_t v13 = *(int32_t *)(v12 + 16); // 0x10003719
        g1 = v13;
        g4 = v12;
        result = function_1000c0e0(v13);
    } else {
        result = v6;
    }
    // 0x10003724
    g2 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x10003730 - 0x10003765
int32_t function_10003730(void) {
    int32_t v1 = g4; // 0x10003731
    *(int32_t *)(v1 + 12) = 0;
    if (*(int32_t *)(v1 + 8) < 0) {
        // 0x10003763
        g7 = *(int32_t *)g8;
        return g1;
    }
    int32_t v2 = g4; // 0x10003740
    g1 = v2;
    if (v2 != 0) {
        int32_t v3 = *(int32_t *)0x100221e8; // 0x10003746
        g4 = v3;
        int32_t v4 = *(int32_t *)v3; // 0x1000374c
        g4 = v4;
        g1 = *(int32_t *)(*(int32_t *)v4 + 20);
        *(int32_t *)v1 = 0;
    }
    // 0x1000375c
    *(int32_t *)(v1 + 4) = 0;
    // 0x10003763
    g7 = *(int32_t *)g8;
    return g1;
}

// Address range: 0x10003770 - 0x1000379e
int32_t function_10003770(void) {
    int32_t v1 = g4; // 0x10003771
    if (*(int32_t *)(v1 + 8) < 0) {
        // 0x1000379c
        return g1;
    }
    // 0x10003779
    g1 = v1;
    int32_t * v2; // 0x10003795
    if (v1 != 0) {
        int32_t v3 = *(int32_t *)0x100221e8; // 0x1000377f
        g4 = v3;
        int32_t v4 = *(int32_t *)v3; // 0x10003785
        g4 = v4;
        g1 = *(int32_t *)(*(int32_t *)v4 + 20);
        *(int32_t *)v1 = 0;
        v2 = (int32_t *)(v1 + 4);
    } else {
        v2 = (int32_t *)4;
    }
    // 0x10003795
    *v2 = 0;
    // 0x1000379c
    return g1;
}

// Address range: 0x100037a0 - 0x1000388b
int32_t function_100037a0(int32_t * a1) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // 0x100037a0
    int32_t v3 = g3; // 0x100037a3
    int32_t v4 = g5; // 0x100037a4
    int32_t v5 = g4; // 0x100037a5
    int32_t v6 = v5; // edi
    int32_t result = *(int32_t *)(v5 + 16); // 0x100037a7
    int32_t v7 = result; // ebx
    if (result == -1) {
        // 0x10003883
        g5 = v4;
        g3 = v3;
        g2 = v2;
        return result;
    }
    int32_t v8 = g7; // bp-16
    int32_t v9 = &v8; // 0x100037b3
    int32_t * v10 = (int32_t *)(v9 - 4); // 0x100037c5
    int32_t * v11 = (int32_t *)(v9 - 8); // 0x100037c6
    int32_t result2; // 0x1000387c
    while (true) {
        // 0x100037b4
        g4 = v1;
        int32_t v12 = 32 * result; // 0x100037be
        int32_t v13 = (v12 | 16) + *(int32_t *)(v5 + 4); // 0x100037c1
        *v10 = v13;
        *v11 = g4;
        int32_t v14; // 0x1000386e
        if ((char)v13 == 0) {
            // 0x10003816
            g4 = v1;
            int32_t v15 = *(int32_t *)(v6 + 4) + 16 + v12; // eax
            *v10 = v1;
            *v11 = v15;
            if ((char)v15 == 0) {
                // break -> 0x10003816
                break;
            }
            char v16 = g94; // 0x1000382d
            if ((v16 & 1) != 0) {
                // branch -> 0x1000385e
            } else {
                // 0x10003836
                g4 = 1;
                g94 = v16 | 1;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
            }
            // 0x1000385e
            int32_t v17;
            if (v7 != -1) {
                // 0x10003862
                v17 = v12 + *(int32_t *)(v6 + 4);
            } else {
                v17 = &g90;
            }
            // 0x1000386e
            v14 = *(int32_t *)(v17 + 4);
            v7 = v14;
        } else {
            char v18 = g94; // 0x100037d0
            if ((v18 & 1) == 0) {
                // 0x100037d9
                g94 = v18 | 1;
                g4 = -1;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
            }
            // 0x100037fe
            if (v7 == -1) {
                int32_t v19 = g90; // 0x10003812
                v7 = v19;
                v14 = v19;
            } else {
                int32_t v20 = *(int32_t *)(v12 + *(int32_t *)(v6 + 4)); // 0x10003806
                v7 = v20;
                v14 = v20;
            }
        }
        if (v14 == -1) {
            result2 = v14;
            goto lab_0x1000387a_2;
        }
        // 0x10003871
        result = v14;
        v5 = v6;
    }
    // 0x10003816
    result2 = v7;
    goto lab_0x1000387a_2;
  lab_0x1000387a_2:
    // 0x1000387a
    g7 = v8;
    g5 = *(int32_t *)(v9 + 4);
    g3 = *(int32_t *)(v9 + 8);
    g2 = *(int32_t *)(v9 + 12);
    return result2;
}

// Address range: 0x10003890 - 0x10003cd6
int32_t function_10003890(int32_t a1) {
    int32_t v1 = g4; // 0x10003899
    g5 = v1;
    int32_t v2; // eax
    int32_t v3;
    int32_t v4; // 0x10003cc2
    if (*(int32_t *)(v1 + 16) == a1) {
      lab_0x10003cbd:
        v4 = v1;
    } else {
        while (true) {
          lab_0x100038b3:;
            char v5 = g94; // 0x100038b3
            int32_t v6 = v5; // 0x100038b3
            g4 = v6;
            int32_t v7; // 0x10003905
            if ((v5 & 1) != 0) {
                v7 = v6;
            } else {
                int32_t v8 = v6 | 1; // 0x100038c2
                g4 = v8;
                g94 = v8;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
                v7 = v8;
            }
            int32_t v9;
            if (a1 != -1) {
                // 0x100038ee
                v9 = *(int32_t *)(v1 + 4) + 32 * a1;
            } else {
                v9 = &g90;
            }
            int32_t v10 = *(int32_t *)(v9 + 8); // 0x100038fd
            int32_t v11; // 0x10003905
            if ((v7 & 1) == 0) {
                // 0x10003905
                v11 = v7 | 1;
                g4 = v11;
                g94 = v11;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
            } else {
                v11 = v7;
            }
            int32_t v12;
            if (v10 != -1) {
                // 0x10003929
                v12 = *(int32_t *)(v1 + 4) + 32 * v10;
            } else {
                v12 = &g90;
            }
            // 0x10003936
            g1 = v12;
            if (*(int32_t *)(v12 + 12) != 0) {
                v4 = v1;
                // break -> 0x10003cc2
                break;
            }
            int32_t v13; // 0x10003945
            if ((v11 & 1) == 0) {
                // 0x10003945
                v13 = v11 | 1;
                g4 = v13;
                g94 = v13;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
            } else {
                v13 = v11;
            }
            int32_t v14;
            if (a1 != -1) {
                // 0x10003969
                v14 = *(int32_t *)(v1 + 4) + 32 * a1;
            } else {
                v14 = &g90;
            }
            int32_t v15 = *(int32_t *)(v14 + 8); // 0x10003978
            g7 = v15;
            if ((v13 & 1) == 0) {
                int32_t v16 = v13 | 1; // 0x10003980
                g4 = v16;
                g94 = v16;
                g90 = -1;
                g91 = -1;
                g92 = -1;
                g93 = 1;
            }
            int32_t v17;
            if (v15 != -1) {
                // 0x100039a4
                v17 = *(int32_t *)(v1 + 4) + 32 * v15;
            } else {
                v17 = &g90;
            }
            // 0x100039b3
            g3 = *(int32_t *)(v17 + 8);
            *(int32_t *)(g8 - 4) = v15;
            g4 = g5;
            int32_t v18 = function_10003000((int32_t)&g169); // 0x100039b9
            int32_t v19 = g94; // 0x100039be
            g4 = v19;
            if ((char)v18 == 0) {
                int32_t v20; // 0x10003b77
                if ((v19 & 1) != 0) {
                    v20 = v19;
                } else {
                    int32_t v21 = v19 | 1; // 0x10003b30
                    g4 = v21;
                    g94 = v21;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                    v20 = v21;
                }
                int32_t v22 = g3; // 0x10003b5d
                int32_t v23;
                if (v22 != -1) {
                    // 0x10003b61
                    v23 = *(int32_t *)(g5 + 4) + 32 * v22;
                } else {
                    v23 = &g90;
                }
                int32_t v24 = *(int32_t *)v23; // 0x10003b70
                v2 = v24;
                if ((v20 & 1) == 0) {
                    int32_t v25 = v20 | 1; // 0x10003b77
                    g4 = v25;
                    g94 = v25;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                }
                int32_t v26;
                if (v24 != -1) {
                    int32_t v27 = 32 * v24; // 0x10003ba2
                    g4 = v27;
                    v26 = *(int32_t *)(g5 + 4) + v27;
                } else {
                    v26 = &g90;
                }
                // 0x10003baf
                g4 = v26;
                if (*(int32_t *)(v26 + 12) != 0) {
                    // 0x10003be6
                    *(int32_t *)(g8 - 4) = a1;
                    g4 = g5;
                    int32_t v28 = function_10003000((int32_t)&g169); // 0x10003bec
                    int32_t v29 = g7;
                    int32_t v30; // 0x10003bfc
                    int32_t v31; // 0x10003c4a
                    if ((char)v28 != 0) {
                        // 0x10003bf9
                        *(int32_t *)(g8 - 4) = v29;
                        g4 = g5;
                        v30 = g7;
                        function_10003360(v30);
                        char v32 = g94; // 0x10003c04
                        int32_t v33 = v32; // 0x10003c04
                        int32_t v34; // 0x10003c51
                        if ((v32 & 1) != 0) {
                            // 0x10003c36
                            g4 = -1;
                            v34 = v33;
                        } else {
                            int32_t v35 = v33 | 1; // 0x10003c0d
                            g4 = -1;
                            g94 = v35;
                            g90 = -1;
                            g91 = -1;
                            g92 = -1;
                            g93 = 1;
                            v34 = v35;
                        }
                        int32_t v36 = g7; // 0x10003c39
                        int32_t v37;
                        if (v36 != -1) {
                            // 0x10003c3d
                            v37 = *(int32_t *)(g5 + 4) + 32 * v36;
                        } else {
                            v37 = &g90;
                        }
                        // 0x10003c4a
                        v31 = *(int32_t *)(v37 + 8);
                        if ((v34 & 1) == 0) {
                            // 0x10003c51
                            g94 = v34 | 1;
                            g90 = -1;
                            g91 = -1;
                            g92 = -1;
                            g93 = 1;
                        }
                        int32_t v38;
                        if (v31 != -1) {
                            // 0x10003c79
                            v38 = *(int32_t *)(g5 + 4) + 32 * v31;
                        } else {
                            v38 = &g90;
                        }
                        // 0x10003c88
                        g3 = *(int32_t *)(v38 + 8);
                    } else {
                        v31 = v29;
                        v30 = a1;
                    }
                    // 0x10003c8b
                    *(int32_t *)(*(int32_t *)(g5 + 4) + (32 * v31 | 12)) = 1;
                    *(int32_t *)((32 * g3 | 12) + *(int32_t *)(g5 + 4)) = 0;
                    *(int32_t *)(g8 - 4) = g3;
                    g4 = g5;
                    function_10003160((int32_t)&g169);
                    v3 = v30;
                    goto lab_0x10003cb1;
                } else {
                    goto lab_0x10003bb5;
                }
            } else {
                int32_t v39; // 0x10003a19
                if ((v19 & 1) != 0) {
                    v39 = v19;
                } else {
                    int32_t v40 = v19 | 1; // 0x100039d1
                    g4 = v40;
                    g94 = v40;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                    v39 = v40;
                }
                int32_t v41 = g3; // 0x100039fe
                int32_t v42;
                if (v41 != -1) {
                    // 0x10003a02
                    v42 = *(int32_t *)(g5 + 4) + 32 * v41;
                } else {
                    v42 = &g90;
                }
                int32_t v43 = *(int32_t *)(v42 + 4); // 0x10003a11
                v2 = v43;
                if ((v39 & 1) == 0) {
                    int32_t v44 = v39 | 1; // 0x10003a19
                    g4 = v44;
                    g94 = v44;
                    g90 = -1;
                    g91 = -1;
                    g92 = -1;
                    g93 = 1;
                }
                int32_t v45;
                if (v43 != -1) {
                    int32_t v46 = 32 * v43; // 0x10003a44
                    g4 = v46;
                    v45 = *(int32_t *)(g5 + 4) + v46;
                } else {
                    v45 = &g90;
                }
                // 0x10003a51
                g4 = v45;
                if (*(int32_t *)(v45 + 12) == 0) {
                    goto lab_0x10003bb5;
                } else {
                    // 0x10003a5b
                    *(int32_t *)(g8 - 4) = a1;
                    g4 = g5;
                    if ((char)function_100030b0((int32_t)&g169) != 0) {
                        int32_t v47 = g8; // 0x10003a6e
                        int32_t v48;
                        *(int32_t *)(v47 - 4) = v48;
                        int32_t v49 = g5; // 0x10003a6f
                        g4 = v49;
                        int32_t v50 = g7; // 0x10003a71
                        function_10003160(v50);
                        char v51 = g94; // 0x10003a79
                        int32_t v52 = v51; // 0x10003a79
                        v2 = v52;
                        int32_t v53; // 0x10003ac6
                        if ((v51 & 1) != 0) {
                            // 0x10003aab
                            g4 = -1;
                            v53 = v52;
                        } else {
                            int32_t v54 = v52 | 1; // 0x10003a82
                            v2 = v54;
                            g4 = -1;
                            g94 = v54;
                            g90 = -1;
                            g91 = -1;
                            g92 = -1;
                            g93 = 1;
                            v53 = v54;
                        }
                        int32_t v55 = g7; // 0x10003aae
                        int32_t v56;
                        if (v55 != -1) {
                            int32_t v57 = g5; // 0x10003ab5
                            int32_t v58 = *(int32_t *)(v57 + 4); // 0x10003ab5
                            int32_t v59 = v58 + 32 * v55; // 0x10003ab5
                            v56 = v59;
                        } else {
                            v56 = &g90;
                        }
                        int32_t v60 = *(int32_t *)(v56 + 8); // 0x10003abf
                        if ((v53 & 1) == 0) {
                            int32_t v61 = v53 | 1; // 0x10003ac6
                            v2 = v61;
                            g94 = v61;
                            g90 = -1;
                            g91 = -1;
                            g92 = -1;
                            g93 = 1;
                        }
                        int32_t v62;
                        if (v60 != -1) {
                            int32_t v63 = 32 * v60; // 0x10003af0
                            v2 = v63;
                            int32_t v64 = g5; // 0x10003af3
                            int32_t v65 = *(int32_t *)(v64 + 4); // 0x10003af3
                            int32_t v66 = v65 + v63; // 0x10003af3
                            v62 = v66;
                        } else {
                            v62 = &g90;
                        }
                        // 0x10003afd
                        v2 = v62;
                        int32_t v67 = *(int32_t *)(v62 + 8); // 0x10003afd
                        g3 = v67;
                    }
                    // 0x10003b00
                    *(int32_t *)(*(int32_t *)(g5 + 4) + (32 * g7 | 12)) = 1;
                    *(int32_t *)((32 * g3 | 12) + *(int32_t *)(g5 + 4)) = 0;
                    *(int32_t *)(g8 - 4) = g3;
                    g4 = g5;
                    function_10003360((int32_t)&g169);
                    v3 = a1;
                    goto lab_0x10003cb1;
                }
            }
        }
    }
    int32_t v68 = *(int32_t *)(v4 + 16); // 0x10003cc2
    g4 = v68;
    g5 = *(int32_t *)g8;
    int32_t v69 = 32 * v68; // 0x10003cc9
    g4 = v69;
    g7 = *(int32_t *)(g8 + 4);
    *(int32_t *)((v69 | 12) + *(int32_t *)(v4 + 4)) = 1;
    g3 = *(int32_t *)g8;
    g2 = *(int32_t *)(g8 + 4);
    return g1;
  lab_0x10003bb5:
    // 0x10003bb5
    g4 = 1;
    *(int32_t *)((32 * g7 | 12) + *(int32_t *)(g5 + 4)) = 1;
    *(int32_t *)((32 * v2 | 12) + *(int32_t *)(g5 + 4)) = g4;
    int32_t v70 = *(int32_t *)(g5 + 4); // 0x10003bce
    g4 = v70;
    *(int32_t *)((32 * g3 | 12) + v70) = 0;
    v3 = g3;
    goto lab_0x10003cb1;
  lab_0x10003cb1:
    // 0x10003cb1
    g1 = v3;
    int32_t v71 = g5; // 0x10003cb4
    if (v3 == *(int32_t *)(v71 + 16)) {
        v1 = v71;
        goto lab_0x10003cbd;
    }
    v1 = v71;
    a1 = v3;
    goto lab_0x100038b3;
}

// Address range: 0x10003ce0 - 0x10003d8f
int32_t function_10003ce0(void) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g4; // 0x10003ce3
    int32_t v3 = g7; // bp-12
    uint16_t v4 = *(int16_t *)(v2 + 22); // 0x10003ce7
    g4 = v4;
    int32_t result = 0xffff; // eax
    if (v4 == -1) {
        // 0x10003d8a
        g7 = *(int32_t *)(int32_t)&v3;
        return 0xffff;
    }
    int32_t v5 = *(int32_t *)(v2 + 8); // 0x10003cfb
    int32_t v6 = v5 >= 0 == (v5 != 0) ? 0 : 0xffff; // 0x10003d05
    if (v5 >= 0 == (v5 != 0)) {
        while (true) {
            int32_t v7 = v6 & 0xffff; // 0x10003d11
            int32_t v8; // 0x10003d56
            if (v7 < *(int32_t *)(v2 + 8)) {
                if ((int16_t)v6 <= v4) {
                    // 0x10003d22
                    *(int32_t *)(g8 - 4) = v6;
                    g4 = v2;
                    int32_t v9 = function_100035c0(v6); // 0x10003d28
                    int32_t v10 = v6; // 0x10003d2d
                    result = (int32_t)((int16_t)v9 != (int16_t)v10) | v9 & -256;
                    if ((int16_t)v9 != (int16_t)v10) {
                        uint16_t v11 = *(int16_t *)(v2 + 20); // 0x10003d3a
                        g4 = g4 & -0x10000 | (int32_t)v11;
                        result = 2 * v7;
                        *(int16_t *)(*(int32_t *)(v2 + 4) + (16 * v7 | 2)) = v11;
                        int32_t v12 = *(int32_t *)(v2 + 4); // 0x10003d47
                        *(int16_t *)(8 * result + v12) = (int16_t)v6;
                        *(int16_t *)(v2 + 20) = (int16_t)v6;
                        v8 = v6;
                    } else {
                        v8 = v10;
                    }
                } else {
                    v8 = v6;
                }
            } else {
                v8 = v6;
            }
            uint16_t v13 = *(int16_t *)(v2 + 22); // 0x10003d52
            g4 = v13;
            if ((int16_t)v8 == v13) {
                // break -> 0x10003d81
                break;
            }
            int32_t v14 = v6 + 1 & 0xffff; // 0x10003d5f
            result = v14;
            int32_t v15 = v7 + 1; // 0x10003d66
            int32_t v16; // 0x10003d78
            if (v14 >= *(int32_t *)(v2 + 8)) {
                // 0x10003d6e
                v16 = 0xffff;
            } else {
                v16 = v15;
            }
            if ((int16_t)v16 == -1) {
                // break -> 0x10003d81
                break;
            }
            v6 = v16;
            v4 = v13;
        }
        // 0x10003d81
        g3 = *(int32_t *)g8;
    }
    // 0x10003d82
    *(int32_t *)(v2 + 16) = 0xffff;
    g5 = *(int32_t *)g8;
    // 0x10003d8a
    g7 = *(int32_t *)(g8 + 4);
    g2 = v1;
    return result;
}

// Address range: 0x10003d90 - 0x10003e51
int32_t function_10003d90(void) {
    int32_t v1 = g4; // 0x10003d90
    int32_t * v2 = (int32_t *)(v1 + 4); // 0x10003e36
    int16_t * v3 = (int16_t *)(v1 + 16);
    int32_t v4 = g99; // 0x10003dbf
    int32_t result; // 0x10003e50
    while (true) {
        uint16_t v5 = *v3;
        result = v5;
        int32_t v6; // 0x10003dbf
        if ((v4 & 1) == 0) {
            // 0x10003da5
            *(int16_t *)&g95 = -1;
            g96 = -1;
            g97 = -1;
            v6 = v4 | 1;
            g99 = v6;
            *(int16_t *)&g98 = 1;
        } else {
            v6 = v4;
        }
        int32_t v7;
        if (v5 != -1) {
            // 0x10003dde
            v7 = *v2 + 16 * result;
        } else {
            v7 = (int32_t)&g95;
        }
        // 0x10003dee
        if (*(int16_t *)v7 == -1) {
            // break -> 0x10003e4e
            break;
        }
        int32_t v8; // 0x10003e14
        if ((v6 & 1) == 0) {
            // 0x10003dfd
            *(int16_t *)&g95 = -1;
            g96 = -1;
            g97 = -1;
            v8 = v6 | 1;
            g99 = v8;
            *(int16_t *)&g98 = 1;
        } else {
            v8 = v6;
        }
        int16_t * v9;
        if (v5 == -1) {
            v9 = (int16_t *)&g95;
        } else {
            // 0x10003e30
            v9 = (int16_t *)(*v2 + 16 * result);
        }
        v3 = v9;
        v4 = v8;
    }
    // 0x10003e4e
    return result;
}

// Address range: 0x10003e60 - 0x10004046
int32_t function_10003e60(int32_t a1) {
    int32_t v1 = a1; // esi
    int32_t v2 = g5; // 0x10003e67
    int32_t v3 = g4; // 0x10003e69
    int32_t v4 = function_10003620(a1); // 0x10003e6b
    int32_t v5 = v1; // 0x10003e78
    g4 = v3;
    int32_t result; // 0x10004043
    if ((int16_t)v4 == -1) {
        int32_t v6 = function_10003560(v5) & 0xffff; // 0x1000402d
        int32_t v7 = g99; // 0x10003f70
        while (true) {
            int32_t v8; // 0x10003f70
            if ((v7 & 1) == 0) {
                // 0x10003f56
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v8 = v7 | 1;
                g4 = 1;
                g99 = v8;
                *(int16_t *)&g98 = 1;
            } else {
                v8 = v7;
            }
            // 0x10003f85
            g4 = 0xffff;
            int32_t v9 = v1; // 0x10003f8a
            int16_t v10 = v9; // 0x10003f8a
            int32_t v11;
            if (v10 != -1) {
                int32_t v12 = 16 * v9 & 0xffff0; // 0x10003f92
                g4 = v12;
                v11 = *(int32_t *)(v3 + 4) + v12;
            } else {
                v11 = (int32_t)&g95;
            }
            // 0x10003f9f
            g4 = v11;
            uint16_t v13 = *(int16_t *)(v11 + 4); // 0x10003f9f
            int32_t v14 = v13; // 0x10003f9f
            g4 = v14;
            int32_t v15; // 0x10003fc2
            if ((v8 & 1) == 0) {
                // 0x10003fa8
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v15 = v8 | 1;
                g99 = v15;
                *(int16_t *)&g98 = 1;
            } else {
                v15 = v8;
            }
            int32_t v16;
            if (v13 != -1) {
                int32_t v17 = 16 * v14; // 0x10003fe1
                g4 = v17;
                v16 = *(int32_t *)(v3 + 4) + v17;
            } else {
                v16 = (int32_t)&g95;
            }
            // 0x10003fee
            g4 = v16;
            if (*(int16_t *)(v16 + 2) != v10) {
                // break -> 0x1000403f
                break;
            }
            // 0x10003ff4
            g4 = 0xffff;
            v1 = v6;
            if (v6 == 0xffff) {
                // break -> 0x1000403f
                break;
            }
            int32_t v18; // 0x10004018
            if ((v15 & 1) == 0) {
                // 0x10004003
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v18 = v15 | 1;
                g4 = 1;
                g99 = v18;
                *(int16_t *)&g98 = 1;
            } else {
                v18 = v15;
            }
            int32_t v19 = *(int32_t *)(v3 + 4); // 0x10004033
            v6 = (int32_t)*(int16_t *)(v19 + 16 * v6 + 4);
            v7 = v18;
        }
        // 0x1000403f
        result = v6;
    } else {
        int32_t v20 = function_10003620(v5); // 0x10003e81
        int32_t v21 = g99; // 0x10003eaf
        int32_t v22 = v20 & 0xffff; // 0x10003f24
        while (true) {
            int32_t v23; // 0x10003eaf
            if ((v21 & 1) == 0) {
                // 0x10003e95
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v23 = v21 | 1;
                g4 = 1;
                g99 = v23;
                *(int16_t *)&g98 = 1;
            } else {
                v23 = v21;
            }
            // 0x10003ec4
            g4 = 0xffff;
            int32_t v24;
            if (v22 != 0xffff) {
                int32_t v25 = 16 * v22; // 0x10003ece
                g4 = v25;
                v24 = *(int32_t *)(v3 + 4) + v25;
            } else {
                v24 = (int32_t)&g95;
            }
            // 0x10003ede
            g4 = v24;
            if (*(int16_t *)v24 == -1) {
                // break -> 0x10004040
                break;
            }
            int32_t v26; // 0x10003f08
            if ((v23 & 1) == 0) {
                // 0x10003ef1
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v26 = v23 | 1;
                g4 = 1;
                g99 = v26;
                *(int16_t *)&g98 = 1;
            } else {
                v26 = v23;
            }
            // 0x10003f1d
            g4 = 0xffff;
            int16_t * v27;
            if (v22 == 0xffff) {
                v27 = (int16_t *)&g95;
            } else {
                // 0x10003f24
                v27 = (int16_t *)(*(int32_t *)(v3 + 4) + 16 * v22);
            }
            // 0x10003e90
            v21 = v26;
            v22 = (int32_t)*v27;
        }
        result = v22;
    }
    // 0x10004040
    g5 = v5;
    g7 = a1;
    g2 = v2;
    return result;
}

// Address range: 0x10004050 - 0x100040b5
int32_t function_10004050(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g7; // bp-8
    int32_t v2 = *(int32_t *)(g4 + 4) + 32 * a1; // 0x1000405f
    g1 = v2;
    *(int32_t *)(v2 + 8) = a2;
    *(int32_t *)(g1 + 4) = -1;
    *(int32_t *)g1 = -1;
    *(int32_t *)(g1 + 12) = 0;
    int32_t v3; // bp-12
    if (a2 == -1) {
        // 0x100040a7
        v3 = a1;
        *(int32_t *)(g4 + 16) = a1;
        int32_t result = function_10003890(v3); // 0x100040ab
        g7 = v3;
        g2 = v1;
        return result;
    }
    int32_t v4 = *(int32_t *)(g4 + 4); // 0x1000407e
    g1 = v4;
    int32_t v5 = 32 * a2; // 0x10004081
    v3 = a1;
    if ((char)a3 == 0) {
        // 0x10004098
        *(int32_t *)(v4 + (v5 | 4)) = a1;
        int32_t result2 = function_10003890(v3); // 0x1000409d
        g7 = v3;
        g2 = v1;
        return result2;
    }
    // 0x1000408a
    *(int32_t *)(v4 + v5) = a1;
    int32_t result3 = function_10003890(v3); // 0x1000408e
    g7 = v3;
    g2 = v1;
    return result3;
}

// Address range: 0x100040c0 - 0x1000425c
int32_t function_100040c0(void) {
    char v1 = g109; // 0x100040c0
    if ((v1 & 1) == 0) {
        // 0x100040c9
        g109 = v1 | 1;
        g4 = &g100;
        function_1000c7c0(0, 0, 1);
        _atexit((void (*)())0x10021570);
    }
    // 0x100040ed
    g1 = 0;
    g4 = &g100;
    g103 = 0;
    g104 = 0;
    *(char *)&g105 = 0;
    g108 = 0;
    g107 = -1;
    function_1000c0e0(0);
    g3 = *(int32_t *)0x100221e4;
    g5 = 1;
    int32_t v2 = CommandLine(); // 0x10004125
    g4 = v2;
    int32_t v3 = *(int32_t *)(*(int32_t *)v2 + 36); // 0x1000412b
    g1 = v3;
    int32_t v4; // 0x100041ec
    if (v3 > g5) {
        while (true) {
          lab_0x10004140:;
            int32_t v5 = CommandLine(); // 0x10004140
            g4 = v5;
            *(int32_t *)(g8 - 4) = g5;
            int32_t v6 = *(int32_t *)(*(int32_t *)v5 + 44); // 0x1000414c
            g7 = v6;
            if (v6 == 0) {
                goto lab_0x100041d0;
            } else {
                unsigned char v7 = *(char *)v6; // 0x10004152
                if (v7 != 45) {
                    int32_t v8 = CommandLine(); // 0x100041a4
                    int32_t v9 = *(int32_t *)v8; // 0x100041a6
                    g6 = v9;
                    if (v7 != 43) {
                        // 0x100041a4
                        g4 = v8;
                        g1 = *(int32_t *)(v9 + 44);
                        *(int32_t *)(g8 - 4) = g5;
                        int32_t v10 = function_10002a30(); // 0x100041b0
                        g1 = v10;
                        if (v10 == 0) {
                            goto lab_0x100041d0;
                        } else {
                            // 0x100041b9
                            *(int32_t *)(g8 - 4) = v10;
                            goto lab_0x100041ba;
                        }
                    } else {
                        // 0x10004171
                        *(int32_t *)(g8 - 4) = 0;
                        g4 = v8;
                        int32_t v11 = *(int32_t *)(g6 + 32); // 0x10004179
                        g1 = v11;
                        *(int32_t *)(g8 - 8) = v6;
                        int32_t v12 = v6 + 1; // 0x1000417f
                        g7 = v12;
                        int32_t * v13 = (int32_t *)(g8 - 12); // 0x100041a1
                        if (v11 == 0) {
                            // 0x100041a1
                            *v13 = v12;
                            goto lab_0x100041ba;
                        } else {
                            // 0x10004184
                            *v13 = v11;
                            *(int32_t *)(g8 - 16) = g7;
                            *(int32_t *)(g8 - 20) = (int32_t)"%s %s;";
                            int32_t v14 = function_100029e0((int32_t)&g169); // 0x1000418b
                            g1 = v14;
                            *(int32_t *)(g8 + 8) = v14;
                            g4 = &g100;
                            function_1000cf90((int32_t)&g169);
                            g5++;
                            goto lab_0x100041d0;
                        }
                    }
                } else {
                    int32_t v15 = CommandLine(); // 0x10004158
                    *(int32_t *)(g8 - 4) = 0;
                    g4 = v15;
                    *(int32_t *)(g8 - 8) = v6;
                    if (*(int32_t *)(*(int32_t *)v15 + 32) != 0) {
                        // 0x1000416a
                        g5++;
                    }
                    goto lab_0x100041d0;
                }
            }
        }
      lab_0x100041e4:
        // 0x100041e4
        g7 = *(int32_t *)g8;
        v4 = g8 + 4;
    } else {
        // 0x100040ed
        v4 = g8;
    }
    // 0x100041e5
    g5 = *(int32_t *)v4;
    g3 = *(int32_t *)(v4 + 4);
    int32_t v16 = v4 + 8; // 0x100041ed
    int32_t v17; // 0x1000421b
    if ((g106 & 1) != 0) {
        int32_t v18 = g104; // 0x100041f0
        g1 = v18;
        if (v18 != 0) {
            int32_t v19 = v18 - g108; // 0x100041f9
            int32_t v20 = g100; // 0x100041ff
            g4 = v20;
            char v21 = *(char *)(v19 - 1 + v20); // 0x10004205
            g1 = (int32_t)(v21 == 10) | v19 & -256;
            if (v21 == 10) {
                // 0x10004211
                g4 = &g100;
                g1 = function_10003680();
                v17 = g8;
            } else {
                v17 = v16;
            }
        } else {
            v17 = v16;
        }
    } else {
        v17 = v16;
    }
    // 0x1000421b
    *(int32_t *)(v17 - 4) = 1;
    g4 = &g100;
    int32_t v22 = function_1000c090((int32_t)&g169); // 0x10004222
    int32_t v23 = g100; // 0x10004229
    int32_t result; // 0x1000425b
    if ((char)v22 != 0) {
        // 0x10004230
        g4 = &g100;
        *(char *)(g104 - g108 + v23) = 0;
        int32_t v24 = g104 + 1; // 0x1000424a
        g1 = v24;
        *(int32_t *)(g8 - 4) = v24;
        g104 = g1;
        function_1000c0e0((int32_t)&g169);
        result = g100;
    } else {
        result = v23;
    }
    // 0x1000425b
    return result;
  lab_0x100041d0:
    // 0x100041d0
    g5++;
    int32_t v25 = CommandLine(); // 0x100041d1
    g4 = v25;
    uint32_t v26 = *(int32_t *)(*(int32_t *)v25 + 36); // 0x100041d7
    g1 = v26;
    if (g5 >= v26) {
        // break -> 0x100041e4
        goto lab_0x100041e4;
    }
    goto lab_0x10004140;
  lab_0x100041ba:
    // 0x100041ba
    g4 = &g100;
    g1 = function_1000cf90((int32_t)&g169);
    *(int32_t *)(g8 - 4) = 59;
    g4 = &g100;
    function_100036d0((int32_t)&g169);
    goto lab_0x100041d0;
}

// Address range: 0x10004260 - 0x10004366
int32_t function_10004260(void) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g4; // 0x10004263
    int32_t result = *(int32_t *)(v2 + 28); // 0x10004264
    int32_t result2 = result; // eax
    if (result == -1) {
        // 0x10004362
        return result;
    }
    int32_t v3 = 0; // edx
    int32_t v4 = *(int32_t *)(v2 + 8); // 0x10004278
    int32_t v5 = v4 >= 0 != v4 != 0; // 0x10004283
    int32_t v6; // 0x100042f0
    int32_t v7; // 0x100042fc
    int32_t v8; // 0x10004351
    int32_t v9; // 0x1000434a
    int32_t v10; // 0x10004359
    int32_t v11; // 0x1000433e
    if (v4 >= 0 == (v4 != 0)) {
        v6 = v2;
        v7 = 0;
        while (true) {
          lab_0x10004290:;
            int32_t v12; // 0x10004345
            if (v5 >= v7) {
                // 0x10004298
                if (!((v5 > result | v5 >= *(int32_t *)(v6 + 8)))) {
                    char v13 = g94; // 0x100042a9
                    if ((v13 & 1) == 0) {
                        // 0x100042b2
                        g94 = v13 | 1;
                        g90 = -1;
                        g91 = -1;
                        g92 = -1;
                        g93 = 1;
                    }
                    int32_t v14;
                    if (v5 != -1) {
                        // 0x100042d8
                        v14 = *(int32_t *)(v6 + 4) + 32 * v5;
                    } else {
                        v14 = &g90;
                    }
                    // 0x100042e7
                    if (*(int32_t *)v14 != v5) {
                        int32_t v15 = 32 * v5; // 0x100042f5
                        int32_t v16 = *(int32_t *)(v6 + 4) + (v15 | 16); // 0x100042f8
                        int32_t v17 = v16; // edi
                        *(int32_t *)(v16 + 12) = v7;
                        int32_t v18 = v17; // 0x100042ff
                        int32_t v19 = v3; // 0x100042ff
                        if (*(int32_t *)(v18 + 8) >= v19) {
                            int32_t v20 = *(int32_t *)v18; // 0x10004304
                            int32_t v21; // 0x10004325
                            if (v20 != v19) {
                                int32_t v22 = *(int32_t *)0x100221e8; // 0x1000430a
                                g4 = v22;
                                g4 = *(int32_t *)v22;
                                *(int32_t *)(g8 - 4) = v20;
                                g4 = v2;
                                *(int32_t *)v17 = 0;
                                v3 = 0;
                                v21 = 0;
                            } else {
                                v17 = v18;
                                v21 = v19;
                            }
                            // 0x10004325
                            *(int32_t *)(v17 + 4) = v21;
                        }
                        int32_t v23 = g4; // 0x10004328
                        int32_t v24 = *(int32_t *)(v23 + 4); // 0x1000432b
                        *(int32_t *)(v24 + 4 + v15) = *(int32_t *)(v23 + 24);
                        *(int32_t *)(v15 + *(int32_t *)(g4 + 4)) = v5;
                        *(int32_t *)(g4 + 24) = v5;
                        v12 = v5;
                        v9 = g4;
                    } else {
                        v12 = v5;
                        v9 = v6;
                    }
                } else {
                    v12 = v5;
                    v9 = v6;
                }
            } else {
                v12 = v5;
                v9 = v6;
            }
            // 0x1000433e
            v11 = *(int32_t *)(v9 + 28);
            result2 = v11;
            if (v12 == v11) {
                // break -> 0x10004359
                break;
            }
            int32_t v25 = v12 + 1; // 0x10004345
            if (v25 < v3) {
                // 0x1000434f
                v8 = -1;
                goto lab_0x10004351;
            } else {
                // 0x1000434a
                if (v25 < *(int32_t *)(v9 + 8)) {
                    v8 = v25;
                    goto lab_0x10004351;
                } else {
                    // 0x1000434f
                    v8 = -1;
                    goto lab_0x10004351;
                }
            }
        }
      lab_0x10004359:
        v10 = v9;
    } else {
        v10 = v2;
    }
    // 0x10004359
    *(int32_t *)(v10 + 16) = -1;
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    *(int32_t *)(g4 + 20) = v3;
    g3 = *(int32_t *)g8;
    // 0x10004362
    g2 = v1;
    return result2;
  lab_0x10004351:
    if (v8 == -1) {
        // break -> 0x10004359
        goto lab_0x10004359;
    }
    result = v11;
    v6 = v9;
    v7 = v3;
    v5 = v8;
    goto lab_0x10004290;
}

// Address range: 0x10004370 - 0x100043cb
int32_t function_10004370(void) {
    // 0x10004370
    g5 = g4;
    int32_t v1 = function_10003d90(); // 0x10004374
    int32_t v2 = v1 & 0xffff; // 0x10004379
    g7 = v2;
    int32_t v3; // 0x100043c4
    if ((int16_t)v1 == -1) {
        // 0x10004370
        v3 = g8;
    } else {
        int32_t v4 = g3; // bp-12
        int32_t v5 = &v4; // 0x100043a9
        int32_t v6 = *(int32_t *)0x100221e8; // 0x10004390
        g4 = v6;
        g4 = *(int32_t *)v6;
        int32_t v7 = *(int32_t *)(g5 + 4); // 0x10004398
        g3 = v7;
        *(int32_t *)(v5 - 4) = *(int32_t *)(v7 + (16 * v2 | 8));
        *(int32_t *)(v5 - 8) = g7;
        g4 = g5;
        int32_t v8 = function_10003e60((int32_t)&g169); // 0x100043af
        int32_t v9 = v8 & 0xffff; // 0x100043b4
        g7 = v9;
        while ((int16_t)v8 != -1) {
            // 0x10004390
            v5 = g8;
            v6 = *(int32_t *)0x100221e8;
            g4 = v6;
            g4 = *(int32_t *)v6;
            v7 = *(int32_t *)(g5 + 4);
            g3 = v7;
            *(int32_t *)(v5 - 4) = *(int32_t *)(v7 + (16 * v9 | 8));
            *(int32_t *)(v5 - 8) = g7;
            g4 = g5;
            v8 = function_10003e60((int32_t)&g169);
            v9 = v8 & 0xffff;
            g7 = v9;
        }
        // 0x100043c1
        g3 = *(int32_t *)g8;
        v3 = g8 + 4;
    }
    // 0x100043c2
    g4 = g5;
    g5 = *(int32_t *)v3;
    g7 = *(int32_t *)(v3 + 4);
    return function_10003ce0();
}

// Address range: 0x100043d0 - 0x10004430
int32_t function_100043d0(void) {
    // 0x100043d0
    g7 = g4;
    int32_t result = function_10004260(); // eax
    int32_t v1 = 0; // edi
    *(int32_t *)(g7 + 24) = -1;
    if (*(int32_t *)(g7 + 12) >= v1) {
        int32_t * v2 = (int32_t *)(g7 + 4); // 0x100043e7
        int32_t v3 = *v2; // 0x100043e7
        result = v3;
        if (v3 != v1) {
            int32_t v4 = *(int32_t *)0x100221e8; // 0x100043ee
            g4 = v4;
            int32_t v5 = *(int32_t *)v4; // 0x100043f4
            g4 = v5;
            result = *(int32_t *)(*(int32_t *)v5 + 20);
            *v2 = v1;
        }
        // 0x10004401
        *(int32_t *)(g7 + 8) = v1;
    }
    // 0x10004404
    *(int32_t *)(g7 + 28) = -1;
    if (*(int32_t *)(g7 + 12) < v1) {
        // 0x1000442d
        return result;
    }
    int32_t v6 = *(int32_t *)(g7 + 4); // 0x10004410
    result = v6;
    if (v6 != v1) {
        int32_t v7 = *(int32_t *)0x100221e8; // 0x10004417
        g4 = v7;
        int32_t v8 = *(int32_t *)v7; // 0x1000441d
        g4 = v8;
        *(int32_t *)(g8 - 4) = v6;
        result = *(int32_t *)(*(int32_t *)v8 + 20);
        *(int32_t *)(g7 + 4) = v1;
    }
    // 0x1000442a
    *(int32_t *)(g7 + 8) = v1;
    // 0x1000442d
    return result;
}

// Address range: 0x10004430 - 0x10004496
int32_t function_10004430(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    g7 = g4;
    int32_t v2 = -1; // bp-12
    int32_t v3 = 0; // bp-8
    function_10002e40(a1, &v2, &v3);
    g4 = g7;
    int32_t v4 = function_10002f30(); // 0x1000445b
    g5 = v4;
    g4 = g7;
    function_10004050(v4, v2, v3);
    int32_t v5 = g7; // 0x10004472
    int32_t * v6 = (int32_t *)(v5 + 20); // 0x10004475
    *v6 = *v6 + 1;
    int32_t v7 = g5; // 0x10004478
    int32_t v8 = (32 * v7 | 16) + *(int32_t *)(v5 + 4); // 0x1000447d
    g4 = v8;
    int32_t result; // 0x1000448b
    if (v8 != 0) {
        // 0x10004485
        function_1000d190(g3);
        result = g5;
    } else {
        result = v7;
    }
    // 0x1000448b
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = v1;
    return result;
}

// Address range: 0x100044a0 - 0x1000451b
int32_t function_100044a0(void) {
    int32_t v1 = g4; // 0x100044a2
    int32_t v2 = 0; // edi
    *(int32_t *)(v1 + 328) = 0;
    if (*(int32_t *)(v1 + 324) >= v2) {
        int32_t * v3 = (int32_t *)(v1 + 316); // 0x100044b4
        if (*v3 != v2) {
            int32_t v4 = *(int32_t *)0x100221e8; // 0x100044be
            g4 = v4;
            g4 = *(int32_t *)v4;
            *v3 = v2;
        }
        // 0x100044d4
        *(int32_t *)(v1 + 320) = v2;
    }
    // 0x100044da
    *(int32_t *)(v1 + 312) = v2;
    if (*(int32_t *)(v1 + 308) >= v2) {
        int32_t v5 = *(int32_t *)(v1 + 300); // 0x100044e8
        if (v5 != v2) {
            int32_t v6 = *(int32_t *)0x100221e8; // 0x100044f2
            g4 = v6;
            g4 = *(int32_t *)v6;
            *(int32_t *)(g8 - 4) = v5;
            *(int32_t *)(v1 + 300) = v2;
        }
        // 0x10004508
        *(int32_t *)(v1 + 304) = v2;
    }
    // 0x1000450e
    g5 = *(int32_t *)g8;
    g4 = v1 + 264;
    return function_100043d0();
}

// Address range: 0x10004520 - 0x10004596
// Demangled:     public: __thiscall std::_Init_locks::_Init_locks()
int32_t _3f__3f_0_Init_locks_40_std_40__40_QAE_40_XZ(void) {
    int32_t v1 = 0; // eax
    int32_t v2 = g4; // 0x10004523
    g7 = v2;
    *(char *)v2 = 0;
    *(int32_t *)(g7 + 264) = 0x100056d0;
    *(int32_t *)(g7 + 268) = v1;
    *(int32_t *)(g7 + 272) = v1;
    *(int32_t *)(g7 + 276) = v1;
    g4 = -1;
    *(int32_t *)(g7 + 280) = -1;
    *(int32_t *)(g7 + 284) = v1;
    *(int32_t *)(g7 + 288) = g4;
    *(int32_t *)(g7 + 292) = g4;
    int32_t v3 = g7; // 0x1000455e
    g4 = v3 + 300;
    *(int32_t *)(v3 + 296) = *(int32_t *)(v3 + 268);
    function_1000d140();
    g4 = g7 + 316;
    function_1000d140();
    g4 = g7 + 300;
    function_1000d100("reslists");
    return g7;
}

// Address range: 0x100045a0 - 0x100046a7
int32_t function_100045a0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-280
    int32_t v3 = &v2; // 0x100045a3
    if ((char)g4 == 0) {
        // 0x100046a0
        return g1;
    }
    // 0x100045b5
    g5 = a1;
    int32_t v4; // bp-20
    int32_t v5 = &v4; // 0x100045bb
    g4 = v5;
    function_1000d150(a1);
    g4 = g3 + 264;
    int32_t v6 = function_100037a0(&v4); // 0x100045cd
    int32_t v7;
    int32_t result; // 0x100046a45
    if (v7 >= 0) {
        // 0x100045e2
        if (v4 != 0) {
            int32_t v8 = *(int32_t *)0x100221e8; // 0x100045e9
            g4 = v8;
            int32_t v9 = *(int32_t *)v8; // 0x100045ef
            g4 = v9;
            result = *(int32_t *)(*(int32_t *)v9 + 20);
        } else {
            result = 0;
        }
    } else {
        result = v6;
    }
    if (v6 != -1) {
        // 0x100046a0
        return result;
    }
    // 0x10004603
    *(int32_t *)(g8 - 4) = g5;
    g4 = v5;
    function_1000d150(0);
    *(int32_t *)(g8 - 4) = v5;
    g4 = g3 + 264;
    function_10004430((int32_t)&g169);
    if (v7 >= 0) {
        if (v4 != 0) {
            // 0x1000462f
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = v4;
        }
    }
    // 0x1000463f
    *(int32_t *)(g8 - 4) = (int32_t)&g76;
    *(int32_t *)(g8 - 8) = g5;
    int32_t v10 = function_10009580(NULL, &g169); // 0x10004645
    int32_t result2; // 0x100046a44
    if (v10 != 0) {
        // 0x10004653
        *(int32_t *)(g8 + 4) = (int32_t)&g76;
        int32_t v11 = function_10009450((int32_t)&g169); // 0x10004658
        *(int32_t *)(g8 - 4) = 260;
        *(int32_t *)(g8 - 8) = v10 + 1 + v11;
        g4 = v3;
        *(int32_t *)(g8 - 12) = v3;
        function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
        g6 = v3;
        *(int32_t *)(g8 - 4) = v3;
        __strlwr((char *)&g169);
        *(int32_t *)(g8 - 4) = 92;
        *(int32_t *)(g8 - 8) = v3;
        function_10009740((int32_t)&g169, (int32_t)&g169);
        *(int32_t *)(g8 + 24) = v3;
        g4 = g3;
        result2 = function_10002d20((int32_t)&g169);
    } else {
        result2 = 0;
    }
    // 0x100046a0
    return result2;
}

// Address range: 0x100046b0 - 0x100046c7
int32_t function_100046b0(int32_t a1, int32_t a2) {
    // 0x100046b0
    g1 = a2;
    g4 = &g81;
    return function_100045a0(a1, a2, g2);
}

// Address range: 0x100046d0 - 0x10004908
int32_t function_100046d0(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-796
    int32_t v3 = &v2; // 0x100046d3
    g5 = g4;
    int32_t v4 = CommandLine(); // 0x100046e3
    g4 = v4;
    int32_t result = *(int32_t *)(*(int32_t *)v4 + 12); // 0x100046eb
    if (result != 0) {
        // 0x10004902
        return result;
    }
    int32_t v5 = CommandLine(); // 0x100046fd
    g4 = v5;
    if (*(int32_t *)(*(int32_t *)v5 + 12) == 0) {
        // 0x10004902
        return 0;
    }
    // 0x10004717
    *(char *)g5 = 1;
    int32_t v6 = CommandLine(); // 0x10004721
    char * v7 = "-reslistdir"; // bp-828
    g4 = v6;
    if (v6 != 0) {
        // branch -> 0x1000479d
    }
    // 0x1000479d
    *(int32_t *)((int32_t)&v7 - 4) = g7;
    int32_t v8 = CommandLine(); // 0x1000479e
    *(int32_t *)(g8 - 4) = (int32_t)"hl2";
    g4 = v8;
    *(int32_t *)(g8 - 8) = (int32_t)"-game";
    *(int32_t *)(g8 - 12) = *(int32_t *)(*(int32_t *)v8 + 32);
    *(int32_t *)(g8 - 16) = (int32_t)&g76;
    *(int32_t *)(g8 - 20) = (int32_t)"%s/%s";
    int32_t v9; // bp-536
    int32_t v10 = &v9; // 0x100047be
    g4 = v10;
    *(int32_t *)(g8 - 24) = 260;
    *(int32_t *)(g8 - 28) = v10;
    function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
    g6 = v10;
    *(int32_t *)(g8 - 4) = 92;
    *(int32_t *)(g8 - 8) = v10;
    function_10009740((int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = v10;
    __strlwr((char *)&g169);
    *(int32_t *)(g8 + 28) = v10;
    g4 = g5 + 316;
    function_1000d100((char *)&g169);
    g4 = g5 + 300;
    *(int32_t *)(g8 - 4) = function_1000d070();
    g4 = g5 + 316;
    *(int32_t *)(g8 - 4) = function_1000d070();
    *(int32_t *)(g8 - 8) = (int32_t)"%s\\%s";
    *(int32_t *)(g8 - 12) = 260;
    *(int32_t *)(g8 - 16) = v3;
    function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
    g4 = g119;
    *(int32_t *)(g8 + 16) = (int32_t)"GAME";
    *(int32_t *)(g8 + 12) = v3;
    g4 = g119;
    *(int32_t *)(g8 + 8) = 0x100046b0;
    int32_t v11 = CommandLine(); // 0x1000485d
    int32_t v12 = *(int32_t *)v11; // 0x1000485f
    g6 = v12;
    g4 = v11;
    int32_t v13 = g8 - 4; // 0x10004866
    *(int32_t *)v13 = (int32_t)"-startmap";
    int32_t v14; // 0x100048d3
    if (*(int32_t *)(v12 + 40) == 0) {
        int32_t v15 = CommandLine(); // 0x10004871
        int32_t v16 = *(int32_t *)v15; // 0x10004873
        g6 = v16;
        g4 = v15;
        int32_t v17 = g8 - 4; // 0x1000487a
        *(int32_t *)v17 = (int32_t)"-startstage";
        if (*(int32_t *)(v16 + 40) == 0) {
            // 0x10004885
            g4 = g5 + 264;
            function_10004260();
            g4 = g5 + 300;
            int32_t v18 = function_1000d070(); // 0x10004896
            g4 = g5 + 316;
            g3 = v18;
            int32_t v19 = function_1000d070(); // eax
            *(int32_t *)(g8 - 4) = (int32_t)"all.lst";
            *(int32_t *)(g8 - 8) = g3;
            *(int32_t *)(g8 - 12) = v19;
            int32_t v20; // bp-276
            int32_t v21 = &v20; // 0x100048af
            g4 = v21;
            *(int32_t *)(g8 - 16) = (int32_t)"%s\\%s\\%s";
            *(int32_t *)(g8 - 20) = v21;
            int32_t v22 = function_10002c60(&g169, (char *)&g169); // 0x100048bb
            g4 = g119;
            g6 = *(int32_t *)g119;
            *(int32_t *)(g8 + 16) = (int32_t)"GAME";
            v14 = g8 + 12;
            *(int32_t *)v14 = v22 + 5;
        } else {
            v14 = v17;
        }
    } else {
        v14 = v13;
    }
    int32_t v23 = g5 + 1; // 0x100048d9
    g5 = v23;
    *(int32_t *)(v14 - 4) = v23;
    *(int32_t *)(v14 - 8) = 260;
    GetCurrentDirectoryA((int32_t)&g169, (char *)&g169);
    *(int32_t *)(g8 - 4) = 1;
    *(int32_t *)(g8 - 8) = 260;
    *(int32_t *)(g8 - 12) = (int32_t)&g11;
    *(int32_t *)(g8 - 16) = g5;
    function_10009650((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = g5;
    int32_t result2 = (int32_t)__strlwr((char *)&g169); // 0x100048f9
    g7 = *(int32_t *)(g8 + 20);
    // 0x10004902
    return result2;
}

// Address range: 0x10004910 - 0x10004a30
int32_t function_10004910(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-276
    int32_t v3 = &v2; // 0x10004913
    int32_t v4 = g7; // bp-280
    int32_t v5 = g4; // 0x1000491a
    g7 = v5;
    if ((char)v5 == 0) {
        // 0x10004a2b
        g7 = *(int32_t *)(int32_t)&v4;
        return g1;
    }
    // 0x10004925
    *(char *)v5 = 0;
    int32_t v6 = CommandLine(); // 0x10004928
    g4 = v6;
    char * v7 = "-makereslists"; // bp-288
    int32_t v8; // 0x10004957
    if (*(int32_t *)(*(int32_t *)v6 + 12) != 0) {
        // 0x10004942
        g4 = g119;
        int32_t v9 = 0x100046b0; // bp-292
        v8 = &v9;
    } else {
        v8 = (int32_t)&v7;
    }
    // 0x10004957
    *(int32_t *)(v8 - 4) = g3;
    *(int32_t *)(v8 - 8) = g5;
    g4 = g7 + 300;
    int32_t v10 = function_1000d070(); // 0x1000495f
    g4 = g7 + 316;
    int32_t v11 = function_1000d070(); // eax
    g4 = v10;
    *(int32_t *)(g8 - 4) = (int32_t)"all.lst";
    *(int32_t *)(g8 - 8) = g4;
    *(int32_t *)(g8 - 12) = v11;
    *(int32_t *)(g8 - 16) = (int32_t)"%s\\%s\\%s";
    *(int32_t *)(g8 - 20) = v3;
    int32_t v12 = function_10002c60(&g169, (char *)&g169); // 0x10004988
    *(int32_t *)(g8 - 4) = (int32_t)"GAME";
    *(int32_t *)(g8 - 8) = v12 + 5;
    function_10006220((int32_t)&g169, (int32_t)&g169);
    g4 = g7 + 300;
    int32_t v13 = function_1000d070(); // 0x100049a4
    g4 = g7 + 316;
    g5 = v13;
    v11 = function_1000d070();
    *(int32_t *)(g8 - 4) = (int32_t)"engine.lst";
    *(int32_t *)(g8 - 8) = g5;
    *(int32_t *)(g8 - 12) = v11;
    *(int32_t *)(g8 - 16) = (int32_t)"%s\\%s\\%s";
    *(int32_t *)(g8 - 20) = v3;
    int32_t v14 = function_10002c60(&g169, (char *)&g169); // 0x100049c9
    *(int32_t *)(g8 - 4) = (int32_t)"GAME";
    *(int32_t *)(g8 - 8) = v14 + 5;
    function_10006220((int32_t)&g169, (int32_t)&g169);
    g4 = g7 + 264;
    g1 = function_10004260();
    int32_t v15 = 0; // ebx
    *(int32_t *)(g7 + 288) = -1;
    if (*(int32_t *)(g7 + 276) >= v15) {
        int32_t v16 = *(int32_t *)(g7 + 268); // 0x100049fd
        g1 = v16;
        if (v16 != v15) {
            int32_t v17 = *(int32_t *)0x100221e8; // 0x10004a07
            g4 = v17;
            int32_t v18 = *(int32_t *)v17; // 0x10004a0d
            g4 = v18;
            *(int32_t *)(g8 - 4) = v16;
            g1 = *(int32_t *)(*(int32_t *)v18 + 20);
            *(int32_t *)(g7 + 268) = v15;
        }
        // 0x10004a1d
        *(int32_t *)(g7 + 272) = v15;
    }
    // 0x10004a23
    *(int32_t *)(g7 + 292) = -1;
    // 0x10004a2b
    g7 = *(int32_t *)(g8 + 8);
    return g1;
}

// Address range: 0x10004a30 - 0x10004c23
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10004a30(void) {
    int32_t v1; // ebp
    g2 = &v1;
    int32_t v2; // bp-568
    int32_t v3 = &v2; // 0x10004a33
    g7 = g4;
    int32_t v4; // esi
    int32_t v5 = function_10008620(v4); // bp-8
    g1 = function_1000de50(&v5, 1);
    g1 = function_1000d1e0(0, 0);
    g4 = &v5;
    g1 = function_1000f970(&v5, 1);
    int32_t v6 = __heap_term(); // 0x10004a69
    if (g119 != 0) {
        // 0x10004a7e
        if (g120 != 0) {
            // 0x10004a8b
            g4 = v3;
            function_10001090(g5);
            g4 = g119;
            g5 = *(int32_t *)0x100221e4;
            int32_t v7; // 0x10004af9
            if (*(char *)(g7 + 364) != 0) {
                // 0x10004ae0
                g4 = g73;
                v7 = *(int32_t *)(*(int32_t *)g73 + 48);
            } else {
                int32_t v8 = CommandLine(); // 0x10004ac9
                g4 = v8;
                v7 = *(int32_t *)(*(int32_t *)v8 + 32);
            }
            // 0x10004aed
            v2 = v7;
            if (v7 == 0) {
                // 0x10004af7
                g4 = g7;
                int32_t v9 = function_10002880(v7); // 0x10004af9
                v2 = v9;
                if (v9 == 0) {
                    // 0x10004b08
                    *(int32_t *)(g8 - 4) = (int32_t)"FileSystem_LoadFileSystemModule: no -defaultgamedir or -game specified.";
                    Error();
                }
            }
            // 0x10004b16
            g4 = v3;
            *(int32_t *)(g8 - 4) = v3;
            int32_t v10 = function_10002100((int32_t)&g169); // 0x10004b1d
            int32_t v11; // 0x10004b50
            if (v10 == 0) {
                // 0x10004b29
                int32_t v12; // bp-20
                int32_t v13 = &v12; // 0x10004b29
                g4 = v13;
                int32_t v14 = function_100010b0(); // 0x10004b2c
                int32_t v15; // bp-559
                g4 = &v15;
                *(int32_t *)(g8 - 4) = v13;
                int32_t v16 = (int32_t)*(char *)(g7 + 364) | v14 & -256; // 0x10004b4a
                v12 = v16;
                v11 = function_10002260(v16, &v15, g119);
                if (v11 == 0) {
                    // 0x10004b64
                    g4 = g119;
                    *(int32_t *)g8 = 1;
                    *(int32_t *)(g8 - 4) = (int32_t)"PLATFORM";
                    *(int32_t *)(g8 - 8) = (int32_t)"platform";
                    int32_t v17 = CommandLine(); // 0x10004b7a
                    int32_t v18 = *(int32_t *)&g42; // 0x10004b7c
                    g4 = v18;
                    g5 = v18;
                    *(int32_t *)(g8 - 4) = (int32_t)"hl2";
                    g4 = v17;
                    *(int32_t *)(g8 - 8) = (int32_t)"-game";
                    *(int32_t *)(g8 - 12) = *(int32_t *)(*(int32_t *)v17 + 32);
                    *(int32_t *)(g8 - 16) = (int32_t)&g76;
                    g4 = &g81;
                    function_100046d0();
                    if (*(char *)(g7 + 364) != 0) {
                        // 0x10004bc7
                        g4 = g120;
                    }
                    int32_t v19 = function_100090b0(); // 0x10004bd7
                    g4 = g7;
                    int32_t v20 = v19; // bp-44
                    int32_t v21 = function_10002850(v19, (int32_t *)&g76); // 0x10004be8
                    g4 = g7;
                    function_10002880(v21);
                    g4 = g74;
                    int32_t result = &v20; // 0x10004c10
                    *(int32_t *)(g8 - 4) = result;
                    return result;
                }
            } else {
                v11 = v10;
            }
            // 0x10004b5c
            return v11 & -256;
        }
    }
    // 0x10004c1c
    return v6 & -256;
}

// Address range: 0x10004c30 - 0x10004c5b
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10004c30(void) {
    // 0x10004c30
    g4 = &g81;
    function_10004910();
    int32_t v1 = *(int32_t *)&g42; // 0x10004c3a
    g4 = v1;
    g1 = v1;
    g1 = __heap_term();
    g1 = function_1000f9c0();
    g1 = function_1000d290();
    return function_1000de60();
}

// Address range: 0x10004c60 - 0x10004c63
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10004c60(void) {
    // 0x10004c60
    int32_t v1; // eax
    return v1 & -256 | 1;
}

// Address range: 0x10004c80 - 0x10005560
int32_t LauncherMain(int32_t a1) {
    int32_t v1; // ebp
    g2 = &v1;
    function_100090c0(a1);
    LoggingSystem_RegisterLoggingListener(&g41);
    if ((char)Plat_VerifyHardwareKeyPrompt() == 0) {
        // 0x10004caa
        return -1;
    }
    int32_t commandLine = (int32_t)GetCommandLineA(); // 0x10004cb3
    g4 = CommandLine();
    function_100023e0(commandLine);
    g4 = CommandLine();
    g4 = CommandLine();
    g4 = CommandLine();
    int32_t v2 = function_10002380("-vxconsole", 0); // 0x10004d08
    g1 = v2;
    g5 = v2;
    if (*(char *)v2 != 0) {
        // 0x10004d14
        if (function_10009470(v2, (int32_t)"hl2") != 0) {
            int32_t v3 = CommandLine(); // 0x10004d26
            g4 = v3;
            if (*(int32_t *)(*(int32_t *)v3 + 40) == 0) {
                // branch -> 0x10004d5b
            }
        }
    }
    int32_t v4 = 0; // bp-16
    int32_t v5 = CommandLine(); // 0x10004d62
    *(int32_t *)(g8 - 4) = (int32_t)&v4;
    *(int32_t *)(g8 - 8) = (int32_t)"-game";
    g4 = v5;
    int32_t v6 = v4; // 0x10004d76
    g1 = v6;
    if (v6 != 0) {
        // 0x10004d7d
        *(int32_t *)(g8 - 12) = (int32_t)"portal2";
        *(int32_t *)(g8 - 16) = v6;
        if (function_10009470((int32_t)&g169, (int32_t)&g169) == 0) {
            int32_t v7 = CommandLine(); // 0x10004d8f
            *(int32_t *)(g8 - 4) = 0;
            g4 = v7;
            *(int32_t *)(g8 - 8) = (int32_t)"-nosixense";
            if (*(int32_t *)(*(int32_t *)v7 + 12) == 0) {
                // 0x10004da5
                *(int32_t *)(g8 - 12) = (int32_t)"portal2_sixense/gameinfo.txt";
                *(int32_t *)(g8 - 16) = (int32_t)&g13;
                if ((char)function_10001100((int32_t)&g169, (int32_t)&g169) != 0) {
                    // 0x10004dbb
                    g4 = CommandLine();
                    *(int32_t *)(g8 - 4) = (int32_t)"-game";
                    int32_t v8 = CommandLine(); // 0x10004dcb
                    *(int32_t *)(g8 - 4) = (int32_t)"portal2_sixense";
                    g4 = v8;
                    *(int32_t *)(g8 - 8) = (int32_t)"-game";
                }
            }
        }
    }
    int32_t v9 = CommandLine(); // 0x10004de0
    *(int32_t *)(g8 - 4) = 0;
    g4 = v9;
    int32_t v10 = g8 - 8; // 0x10004deb
    *(int32_t *)v10 = (int32_t)"-tslist";
    int32_t v11; // 0x10004e34
    if (*(int32_t *)(*(int32_t *)v9 + 12) != 0) {
        // 0x10004df6
        g5 = *(int32_t *)0x100221c8;
        *(int32_t *)(g8 - 12) = (int32_t)"Running TSList tests\n";
        _3f_DevMsg_40__40_YAXPBDZZ();
        *(int32_t *)(g8 - 4) = 1;
        *(int32_t *)(g8 - 8) = 0x2710;
        RunTSListTests();
        *(int32_t *)(g8 - 4) = (int32_t)"Running TSQueue tests\n";
        _3f_DevMsg_40__40_YAXPBDZZ();
        *(int32_t *)(g8 - 4) = 1;
        *(int32_t *)(g8 - 8) = 0x2710;
        RunTSQueueTests();
        *(int32_t *)(g8 - 4) = (int32_t)"Running Thread Pool tests\n";
        _3f_DevMsg_40__40_YAXPBDZZ();
        RunThreadPoolTests();
        v11 = g8;
    } else {
        v11 = v10;
    }
    // 0x10004e34
    *(int32_t *)(v11 - 4) = (int32_t)"GameOverlayRenderer.dll";
    int32_t v12; // bp-404
    if (GetModuleHandleA((char *)&g169) == NULL) {
        int32_t v13 = SteamAPI_GetSteamInstallPath(); // 0x10004e43
        if (v13 != 0) {
            // 0x10004e4d
            *(int32_t *)(g8 - 4) = 260;
            int32_t v14 = &v12; // 0x10004e52
            g4 = v14;
            *(int32_t *)(g8 - 8) = v14;
            *(int32_t *)(g8 - 12) = (int32_t)"GameOverlayRenderer.dll";
            *(int32_t *)(g8 - 16) = v13;
            function_10009d40((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
            *(int32_t *)(g8 + 12) = v14;
            LoadLibraryA((char *)&g169);
        }
    }
    // 0x10004e74
    function_10002920();
    int32_t v15; // bp-544
    *(int32_t *)(g8 - 4) = (int32_t)&v15;
    *(int32_t *)(g8 - 8) = 2;
    int32_t v16 = WSAStartup((int16_t)&g169, (struct WSAData *)&g169); // 0x10004e82
    int32_t v17; // 0x10004e9a
    if (v16 != 0) {
        // 0x10004e8b
        *(int32_t *)(g8 - 4) = v16;
        *(int32_t *)(g8 - 8) = (int32_t)"Warning! Failed to start Winsock via WSAStartup = 0x%x.\n";
        Msg();
        v17 = g8 + 8;
    } else {
        v17 = g8;
    }
    // 0x10004e9a
    *(int32_t *)(v17 - 4) = g3;
    int32_t v18 = CommandLine(); // 0x10004e9b
    *(int32_t *)(g8 - 4) = 0;
    g4 = v18;
    *(int32_t *)(g8 - 8) = (int32_t)"-textmode";
    if (*(int32_t *)(*(int32_t *)v18 + 12) == 0) {
        // 0x10004ede
        g3 = -1;
        if ((char)function_100028b0() == 0) {
            int32_t v19 = CommandLine(); // 0x10004eea
            *(int32_t *)(g8 - 4) = 0;
            g4 = v19;
            *(int32_t *)(g8 - 8) = (int32_t)"-hijack";
            int32_t * v20 = (int32_t *)(g8 - 12); // 0x10004fa6
            if (*(int32_t *)(*(int32_t *)v19 + 12) == 0) {
                // 0x10004fa6
                *v20 = 64;
                *(int32_t *)(g8 - 16) = (int32_t)"Source - Warning";
                *(int32_t *)(g8 - 20) = (int32_t)"Only one instance of the game can be running at one time.";
                *(int32_t *)(g8 - 24) = 0;
                MessageBoxA(&g169, (char *)&g169, (char *)&g169, (int32_t)&g169);
                return g3;
            }
            // 0x10004f04
            *v20 = 0;
            *(int32_t *)(g8 - 16) = (int32_t)"Valve001";
            int32_t * v21 = FindWindowA((char *)&g169, (char *)&g169); // 0x10004f0b
            int32_t v22 = (int32_t)v21; // 0x10004f0b
            g1 = v22;
            g5 = v22;
            if (v21 == NULL) {
                // 0x10004f17
                *(int32_t *)(g8 - 4) = 48;
                *(int32_t *)(g8 - 8) = (int32_t)"Source Engine Not Running";
                *(int32_t *)(g8 - 12) = (int32_t)"The modified entity keyvalues could not be sent to the Source Engine because the engine does not appear to be running.";
                *(int32_t *)(g8 - 16) = g1;
                MessageBoxA(&g169, (char *)&g169, (char *)&g169, (int32_t)&g169);
                return g3;
            }
            int32_t wParam = function_100040c0(); // 0x10004f33
            int32_t v23 = wParam; // 0x10004f42
            unsigned char v24 = *(char *)v23; // 0x10004f40
            int32_t v25 = (int32_t)v24 | g4 & -256; // 0x10004f40
            g4 = v25;
            int32_t v26 = v23 + 1; // 0x10004f42
            while (v24 != 0) {
                // 0x10004f40
                v23 = v26;
                v24 = *(char *)v23;
                v25 = (int32_t)v24 | v25 & -256;
                g4 = v25;
                v26 = v23 + 1;
            }
            // 0x10004f47
            int32_t v27; // bp-144
            int32_t v28 = &v27; // 0x10004f47
            g4 = v28;
            *(int32_t *)(g8 - 4) = v28;
            *(int32_t *)(g8 - 8) = 0;
            *(int32_t *)(g8 - 12) = 74;
            *(int32_t *)(g8 - 16) = v22;
            v27 = 0;
            int32_t v29 = SendMessageA(NULL, v26 - (wParam + 1) + 1, wParam, (int32_t)&g169); // 0x10004f6c
            if (v29 != 0) {
                // 0x10004f8b
                g3 = 0;
            } else {
                // 0x10004f76
                *(int32_t *)(g8 - 4) = 48;
                *(int32_t *)(g8 - 8) = (int32_t)"Source Engine Declined Request";
                *(int32_t *)(g8 - 12) = (int32_t)"The Source Engine was found running, but did not accept the request to load a savegame. It may be an old version of the engine that does not support this functionality.";
                *(int32_t *)(g8 - 16) = v29;
                MessageBoxA(&g169, (char *)&g169, (char *)&g169, (int32_t)&g169);
            }
            // 0x10004f8d
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = wParam;
            return g3;
        }
    } else {
        // 0x10004eb1
        g78 = 1;
        function_100024c0();
    }
    int32_t v30 = CommandLine(); // 0x10004ebd
    *(int32_t *)(g8 - 4) = 0;
    g4 = v30;
    *(int32_t *)(g8 - 8) = (int32_t)"-low";
    if (*(int32_t *)(*(int32_t *)v30 + 12) == 0) {
        int32_t v31 = CommandLine(); // 0x10004fc3
        *(int32_t *)(g8 - 4) = 0;
        g4 = v31;
        *(int32_t *)(g8 - 8) = (int32_t)"-high";
        if (*(int32_t *)(*(int32_t *)v31 + 12) == 0) {
            goto lab_0x10004feb;
        } else {
            // 0x10004fd9
            *(int32_t *)(g8 - 12) = 128;
            goto lab_0x10004fde;
        }
    } else {
        // 0x10004ed7
        *(int32_t *)(g8 - 12) = 64;
        goto lab_0x10004fde;
    }
  lab_0x100050ce:;
    int32_t v32 = *(int32_t *)&g42; // 0x100050ce
    g4 = v32;
    int32_t * v33 = (int32_t *)(v32 & 255); // 0x100050db
    int32_t * v34;
    int32_t * v35;
    if ((char)v32 != 0) {
        v35 = v33;
        goto lab_0x100051a6;
    } else {
        v34 = v33;
        goto lab_0x100050e6;
    }
  lab_0x100050e6:
    // 0x100050e6
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-w";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-h";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-width";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-height";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-sw";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-startwindowed";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-windowed";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-window";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-full";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-fullscreen";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-autoconfig";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"+mat_hdr_level";
    v35 = v34;
    goto lab_0x100051a6;
  lab_0x100051a6:;
    // 0x100051a6
    int32_t v36; // 0x100051a6
    g4 = v36;
    function_10004370();
    g4 = v36;
    function_10003ce0();
    g4 = 0xffff;
    int32_t v37 = g3; // 0x100051c2
    int32_t v38;
    uint32_t v39;
    int32_t v40; // 0x100051ff
    int32_t v41; // 0x100051f1
    if (v39 >= v37) {
        if (v38 != v37) {
            // 0x100051cb
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = v38;
            v41 = g3;
            v40 = 0;
        } else {
            v41 = v37;
            v40 = v38;
        }
    } else {
        v41 = v37;
        v40 = v38;
    }
    // 0x100051e3
    g4 = 0xffff;
    int32_t v42; // 0x10005216
    if (v39 >= v41) {
        if (v40 != v41) {
            // 0x100051f5
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = v40;
            int32_t v43 = g3; // 0x10005205
            v42 = v43;
            v38 = v43;
        } else {
            v42 = v41;
            v38 = v40;
        }
    } else {
        v42 = v41;
        v38 = v40;
    }
    // 0x1000520b
    int32_t v44;
    uint32_t v45;
    int32_t v46; // 0x10005248
    int32_t v47; // 0x1000523a
    if (v45 >= v42) {
        if (v44 != v42) {
            int32_t v48 = *(int32_t *)0x100221e8; // 0x1000521a
            g4 = v48;
            g4 = *(int32_t *)v48;
            *(int32_t *)(g8 - 4) = v44;
            v47 = g3;
            v46 = 0;
        } else {
            v47 = v42;
            v46 = v44;
        }
    } else {
        v47 = v42;
        v46 = v44;
    }
    int32_t v49; // 0x1000525f
    if (v45 >= v47) {
        if (v46 != v47) {
            int32_t v50 = *(int32_t *)0x100221e8; // 0x1000523e
            g4 = v50;
            g4 = *(int32_t *)v50;
            *(int32_t *)(g8 - 4) = v46;
            int32_t v51 = g3; // 0x1000524e
            v49 = v51;
            v44 = v51;
        } else {
            v49 = v47;
            v44 = v46;
        }
    } else {
        v49 = v47;
        v44 = v46;
    }
    // 0x10005254
    int32_t v52;
    uint32_t v53;
    int32_t v54; // 0x10005291
    int32_t v55; // 0x10005283
    if (v53 >= v49) {
        if (v52 != v49) {
            int32_t v56 = *(int32_t *)0x100221e8; // 0x10005263
            g4 = v56;
            g4 = *(int32_t *)v56;
            *(int32_t *)(g8 - 4) = v52;
            v55 = g3;
            v54 = 0;
        } else {
            v55 = v49;
            v54 = v52;
        }
    } else {
        v55 = v49;
        v54 = v52;
    }
    int32_t v57; // 0x100052a8
    if (v53 >= v55) {
        if (v54 != v55) {
            int32_t v58 = *(int32_t *)0x100221e8; // 0x10005287
            g4 = v58;
            g4 = *(int32_t *)v58;
            *(int32_t *)(g8 - 4) = v54;
            int32_t v59 = g3; // 0x10005297
            v57 = v59;
            v52 = v59;
        } else {
            v57 = v55;
            v52 = v54;
        }
    } else {
        v57 = v55;
        v52 = v54;
    }
    // 0x1000529d
    int32_t v60;
    uint32_t v61;
    int32_t v62; // 0x100052da
    int32_t v63; // 0x100052cc
    if (v61 >= v57) {
        if (v60 != v57) {
            int32_t v64 = *(int32_t *)0x100221e8; // 0x100052ac
            g4 = v64;
            g4 = *(int32_t *)v64;
            *(int32_t *)(g8 - 4) = v60;
            v63 = g3;
            v62 = 0;
        } else {
            v63 = v57;
            v62 = v60;
        }
    } else {
        v63 = v57;
        v62 = v60;
    }
    if (v61 >= v63) {
        if (v62 != v63) {
            int32_t v65 = *(int32_t *)0x100221e8; // 0x100052d0
            g4 = v65;
            g4 = *(int32_t *)v65;
            *(int32_t *)(g8 - 4) = v62;
            v60 = g3;
        } else {
            v60 = v62;
        }
    } else {
        v60 = v62;
    }
    // 0x100052e6
    int32_t v66; // 0x100052e6
    g4 = v66;
    function_10004370();
    g4 = v66;
    function_10003ce0();
    g4 = 0xffff;
    int32_t v67 = g3; // 0x1000530e
    int32_t v68;
    uint32_t v69;
    int32_t v70; // 0x1000535a
    int32_t v71; // 0x1000534c
    if (v69 >= v67) {
        if (v68 != v67) {
            // 0x1000531a
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = v68;
            v71 = g3;
            v70 = 0;
        } else {
            v71 = v67;
            v70 = v68;
        }
    } else {
        v71 = v67;
        v70 = v68;
    }
    // 0x10005338
    g4 = 0xffff;
    int32_t v72; // 0x10005380
    if (v69 >= v71) {
        if (v70 != v71) {
            // 0x10005350
            g4 = *(int32_t *)*(int32_t *)0x100221e8;
            *(int32_t *)(g8 - 4) = v70;
            int32_t v73 = g3; // 0x10005360
            v72 = v73;
            v68 = v73;
        } else {
            v72 = v71;
            v68 = v70;
        }
    } else {
        v72 = v71;
        v68 = v70;
    }
    // 0x1000536c
    int32_t v74;
    uint32_t v75;
    int32_t v76; // 0x100053be
    int32_t v77; // 0x100053b0
    if (v75 >= v72) {
        if (v74 != v72) {
            int32_t v78 = *(int32_t *)0x100221e8; // 0x10005384
            g4 = v78;
            g4 = *(int32_t *)v78;
            *(int32_t *)(g8 - 4) = v74;
            v77 = g3;
            v76 = 0;
        } else {
            v77 = v72;
            v76 = v74;
        }
    } else {
        v77 = v72;
        v76 = v74;
    }
    int32_t v79; // 0x100053e4
    if (v75 >= v77) {
        if (v76 != v77) {
            int32_t v80 = *(int32_t *)0x100221e8; // 0x100053b4
            g4 = v80;
            g4 = *(int32_t *)v80;
            *(int32_t *)(g8 - 4) = v76;
            int32_t v81 = g3; // 0x100053c4
            v79 = v81;
            v74 = v81;
        } else {
            v79 = v77;
            v74 = v76;
        }
    } else {
        v79 = v77;
        v74 = v76;
    }
    // 0x100053d0
    int32_t v82;
    uint32_t v83;
    int32_t v84; // 0x10005422
    int32_t v85; // 0x10005414
    if (v83 >= v79) {
        if (v82 != v79) {
            int32_t v86 = *(int32_t *)0x100221e8; // 0x100053e8
            g4 = v86;
            g4 = *(int32_t *)v86;
            *(int32_t *)(g8 - 4) = v82;
            v85 = g3;
            v84 = 0;
        } else {
            v85 = v79;
            v84 = v82;
        }
    } else {
        v85 = v79;
        v84 = v82;
    }
    int32_t v87; // 0x10005448
    if (v83 >= v85) {
        if (v84 != v85) {
            int32_t v88 = *(int32_t *)0x100221e8; // 0x10005418
            g4 = v88;
            g4 = *(int32_t *)v88;
            *(int32_t *)(g8 - 4) = v84;
            int32_t v89 = g3; // 0x10005428
            v87 = v89;
            v82 = v89;
        } else {
            v87 = v85;
            v82 = v84;
        }
    } else {
        v87 = v85;
        v82 = v84;
    }
    // 0x10005434
    uint32_t v90;
    int32_t v91; // 0x10005486
    int32_t v92; // 0x10005478
    if (v90 >= v87) {
        if (v91 != v87) {
            int32_t v93 = *(int32_t *)0x100221e8; // 0x1000544c
            g4 = v93;
            g4 = *(int32_t *)v93;
            *(int32_t *)(g8 - 4) = v91;
            v92 = g3;
            v91 = 0;
        } else {
            v92 = v87;
        }
    } else {
        v92 = v87;
    }
    int32_t v94; // 0x1000548c
    if (v90 >= v92) {
        if (v91 != v92) {
            int32_t v95 = *(int32_t *)0x100221e8; // 0x1000547c
            g4 = v95;
            g4 = *(int32_t *)v95;
            *(int32_t *)(g8 - 4) = v91;
            v94 = g3;
        } else {
            v94 = v92;
        }
    } else {
        v94 = v92;
    }
    if ((char)(int32_t)v35 == (char)v94) {
        // break -> 0x10005495
        goto lab_0x10005495;
    }
    int32_t v96 = v94; // 0x10005080
    goto lab_0x10005080;
  lab_0x10004feb:;
    int32_t v103 = CommandLine(); // 0x10004feb
    *(int32_t *)(g8 - 4) = 0;
    g4 = v103;
    int32_t v104 = g8 - 8; // 0x10004ff6
    *(int32_t *)v104 = (int32_t)"-steam";
    int32_t v105; // 0x1000500c
    if (*(int32_t *)(*(int32_t *)v103 + 12) == 0) {
        int32_t v106 = CommandLine(); // 0x10005001
        *(int32_t *)(g8 - 4) = 0;
        g4 = v106;
        v105 = g8 - 8;
        *(int32_t *)v105 = (int32_t)"-insecure";
    } else {
        v105 = v104;
    }
    // 0x10005013
    *(int32_t *)(v105 - 4) = (int32_t)&g76;
    __chdir((char *)&g169);
    int32_t v107 = CommandLine(); // 0x10005020
    *(int32_t *)(g8 - 4) = 0;
    g4 = v107;
    *(int32_t *)(g8 - 8) = (int32_t)"-buildcubemaps";
    if (*(int32_t *)(*(int32_t *)v107 + 12) != 0) {
        int32_t v108 = CommandLine(); // 0x10005036
        *(int32_t *)(g8 - 4) = 0;
        g4 = v108;
        *(int32_t *)(g8 - 8) = (int32_t)"-nosound";
        int32_t v109 = CommandLine(); // 0x10005048
        *(int32_t *)(g8 - 4) = 0;
        g4 = v109;
        *(int32_t *)(g8 - 8) = (int32_t)"-noasync";
    }
    int32_t v110 = CommandLine(); // 0x1000505a
    *(int32_t *)(g8 - 4) = 0;
    g4 = v110;
    int32_t v111 = *(int32_t *)(*(int32_t *)v110 + 12); // 0x10005062
    int32_t v112 = g8 - 8; // 0x10005065
    *(int32_t *)v112 = (int32_t)"-leakcheck";
    g4 = g4 & -256 | (int32_t)(v111 != 0);
    g83 = v111 != 0;
    g3 = 0;
    int32_t v99; // bp-512
    int32_t v97 = &v99; // 0x10005082
    int32_t v113; // bp-132
    int32_t v98 = &v113; // 0x10005094
    int32_t v114; // bp-68
    v36 = &v114;
    int32_t v115; // bp-448
    v66 = &v115;
    g8 = v112;
    v96 = 0;
    int32_t v116;
    v38 = v116;
    int32_t v117;
    v44 = v117;
    int32_t v118;
    v52 = v118;
    int32_t v119;
    v60 = v119;
    int32_t v120;
    v68 = v120;
    int32_t v121;
    v74 = v121;
    int32_t v122;
    v82 = v122;
    int32_t v123;
    v91 = v123;
    while (true) {
      lab_0x10005080:
        // 0x10005080
        *(int32_t *)(g8 - 4) = v96;
        *(int32_t *)(g8 - 8) = g3;
        g4 = v97;
        function_10008b60((int32_t)&g169);
        *(int32_t *)(g8 - 4) = v97;
        g4 = v98;
        v99 = (int32_t)&g18;
        function_10009280((int32_t *)&g18);
        g4 = v98;
        int32_t v100 = function_10009010(); // 0x100050a9
        g4 = v98;
        g5 = v100;
        int32_t v101 = g5; // 0x1000554e
        if (function_10007150() != 4) {
            if (v101 != 4) {
                goto lab_0x100050ce;
            } else {
                v34 = (int32_t *)1;
                goto lab_0x100050e6;
            }
        } else {
            int32_t v102 = v101 == 2; // 0x100050c4
            if (v101 == 2) {
                v34 = (int32_t *)v102;
                goto lab_0x100050e6;
            } else {
                goto lab_0x100050ce;
            }
        }
    }
  lab_0x10005495:;
    int32_t v124 = WSACleanup(); // 0x10005495
    int32_t v125 = g3; // 0x1000549a
    int32_t v126; // 0x100054b2
    if (v124 != v125) {
        // 0x1000549e
        *(int32_t *)(g8 - 4) = v124;
        *(int32_t *)(g8 - 8) = (int32_t)"Warning! Failed to complete WSACleanup = 0x%x.\n";
        Msg();
        v126 = g3;
    } else {
        v126 = v125;
    }
    int32_t v127 = g80; // 0x100054ad
    if (v127 != v126) {
        // 0x100054b6
        *(int32_t *)(g8 - 4) = v127;
        ReleaseMutex(&g169);
        int32_t v128 = g80; // 0x100054bd
        g4 = v128;
        *(int32_t *)(g8 - 4) = v128;
        CloseHandle(&g169);
        g80 = g3;
    }
    // 0x100054d0
    int32_t v129; // bp-12
    *(int32_t *)(g8 - 4) = (int32_t)&v129;
    *(int32_t *)(g8 - 8) = 0xf003f;
    *(int32_t *)(g8 - 12) = g3;
    *(int32_t *)(g8 - 16) = (int32_t)"Software\\Valve\\Source";
    *(int32_t *)(g8 - 20) = -0x7fffffff;
    int32_t v130 = RegOpenKeyExA(&g169, (char *)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t **)&g169); // 0x100054e4
    if (v130 == 0) {
        // 0x100054ee
        int32_t v131; // bp-20
        *(int32_t *)(g8 - 4) = (int32_t)&v131;
        int32_t v132 = &v12; // 0x100054f5
        g4 = v132;
        *(int32_t *)(g8 - 8) = v132;
        *(int32_t *)(g8 - 12) = g3;
        *(int32_t *)(g8 - 16) = g3;
        *(int32_t *)(g8 - 20) = (int32_t)"Relaunch URL";
        *(int32_t *)(g8 - 24) = v129;
        v131 = 260;
        int32_t v133 = RegQueryValueExA((int32_t *)260, (char *)&g169, &g169, &g169, (char *)&g169, &g169); // 0x1000550b
        if (v133 == 0) {
            // 0x10005515
            *(int32_t *)(g8 - 4) = 5;
            *(int32_t *)(g8 - 8) = g3;
            *(int32_t *)(g8 - 12) = g3;
            *(int32_t *)(g8 - 16) = v132;
            *(int32_t *)(g8 - 20) = (int32_t)"open";
            *(int32_t *)(g8 - 24) = g3;
            ShellExecuteA(&g169, (char *)&g169, (char *)&g169, (char *)&g169, (char *)&g169, (int32_t)&g169);
            g4 = v129;
            *(int32_t *)(g8 - 4) = (int32_t)"Relaunch URL";
            *(int32_t *)(g8 - 8) = g4;
            RegDeleteValueA(&g169, (char *)&g169);
        }
        // 0x1000553b
        *(int32_t *)(g8 - 4) = v129;
        RegCloseKey(&g169);
    }
    // 0x10005545
    return 0;
  lab_0x10004fde:
    // 0x10004fde
    *(int32_t *)(g8 - 4) = (int32_t)GetCurrentProcess();
    SetPriorityClass(&g169, (int32_t)&g169);
    goto lab_0x10004feb;
}

// Address range: 0x10005560 - 0x1000557a
int32_t function_10005560(void) {
    // 0x10005560
    if ((char)Plat_IsInDebugSession() != 0) {
        // 0x1000556a
        __asm_int3();
    }
    // 0x1000556b
    function_1000943e();
    g4 = 1;
    return Plat_ExitProcess(1);
}

// Address range: 0x10005580 - 0x10005597
int32_t __malloc_crt(int32_t result) {
    int32_t v1 = *(int32_t *)*(int32_t *)0x100221e8; // 0x10005588
    g4 = v1;
    g6 = *(int32_t *)(*(int32_t *)v1 + 4);
    g2 = result;
    return result;
}

// Address range: 0x100055a0 - 0x100055cf
int32_t __calloc_crt(int32_t a1, int32_t a2) {
    int32_t v1 = *(int32_t *)*(int32_t *)0x100221e8; // 0x100055a8
    g4 = v1;
    int32_t result = *(int32_t *)(*(int32_t *)v1 + 4); // 0x100055ac
    _memset((int32_t *)result, 0, a2 * a1);
    return result;
}

// Address range: 0x100055d0 - 0x100055eb
int32_t __realloc_crt(int32_t result, int32_t a2) {
    // 0x100055d0
    g4 = *(int32_t *)*(int32_t *)0x100221e8;
    return result;
}

// Address range: 0x100055f0 - 0x10005623
int32_t __recalloc_crt(int32_t result, int32_t a2, int32_t a3) {
    // 0x100055f0
    g4 = *(int32_t *)*(int32_t *)0x100221e8;
    _memset((int32_t *)result, 0, a3 * a2);
    return result;
}

// Address range: 0x10005630 - 0x10005647
int32_t __msize(int32_t result) {
    // 0x10005630
    g4 = *(int32_t *)*(int32_t *)0x100221e8;
    return result;
}

// Address range: 0x10005650 - 0x1000565e
int32_t __heap_init(void) {
    int32_t v1 = *(int32_t *)0x100221e8; // 0x10005650
    g4 = v1;
    return *(int32_t *)v1 != 0;
}

// Address range: 0x10005660 - 0x10005677
// Demangled:     void __cdecl operator delete(void *)
int32_t _3f__3f_3_40_YAXPAX_40_Z(int32_t result) {
    int32_t v1 = *(int32_t *)*(int32_t *)0x100221e8; // 0x10005668
    g4 = v1;
    g6 = *(int32_t *)(*(int32_t *)v1 + 20);
    g2 = result;
    return result;
}

// Address range: 0x10005680 - 0x100056c3
int32_t __wcsdup2(int32_t a1) {
    unsigned char v1 = *(char *)a1; // 0x10005690
    int32_t v2 = (int32_t)v1 | g4 & -256; // 0x10005690
    g4 = v2;
    while (v1 != 0) {
        // 0x10005690
        a1++;
        v1 = *(char *)a1;
        v2 = (int32_t)v1 | v2 & -256;
        g4 = v2;
    }
    int32_t v3 = *(int32_t *)*(int32_t *)0x100221e8; // 0x100056a1
    g4 = v3;
    int32_t result = *(int32_t *)(*(int32_t *)v3 + 4); // 0x100056a5
    if (result != 0) {
        // 0x100056b1
        _memcpy2();
    }
    // 0x100056bc
    return result;
}

// Address range: 0x100056d0 - 0x1000570a
int32_t function_100056d0(int32_t a1, int32_t a2) {
    // 0x100056d0
    g4 = a2;
    int32_t v1 = function_1000d070(); // 0x100056d7
    g4 = a1;
    int32_t v2 = function_1000d070(); // 0x100056e1
    if (v2 == 0) {
        // 0x100056ea
        return v2 & -256;
    }
    if (v1 == 0) {
        // 0x100056f3
        return v2 & -256 | 1;
    }
    int32_t v3 = function_100094b0((int32_t *)v2, (char *)v1); // 0x100056fa
    return (int32_t)(v3 < 0) | v3 & -256;
}

// Address range: 0x10005710 - 0x10005725
// From class:    CResListGenerator
// Type:          virtual member function
int32_t function_10005710(void) {
    int32_t v1 = g4; // 0x10005710
    if (*(char *)(v1 + 4) == 0 || *(char *)(v1 + 5) == 0) {
        // 0x10005722
        return 0;
    }
    // 0x1000571c
    return 1;
}

// Address range: 0x10005730 - 0x10005745
// From class:    CResListGenerator
// Type:          virtual member function
int32_t function_10005730(void) {
    int32_t v1 = g4; // 0x10005730
    int32_t v2; // eax
    if (*(char *)(v1 + 5) == 0) {
        // 0x10005742
        return v2 & -256;
    }
    // 0x10005736
    if (*(int32_t *)(v1 + 180) < 3) {
        // 0x1000573f
        return v2 & -256 | 1;
    }
    // 0x10005742
    return v2 & -256;
}

// Address range: 0x10005750 - 0x100057df
int32_t function_10005750(int32_t a1) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x10005755
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x10005757
    int32_t v4; // eax
    int32_t v5; // 0x100057ad
    int32_t v6; // 0x100057d9
    int32_t * v7; // 0x1000575e
    int32_t v8; // 0x10005764
    int32_t v9; // 0x10005783
    if (v3 < 0) {
        v6 = &v1;
        goto lab_0x100057d9;
    } else {
        // 0x1000575e
        v7 = (int32_t *)(v2 + 4);
        int32_t v10 = *v7; // 0x1000575e
        v4 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v3 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x1000577a
                v4 = 2;
                v11 = 2;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x10005783
                    v9 *= 2;
                }
                goto lab_0x10005789;
            } else {
                v5 = v11;
                goto lab_0x100057ab;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x1000576a
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v3) + 1) * v3; // 0x10005771
            v9 = v13;
            goto lab_0x10005789;
        }
    }
  lab_0x100057d9:
    // 0x100057d9
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x100057ab:
    // 0x100057ab
    *v7 = v5;
    int32_t v14 = *(int32_t *)0x100221e8; // 0x100057b0
    g4 = v14;
    int32_t v15 = *(int32_t *)v14; // 0x100057b6
    g4 = v15;
    int32_t result = 16 * v4; // 0x100057b8
    if (v8 != 0) {
        // 0x100057c0
        *(int32_t *)v2 = result;
        g5 = v8;
        g7 = result;
        g2 = v1;
        return result;
    }
    int32_t v16 = *(int32_t *)(*(int32_t *)v15 + 4); // 0x100057d2
    g1 = v16;
    *(int32_t *)v2 = v16;
    v6 = g8;
    goto lab_0x100057d9;
  lab_0x10005789:
    // 0x10005789
    v4 = v9;
    int32_t v17; // 0x100057a51
    if (v9 < v8) {
        if (v9 != 0) {
            v17 = v9;
            goto lab_0x100057a0;
        } else {
            if (v8 > -1) {
                v17 = v9;
                goto lab_0x100057a0;
            } else {
                // 0x10005796
                v4 = -1;
                v5 = -1;
                goto lab_0x100057ab;
            }
        }
    } else {
        v5 = v9;
        goto lab_0x100057ab;
    }
  lab_0x100057a0:;
    int32_t v18; // 0x100057a5
    while (true) {
        int32_t v19 = v17 + v8; // 0x100057a0
        v18 = (v19 - (v19 >> 31)) / 2;
        if (v18 >= v8) {
            // break -> 0x100057ab
            break;
        }
        v17 = v18;
    }
    // 0x100057ab
    v4 = v18;
    v5 = v18;
    goto lab_0x100057ab;
}

// Address range: 0x100057e0 - 0x10005831
int32_t function_100057e0(int32_t a1) {
    int32_t v1 = g4; // 0x100057e2
    int32_t v2 = 0; // edi
    *(int32_t *)(v1 + 28) = 0;
    if (*(int32_t *)(v1 + 24) >= v2) {
        int32_t * v3 = (int32_t *)(v1 + 16); // 0x100057ee
        int32_t v4 = *v3; // 0x100057ee
        g1 = v4;
        if (v4 != v2) {
            int32_t v5 = *(int32_t *)0x100221e8; // 0x100057f5
            g4 = v5;
            int32_t v6 = *(int32_t *)v5; // 0x100057fb
            g4 = v6;
            int32_t v7 = *(int32_t *)v6; // 0x100057fd
            g6 = v7;
            g1 = *(int32_t *)(v7 + 20);
            *v3 = v2;
        }
        // 0x10005808
        *(int32_t *)(v1 + 20) = v2;
    }
    // 0x1000580b
    *(int32_t *)(v1 + 12) = v2;
    if (*(int32_t *)(v1 + 8) >= v2) {
        int32_t v8 = g4; // 0x10005813
        g1 = v8;
        if (v8 != v2) {
            int32_t v9 = *(int32_t *)0x100221e8; // 0x10005819
            g4 = v9;
            int32_t v10 = *(int32_t *)v9; // 0x1000581f
            g4 = v10;
            g6 = *(int32_t *)v10;
            *(int32_t *)(g8 - 4) = v8;
            g1 = *(int32_t *)(g6 + 20);
            *(int32_t *)v1 = v2;
        }
        // 0x1000582b
        *(int32_t *)(v1 + 4) = v2;
    }
    // 0x1000582e
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    return g1;
}

// Address range: 0x10005840 - 0x100058d0
int32_t function_10005840(int32_t a1, int32_t a2, int32_t a3, char * a4, int32_t a5, int32_t a6) {
    int32_t v1 = g4; // 0x10005849
    g4 = 1;
    int32_t * v2 = (int32_t *)(v1 + 4); // 0x100058bc
    int32_t result = *(int32_t *)(v1 + 16); // 0x100058cf
    int32_t v3 = g94; // 0x1000585a
    while (true) {
        int32_t v4; // 0x1000585a
        if ((v3 & 1) == 0) {
            // 0x1000585a
            v4 = v3 | 1;
            g94 = v4;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        } else {
            v4 = v3;
        }
        int32_t v5;
        if (result != -1) {
            // 0x1000587e
            v5 = *v2 + 32 * result;
        } else {
            v5 = &g90;
        }
        // 0x1000588d
        if (*(int32_t *)v5 == -1) {
            // break -> 0x100058cc
            break;
        }
        int32_t v6; // 0x10005895
        if ((v4 & 1) == 0) {
            // 0x10005895
            v6 = v4 | 1;
            g94 = v6;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        } else {
            v6 = v4;
        }
        int32_t * v7;
        if (result == -1) {
            v7 = &g90;
        } else {
            // 0x100058b9
            v7 = (int32_t *)(*v2 + 32 * result);
        }
        // 0x10005856
        result = *v7;
        v3 = v6;
    }
    // 0x100058cc
    return result;
}

// Address range: 0x100058d0 - 0x10005a75
int32_t function_100058d0(int32_t a1) {
    int32_t v1 = g94; // 0x100058d3
    int32_t v2 = g5; // bp-16
    g5 = -1;
    int32_t v3 = g4; // 0x100058df
    int32_t v4; // 0x100058e9
    if ((v1 & 1) == 0) {
        // 0x100058e9
        v4 = v1 | 1;
        g94 = v4;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v4 = v1;
    }
    // 0x10005909
    int32_t v5;
    if (a1 != -1) {
        int32_t v6 = 32 * a1; // 0x10005912
        g4 = v6;
        v5 = *(int32_t *)(v3 + 4) + v6;
    } else {
        v5 = &g90;
    }
    // 0x1000591f
    g4 = v5;
    int32_t v7; // 0x10005a6e
    if (*(int32_t *)(v5 + 4) == -1) {
        if ((v4 & 1) == 0) {
            // 0x100059e2
            g94 = v4 | 1;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        }
        int32_t v8;
        if (a1 != -1) {
            int32_t v9 = 32 * a1; // 0x10005a08
            g4 = v9;
            v8 = *(int32_t *)(v3 + 4) + v9;
        } else {
            v8 = &g90;
        }
        // 0x10005a15
        g4 = v8;
        g7 = *(int32_t *)(v8 + 8);
        g4 = v3;
        if ((char)function_100030b0(a1) != 0) {
            while (true) {
                int32_t v10 = g7; // 0x10005a24
                g4 = v10;
                int32_t v11 = g5; // 0x10005a26
                if (v10 == v11) {
                    // break -> 0x10005a6c
                    break;
                }
                char v12 = g94; // 0x10005a2a
                if ((v12 & 1) == 0) {
                    // 0x10005a33
                    g94 = v12 | 1;
                    g90 = v11;
                    g91 = v11;
                    g92 = v11;
                    g93 = 1;
                }
                // 0x10005a55
                *(int32_t *)(g8 - 4) = v10;
                g7 = *(int32_t *)(*(int32_t *)(v3 + 4) + 32 * v10 + 8);
                g4 = v3;
                if ((char)function_100030b0((int32_t)&g169) == 0) {
                    // break -> 0x10005a6c
                    break;
                }
            }
        }
        // 0x10005a6c
        v7 = g8;
        // 0x10005a6e
        g3 = *(int32_t *)(v7 + 8);
        g2 = *(int32_t *)(v7 + 12);
        return g7;
    }
    int32_t v13; // 0x1000592d
    if ((v4 & 1) == 0) {
        // 0x1000592d
        v13 = v4 | 1;
        g94 = v13;
        g90 = -1;
        g91 = -1;
        g92 = -1;
        g93 = 1;
    } else {
        v13 = v4;
    }
    int32_t v14;
    int32_t * v15;
    if (a1 == -1) {
        // 0x1000594d
        v15 = (int32_t *)(v3 + 4);
        v14 = &g90;
    } else {
        int32_t * v16 = (int32_t *)(v3 + 4); // 0x10005954
        v15 = v16;
        v14 = *v16 + 32 * a1;
    }
    int32_t v17 = v13; // 0x10005966
    int32_t * v18 = (int32_t *)(v14 + 4);
    int32_t result;
    while (true) {
        // 0x10005961
        result = *v18;
        int32_t v19; // 0x10005966
        if ((v17 & 1) == 0) {
            // 0x10005966
            v19 = v17 | 1;
            g94 = v19;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        } else {
            v19 = v17;
        }
        int32_t v20;
        if (result != -1) {
            int32_t v21 = 32 * result; // 0x1000598c
            g4 = v21;
            v20 = *v15 + v21;
        } else {
            v20 = &g90;
        }
        // 0x10005999
        g4 = v20;
        if (*(int32_t *)v20 == -1) {
            // break -> 0x10005a6e
            break;
        }
        int32_t v22; // 0x100059a6
        if ((v19 & 1) == 0) {
            // 0x100059a6
            v22 = v19 | 1;
            g94 = v22;
            g90 = -1;
            g91 = -1;
            g92 = -1;
            g93 = 1;
        } else {
            v22 = v19;
        }
        if (result == -1) {
            // 0x100059d4
            v17 = v22;
            v18 = &g90;
        } else {
            // 0x100059ca
            v17 = v22;
            v18 = (int32_t *)(*v15 + 32 * result);
        }
    }
    v7 = &v2;
    // 0x10005a6e
    g3 = *(int32_t *)(v7 + 8);
    g2 = *(int32_t *)(v7 + 12);
    return result;
}

// Address range: 0x10005a80 - 0x10005ae6
int32_t function_10005a80(int32_t a1, int32_t a2) {
    int32_t v1 = g4; // 0x10005a84
    g7 = v1;
    int32_t v2 = *(int32_t *)(v1 + 12); // 0x10005a86
    int32_t v3 = *(int32_t *)(v1 + 4); // 0x10005a89
    g4 = v3;
    int32_t v4; // 0x10005a9f
    if (v2 + 1 > v3) {
        int32_t v5 = v2 - v3 + 1; // 0x10005a96
        g1 = v5;
        g4 = v1;
        function_10005750(v5);
        v4 = g7;
    } else {
        v4 = v1;
    }
    int32_t * v6 = (int32_t *)(v4 + 12); // 0x10005a9f
    *v6 = *v6 + 1;
    int32_t v7 = g7; // 0x10005aa2
    g5 = a1;
    uint32_t v8 = *(int32_t *)(v7 + 12) - a1 - 1; // 0x10005aac
    *(int32_t *)(v7 + 16) = g4;
    if (v8 >= 1) {
        // 0x10005ab4
        g4 += 16 * g5;
        *(int32_t *)(g8 - 4) = 16 * v8;
        *(int32_t *)(g8 - 8) = g4;
        int32_t v9 = g4 + 16; // 0x10005ac0
        g4 = v9;
        *(int32_t *)(g8 - 12) = v9;
        _memcpy(&g169, &g169, (int32_t)&g169);
    }
    int32_t v10 = g5; // 0x10005acc
    int32_t v11 = 32 * v10; // 0x10005ad1
    g4 = v11;
    int32_t result; // 0x10005ade
    if (v11 != 0) {
        // 0x10005ad5
        *(int32_t *)(g8 - 4) = a2;
        function_1000d190((int32_t)&g169);
        result = g5;
    } else {
        result = v10;
    }
    // 0x10005ade
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g2 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x10005af0 - 0x10005bd3
int32_t function_10005af0(int32_t * a1, int32_t a2, int32_t a3) {
    int32_t v1 = (int32_t)a1;
    g4 = g119;
    int32_t v2 = g119 + 4; // 0x10005aff
    int32_t v3 = *(int32_t *)(*(int32_t *)v2 + 8); // 0x10005b02
    int32_t v4 = g7; // 0x10005b05
    g4 = v2;
    g7 = v3;
    if (v3 == 0) {
        // 0x10005bcc
        return 0;
    }
    int32_t v5 = g3; // 0x10005b22
    g3 = v1;
    g4 = v1;
    int32_t v6 = function_10005840(g5, v5, a2, "wt", a3, v4); // 0x10005b29
    g5 = v6;
    int32_t v7; // 0x10005bc0
    if (v6 == -1) {
        // 0x10005b22
        v7 = g7;
    } else {
        int32_t v8 = 32 * v6; // 0x10005b3a
        g4 = (v8 | 16) + *(int32_t *)(g3 + 4);
        int32_t v9 = function_1000d070(); // 0x10005b41
        g4 = *(int32_t *)(g3 + 4) + 16 + v8;
        int32_t v10 = function_1000d070(); // 0x10005b50
        g4 = v3;
        *(int32_t *)(g8 - 4) = v3;
        *(int32_t *)(g8 - 8) = v9;
        *(int32_t *)g8 = function_10009450(v10);
        *(int32_t *)(g8 - 4) = v10;
        g4 = g119;
        *(int32_t *)(g8 - 8) = v3;
        *(int32_t *)(g8 - 12) = 1;
        *(int32_t *)(g8 - 16) = (int32_t)&g19;
        *(int32_t *)(g8 - 20) = g5;
        g4 = g3;
        int32_t v11 = function_100058d0((int32_t)&g169); // 0x10005ba2
        g5 = v11;
        while (v11 != -1) {
            // 0x10005b35
            v8 = 32 * v11;
            g4 = (v8 | 16) + *(int32_t *)(g3 + 4);
            v9 = function_1000d070();
            g4 = *(int32_t *)(g3 + 4) + 16 + v8;
            v10 = function_1000d070();
            g4 = v3;
            *(int32_t *)(g8 - 4) = v3;
            *(int32_t *)(g8 - 8) = v9;
            *(int32_t *)g8 = function_10009450(v10);
            *(int32_t *)(g8 - 4) = v10;
            g4 = g119;
            *(int32_t *)(g8 - 8) = v3;
            *(int32_t *)(g8 - 12) = 1;
            *(int32_t *)(g8 - 16) = (int32_t)&g19;
            *(int32_t *)(g8 - 20) = g5;
            g4 = g3;
            v11 = function_100058d0((int32_t)&g169);
            g5 = v11;
        }
        // 0x10005bae
        v7 = v3;
    }
    // 0x10005bb1
    g4 = g119;
    int32_t v12 = g119 + 4; // 0x10005bb7
    g4 = v12;
    *(int32_t *)(g8 - 4) = v7;
    g5 = v7;
    g3 = *(int32_t *)g8;
    return *(int32_t *)(*(int32_t *)v12 + 12) & -256 | 1;
}

// Address range: 0x10005be0 - 0x10005da1
int32_t function_10005be0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    g4 = a1;
    int32_t v2; // bp-840
    g1 = function_10009a90(&v2, 512, "%s/%s");
    int32_t v3; // bp-68
    int32_t v4 = &v3; // 0x10005c10
    g4 = v4;
    function_1000c7c0(0, 0, 1);
    g4 = g119;
    int32_t v5 = g119 + 4; // 0x10005c1e
    g4 = v5;
    char * v6;
    int32_t result; // 0x10005d9e12
    int32_t v7; // 0x10005c4c
    if ((char)*(int32_t *)(*(int32_t *)v5 + 56) == 0) {
        // 0x10005d69
        result = Error();
    } else {
        // 0x10005c47
        char v8; // bp-328
        v7 = &v8;
        g4 = v4;
        int32_t v9 = function_1000c5d0((int32_t *)&v8, 260); // 0x10005c56
        if (v8 != 0) {
            int32_t v10 = g5; // bp-896
            g5 = a2;
            g3 = v7;
            int32_t v11; // bp-20
            int32_t v12 = &v11; // 0x10005ca4
            int32_t v13 = &v10; // 0x10005c7a
            int32_t v14; // 0x10005d52
            while (true) {
                // 0x10005c74
                *(int32_t *)(v13 - 4) = v7;
                while (true) {
                  lab_0x10005c7b:;
                    int32_t v15 = function_10009450((int32_t)&g169); // 0x10005c7b
                    v6 = (char *)(v15 - 1 + g3);
                    if (v15 < 1) {
                        goto lab_0x10005c8f;
                    } else {
                        // 0x10005c88
                        if (*v6 == 10) {
                            goto lab_0x10005c96;
                        } else {
                            goto lab_0x10005c8f;
                        }
                    }
                }
              lab_0x10005ca4:
                // 0x10005ca4
                g4 = v12;
                function_1000d140();
                *(int32_t *)(g8 - 4) = v7;
                g4 = v12;
                function_1000d100((char *)&g169);
                int32_t v16 = g5; // 0x10005cbb
                int32_t v17 = *(int32_t *)(v16 + 12); // 0x10005cbb
                g7 = v17;
                int32_t v18 = *(int32_t *)(v16 + 4); // 0x10005cbe
                g1 = v18;
                int32_t v19; // 0x10005cd5
                if (v17 + 1 > v18) {
                    // 0x10005cc8
                    *(int32_t *)(g8 - 4) = v17 - v18 + 1;
                    g4 = g5;
                    function_10005750((int32_t)&g169);
                    v19 = g5;
                } else {
                    v19 = v16;
                }
                int32_t * v20 = (int32_t *)(v19 + 12); // 0x10005cd5
                *v20 = *v20 + 1;
                int32_t v21 = g5; // 0x10005cd8
                int32_t v22 = *(int32_t *)v21; // 0x10005cdb
                g4 = v22;
                uint32_t v23 = *(int32_t *)(v21 + 12) - g7 - 1; // 0x10005cdf
                *(int32_t *)(v21 + 16) = v22;
                if (v23 >= 1) {
                    // 0x10005ce7
                    g4 += 16 * g7;
                    *(int32_t *)(g8 - 4) = 16 * v23;
                    *(int32_t *)(g8 - 8) = g4;
                    int32_t v24 = g4 + 16; // 0x10005cf3
                    g4 = v24;
                    *(int32_t *)(g8 - 12) = v24;
                    _memcpy(&g169, &g169, (int32_t)&g169);
                }
                int32_t v25 = *(int32_t *)g5 + 16 * g7; // 0x10005d02
                g7 = v25;
                g4 = v25;
                if (v25 != 0) {
                    // 0x10005d08
                    *(int32_t *)(g8 - 4) = v12;
                    function_1000d190((int32_t)&g169);
                }
                int32_t v26;
                if (v26 >= 0) {
                    int32_t v27 = v11; // 0x10005d1e
                    if (v27 != 0) {
                        int32_t v28 = *(int32_t *)0x100221e8; // 0x10005d25
                        g4 = v28;
                        g4 = *(int32_t *)v28;
                        *(int32_t *)(g8 - 4) = v27;
                        v11 = 0;
                    }
                }
                // 0x10005d43
                *(int32_t *)(g8 - 4) = 260;
                *(int32_t *)(g8 - 8) = v7;
                g4 = v4;
                v14 = function_1000c5d0(NULL, (int32_t)&g169);
                if (v8 == 0) {
                    // break -> 0x10005d64
                    break;
                }
                v13 = g8;
            }
            // 0x10005d64
            g5 = *(int32_t *)g8;
            g7 = *(int32_t *)(g8 + 4);
            g3 = *(int32_t *)(g8 + 8);
            result = v14;
        } else {
            result = v9;
        }
    }
    int32_t v29;
    if (v29 < 0) {
        // 0x10005d9b
        g2 = v1;
        return result;
    }
    int32_t v30 = v3; // 0x10005d84
    int32_t result2; // 0x10005d9e
    if (v30 != 0) {
        int32_t v31 = *(int32_t *)0x100221e8; // 0x10005d8b
        g4 = v31;
        int32_t v32 = *(int32_t *)v31; // 0x10005d91
        g4 = v32;
        *(int32_t *)(g8 - 4) = v30;
        result2 = *(int32_t *)(*(int32_t *)v32 + 20);
    } else {
        result2 = 0;
    }
    // 0x10005d9b
    g2 = v1;
    return result2;
  lab_0x10005c8f:
    // 0x10005c8f
    if (*v6 != 13) {
        // break -> 0x10005ca4
        goto lab_0x10005ca4;
    }
    goto lab_0x10005c96;
  lab_0x10005c96:
    // 0x10005c96
    *v6 = 0;
    *(int32_t *)(g8 - 4) = v7;
    goto lab_0x10005c7b;
}

// Address range: 0x10005db0 - 0x10005e15
int32_t function_10005db0(void) {
    int32_t v1 = g4; // 0x10005db3
    int32_t v2 = g5; // bp-12
    int32_t * v3 = (int32_t *)(v1 + 12); // 0x10005db5
    int32_t v4 = *v3 - 1; // 0x10005db8
    int32_t v5 = v4; // edi
    if (v4 < 0) {
        // 0x10005e09
        *v3 = 0;
        g5 = v2;
        return g1;
    }
    int32_t v6 = 16 * v4; // 0x10005dc2
    int32_t v7 = v1; // 0x10005dc5
    int32_t v8; // 0x10005e01
    while (true) {
        int32_t v9 = v7 + v6; // 0x10005dc7
        *(int32_t *)(v9 + 12) = 0;
        int32_t v10 = 0; // 0x10005dce
        if (*(int32_t *)(v9 + 8) >= v10) {
            int32_t v11 = *(int32_t *)v9; // 0x10005dd3
            g1 = v11;
            int32_t v12; // 0x10005df4
            if (v11 != v10) {
                int32_t v13 = *(int32_t *)0x100221e8; // 0x10005dd9
                g4 = v13;
                int32_t v14 = *(int32_t *)v13; // 0x10005ddf
                g4 = v14;
                *(int32_t *)(g8 - 4) = v11;
                g1 = *(int32_t *)(*(int32_t *)v14 + 20);
                g4 = v1;
                *(int32_t *)v9 = 0;
                v12 = 0;
            } else {
                v12 = v10;
            }
            // 0x10005df4
            *(int32_t *)(v9 + 4) = v12;
            v8 = 0;
        } else {
            v8 = v10;
        }
        int32_t v15 = v5 - 1; // 0x10005df7
        v5 = v15;
        if (v15 < v8) {
            // break -> 0x10005dff
            break;
        }
        // 0x10005df7
        v6 -= 16;
        v7 = g4;
    }
    // 0x10005dff
    g7 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    *(int32_t *)(g4 + 12) = v8;
    g5 = *(int32_t *)g8;
    return g1;
}

// Address range: 0x10005e20 - 0x10005e96
int32_t function_10005e20(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // 0x10005e20
    int32_t v2 = g3; // 0x10005e23
    int32_t v3 = g7; // 0x10005e24
    int32_t v4 = g4; // 0x10005e25
    g7 = v4;
    int32_t v5 = *(int32_t *)(v4 + 12); // 0x10005e27
    int32_t v6 = *(int32_t *)(v4 + 4); // 0x10005e2a
    g4 = v6;
    int32_t v7 = v5 + 1; // 0x10005e2d
    g6 = v7;
    int32_t v8; // 0x10005e40
    if (v7 > v6) {
        int32_t v9 = v5 - v6 + 1; // 0x10005e37
        g1 = v9;
        g4 = v4;
        function_10002bd0(v9, g5, v3, v2, v1);
        v8 = g7;
    } else {
        v8 = v4;
    }
    int32_t * v10 = (int32_t *)(v8 + 12); // 0x10005e40
    *v10 = *v10 + 1;
    int32_t v11 = g7; // 0x10005e43
    uint32_t v12 = *(int32_t *)(v11 + 12) - a1 - 1; // 0x10005e4d
    *(int32_t *)(v11 + 16) = g4;
    if (v12 >= 1) {
        int32_t v13 = 32 * a1; // 0x10005e57
        g6 = v13;
        g4 += v13;
        *(int32_t *)(g8 - 4) = 32 * v12;
        *(int32_t *)(g8 - 8) = g4;
        int32_t v14 = g4 + 32; // 0x10005e61
        g4 = v14;
        *(int32_t *)(g8 - 12) = v14;
        _memcpy(&g169, &g169, (int32_t)&g169);
    }
    int32_t v15 = g4 + 32 * a1; // 0x10005e72
    g5 = v15;
    int32_t result; // 0x10005e8f
    if (v15 != 0) {
        // 0x10005e76
        g7 = a2;
        *(int32_t *)(g8 - 4) = a2;
        g4 = g5;
        function_1000d190((int32_t)&g169);
        int32_t v16 = g7 + 16; // 0x10005e81
        g7 = v16;
        *(int32_t *)(g8 - 4) = v16;
        g4 = g5 + 16;
        function_1000d190((int32_t)&g169);
        result = g3;
    } else {
        result = a1;
    }
    // 0x10005e8d
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x10005ea0 - 0x10005f36
int32_t function_10005ea0(int32_t a1) {
    int32_t v1 = g4; // 0x10005ea7
    int32_t * v2 = (int32_t *)(v1 + 12); // 0x10005ea7
    int32_t v3 = *v2 - 1; // 0x10005eaa
    int32_t v4 = v3; // ebx
    if (v3 < 0) {
        // 0x10005f2a
        *v2 = 0;
        return g1;
    }
    int32_t v5 = 0; // edi
    int32_t v6 = 32 * v3;
    int32_t v7 = 0; // 0x10005ec4
    int32_t v8 = v1; // 0x10005ec0
    int32_t v9; // 0x10005f20
    int32_t result; // 0x10005f16
    while (true) {
        int32_t v10 = *(int32_t *)v8 + v6; // 0x10005ec2
        int32_t v11 = v10; // esi
        *(int32_t *)(v10 + 28) = v7;
        if (*(int32_t *)(v11 + 24) >= v5) {
            int32_t v12 = *(int32_t *)(v11 + 16); // 0x10005ecc
            if (v12 != v5) {
                int32_t v13 = *(int32_t *)0x100221e8; // 0x10005ed3
                g4 = v13;
                g4 = *(int32_t *)v13;
                *(int32_t *)(g8 - 4) = v12;
                g4 = v1;
                *(int32_t *)(v11 + 16) = v5;
            }
            // 0x10005ee9
            *(int32_t *)(v11 + 20) = v5;
        }
        // 0x10005eec
        *(int32_t *)(v11 + 12) = v5;
        int32_t v14 = v11; // 0x10005eef
        if (*(int32_t *)(v14 + 8) >= v5) {
            int32_t v15 = *(int32_t *)v14; // 0x10005ef4
            if (v15 != v5) {
                int32_t v16 = *(int32_t *)0x100221e8; // 0x10005efa
                g4 = v16;
                g4 = *(int32_t *)v16;
                *(int32_t *)(g8 - 4) = v15;
                g4 = v1;
                *(int32_t *)v11 = v5;
            } else {
                v11 = v14;
            }
            // 0x10005f0f
            *(int32_t *)(v11 + 4) = v5;
            v9 = v5;
        } else {
            v9 = v5;
        }
        int32_t v17 = v4 - 1; // 0x10005f15
        v4 = v17;
        result = v6 - 32;
        if (v17 < v9) {
            // break -> 0x10005f20
            break;
        }
        // 0x10005f12
        v6 = result;
        v7 = v9;
        v8 = g4;
    }
    // 0x10005f20
    *(int32_t *)(g4 + 12) = v9;
    g7 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x10005f40 - 0x10005f7f
int32_t function_10005f40(void) {
    int32_t v1 = g7; // 0x10005f40
    g7 = g4;
    int32_t result = function_10005db0(); // eax
    int32_t v2 = g4; // 0x10005f4e
    if (*(int32_t *)(g7 + 8) < 0) {
        // 0x10005f78
        *(int32_t *)(g7 + 16) = v2;
        g7 = v1;
        return result;
    }
    // 0x10005f4e
    result = v2;
    if (v2 != 0) {
        int32_t v3 = *(int32_t *)0x100221e8; // 0x10005f54
        g4 = v3;
        int32_t v4 = *(int32_t *)v3; // 0x10005f5a
        g4 = v4;
        result = *(int32_t *)(*(int32_t *)v4 + 20);
        *(int32_t *)g7 = 0;
    }
    // 0x10005f6a
    *(int32_t *)(g7 + 4) = 0;
    *(int32_t *)(g7 + 16) = g4;
    g7 = *(int32_t *)g8;
    return result;
}

// Address range: 0x10005f80 - 0x1000615b
int32_t function_10005f80(int32_t * a1, int32_t a2, int32_t a3) {
    // 0x10005f80
    int32_t v1; // bp-76
    int32_t v2 = &v1; // 0x10005f90
    g4 = v2;
    function_1000c7c0(0, 0, 1);
    g4 = g119;
    int32_t v3 = g119 + 4; // 0x10005f9e
    int32_t v4 = *(int32_t *)(*(int32_t *)v3 + 56); // 0x10005fa1
    g1 = v4;
    int32_t v5 = g3; // 0x10005fa4
    g4 = v3;
    int32_t result; // 0x1000612b
    if ((char)v4 != 0) {
        // 0x10005fc0
        int32_t v6; // bp-592
        int32_t v7 = &v6; // 0x10005fc0
        g4 = v7;
        function_1000de70(&v6, &g14, a2, a3, &v1, v5, v5, v5);
        char v8; // bp-336
        int32_t v9 = &v8; // 0x10005fdb
        g6 = v9;
        g1 = v7;
        g4 = v2;
        int32_t v10 = function_1000cdc0(&v6, (int32_t *)&v8, 260, 1, (int32_t)&g169); // 0x10005fec
        if (v10 >= 1) {
            // 0x10005ff9
            g7 = (int32_t)a1;
            int32_t v11 = g5; // bp-924
            int32_t v12; // bp-28
            int32_t v13 = &v12; // 0x1000601d
            int32_t v14; // bp-12
            int32_t v15 = &v14; // 0x10006075
            int32_t v16 = &v11; // 0x10006006
            while (true) {
                // 0x10006000
                g4 = v9;
                *(int32_t *)(v16 - 4) = v9;
                __strlwr((char *)&g169);
                g6 = v9;
                *(int32_t *)(g8 - 4) = 92;
                *(int32_t *)(g8 - 8) = v9;
                function_10009740((int32_t)&g169, (int32_t)&g169);
                g4 = v13;
                function_1000d140();
                int32_t v17;
                int32_t v18; // 0x10006054
                if (v8 != 34) {
                    // 0x10006036
                    g4 = v9;
                    *(int32_t *)(g8 - 4) = v9;
                    *(int32_t *)(g8 - 8) = (int32_t)"\"%s\"";
                    int32_t v19; // bp-860
                    *(int32_t *)(g8 - 12) = (int32_t)&v19;
                    int32_t v20 = function_10002c60(&g169, (char *)&g169); // 0x10006049
                    v18 = g8 + 12;
                    v17 = v20 + 5;
                } else {
                    // 0x10006000
                    v18 = g8;
                    v17 = v9;
                }
                // 0x10006054
                *(int32_t *)(v18 - 4) = v17;
                g4 = v13;
                function_1000d100((char *)&g169);
                *(int32_t *)(g8 - 4) = v13;
                g4 = g7;
                int32_t v21 = function_100037a0(&g169); // 0x10006063
                g1 = v21;
                if (v21 == -1) {
                    // 0x10006071
                    int32_t v22; // bp-5
                    *(int32_t *)(g8 - 4) = (int32_t)&v22;
                    v14 = g1;
                    *(int32_t *)(g8 - 8) = v15;
                    *(int32_t *)(g8 - 12) = v13;
                    g4 = g7;
                    int32_t v23 = g3; // 0x10006082
                    v22 = v23;
                    function_10002e40(v14, (int32_t *)v23, &g169);
                    g4 = g7;
                    int32_t v24 = function_10002f30(); // 0x1000608c
                    g1 = v24;
                    int32_t v25 = v14; // 0x10006094
                    int32_t v26 = 32 * v24; // 0x10006099
                    g5 = v26;
                    int32_t v27 = *(int32_t *)(g7 + 4) + v26; // 0x1000609c
                    g4 = v27;
                    *(int32_t *)(v27 + 8) = v25;
                    *(int32_t *)(g4 + 4) = -1;
                    *(int32_t *)g4 = -1;
                    *(int32_t *)(g4 + 12) = g3;
                    if (v25 == -1) {
                        // 0x100060cc
                        *(int32_t *)(g7 + 16) = g1;
                    } else {
                        int32_t v28 = *(int32_t *)(g7 + 4); // 0x100060b6
                        g4 = v28;
                        int32_t v29 = 32 * v25; // 0x100060b9
                        int32_t v30 = g1; // 0x100060c6
                        if ((char)v22 == (char)g3) {
                            // 0x100060c6
                            *(int32_t *)(v28 + (v29 | 4)) = v30;
                        } else {
                            // 0x100060c1
                            *(int32_t *)(v28 + v29) = v30;
                        }
                    }
                    // 0x100060cf
                    *(int32_t *)(g8 - 4) = g1;
                    g4 = g7;
                    g1 = function_10003890((int32_t)&g169);
                    int32_t v31 = g7; // 0x100060d7
                    int32_t * v32 = (int32_t *)(v31 + 20); // 0x100060da
                    *v32 = *v32 + 1;
                    int32_t v33 = g5 + 16 + *(int32_t *)(v31 + 4); // 0x100060dd
                    g4 = v33;
                    if (v33 != g3) {
                        // 0x100060e5
                        *(int32_t *)(g8 - 4) = v13;
                        g1 = function_1000d190((int32_t)&g169);
                    }
                }
                uint32_t v34 = g3; // 0x100060ee
                uint32_t v35;
                if (v35 >= v34) {
                    int32_t v36 = v12; // 0x100060f6
                    g1 = v36;
                    if (v36 != v34) {
                        int32_t v37 = *(int32_t *)0x100221e8; // 0x100060fd
                        g4 = v37;
                        int32_t v38 = *(int32_t *)v37; // 0x10006103
                        g4 = v38;
                        *(int32_t *)(g8 - 4) = v36;
                        g1 = *(int32_t *)(*(int32_t *)v38 + 20);
                        v12 = g3;
                    }
                }
                // 0x10006113
                *(int32_t *)(g8 - 4) = 1;
                *(int32_t *)(g8 - 8) = 260;
                *(int32_t *)(g8 - 12) = v9;
                g6 = v7;
                *(int32_t *)(g8 - 16) = v7;
                g4 = v2;
                result = function_1000cdc0((int32_t *)v34, &g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                if (result >= 0 != result != 0) {
                    // break -> 0x10006138
                    break;
                }
                v16 = g8;
            }
            // 0x10006138
            g5 = *(int32_t *)g8;
            g7 = *(int32_t *)(g8 + 4);
        } else {
            result = v10;
        }
    } else {
        result = v4;
    }
    // 0x1000613a
    int32_t v39;
    if (v39 < g3) {
        // 0x10006156
        g3 = *(int32_t *)g8;
        return result;
    }
    int32_t result2; // 0x1000615a
    if (v1 != g3) {
        int32_t v40 = *(int32_t *)0x100221e8; // 0x10006146
        g4 = v40;
        int32_t v41 = *(int32_t *)v40; // 0x1000614c
        g4 = v41;
        *(int32_t *)(g8 - 4) = v1;
        result2 = *(int32_t *)(*(int32_t *)v41 + 20);
    } else {
        result2 = v1;
    }
    // 0x10006156
    g3 = *(int32_t *)g8;
    return result2;
}

// Address range: 0x10006160 - 0x100061bf
int32_t function_10006160(int32_t a1, int32_t a2) {
    // 0x10006160
    g7 = g4;
    function_10005db0();
    int32_t v1; // 0x10006197
    if (*(int32_t *)(g7 + 8) >= 0) {
        // 0x1000616e
        if (g4 != 0) {
            int32_t v2 = *(int32_t *)0x100221e8; // 0x10006174
            g4 = v2;
            g4 = *(int32_t *)v2;
            *(int32_t *)g7 = 0;
        }
        // 0x1000618a
        *(int32_t *)(g7 + 4) = 0;
        v1 = g7;
    } else {
        v1 = g7;
    }
    int32_t v3 = g4; // 0x10006195
    int32_t result = v3; // eax
    *(int32_t *)(v1 + 16) = v3;
    if (*(int32_t *)(v1 + 8) < 0) {
        // 0x100061bd
        g7 = *(int32_t *)g8;
        return result;
    }
    int32_t v4 = result; // 0x1000619c
    if (v4 != 0) {
        int32_t v5 = *(int32_t *)0x100221e8; // 0x100061a0
        g4 = v5;
        int32_t v6 = *(int32_t *)v5; // 0x100061a6
        g4 = v6;
        *(int32_t *)(g8 - 4) = v4;
        result = *(int32_t *)(*(int32_t *)v6 + 20);
        *(int32_t *)g7 = 0;
    }
    // 0x100061b6
    *(int32_t *)(g7 + 4) = 0;
    // 0x100061bd
    g7 = *(int32_t *)g8;
    return result;
}

// Address range: 0x100061c0 - 0x1000621f
int32_t function_100061c0(void) {
    int32_t v1 = g7; // 0x100061c0
    g7 = g4;
    function_10005ea0(v1);
    int32_t v2; // 0x100061f7
    if (*(int32_t *)(g7 + 8) >= 0) {
        // 0x100061ce
        if (g4 != 0) {
            int32_t v3 = *(int32_t *)0x100221e8; // 0x100061d4
            g4 = v3;
            g4 = *(int32_t *)v3;
            *(int32_t *)g7 = 0;
        }
        // 0x100061ea
        *(int32_t *)(g7 + 4) = 0;
        v2 = g7;
    } else {
        v2 = g7;
    }
    int32_t v4 = g4; // 0x100061f5
    int32_t result = v4; // eax
    *(int32_t *)(v2 + 16) = v4;
    if (*(int32_t *)(v2 + 8) < 0) {
        // 0x1000621d
        g7 = *(int32_t *)g8;
        return result;
    }
    int32_t v5 = result; // 0x100061fc
    if (v5 != 0) {
        int32_t v6 = *(int32_t *)0x100221e8; // 0x10006200
        g4 = v6;
        int32_t v7 = *(int32_t *)v6; // 0x10006206
        g4 = v7;
        *(int32_t *)(g8 - 4) = v5;
        result = *(int32_t *)(*(int32_t *)v7 + 20);
        *(int32_t *)g7 = 0;
    }
    // 0x10006216
    *(int32_t *)(g7 + 4) = 0;
    // 0x1000621d
    g7 = *(int32_t *)g8;
    return result;
}

// Address range: 0x10006220 - 0x10006279
int32_t function_10006220(int32_t a1, int32_t a2) {
    // 0x10006220
    int32_t v1; // bp-40
    int32_t v2 = &v1; // 0x10006223
    int32_t v3 = g7; // 0x10006226
    g7 = a2;
    int32_t v4 = g5; // 0x1000622c
    g5 = a1;
    g4 = -1;
    g1 = v2;
    v1 = 0x100056d0;
    function_10005f80(&v1, a1, a2);
    g4 = v2;
    function_10005af0(&v1, g5, g7);
    g4 = v2;
    int32_t result = function_100043d0(); // 0x1000626e
    g5 = v4;
    g7 = v3;
    return result;
}

// Address range: 0x10006280 - 0x10006330
int32_t function_10006280(int32_t a1, int32_t a2, int32_t a3) {
    // 0x10006280
    int32_t v1; // bp-40
    int32_t v2 = &v1; // 0x10006283
    g7 = 0;
    int32_t v3 = g5; // bp-48
    g5 = a1;
    v1 = 0x100056d0;
    int32_t v4; // 0x100062e1
    if (*(int32_t *)(a1 + 12) > 0) {
        int32_t v5 = g3; // bp-52
        g4 = *(int32_t *)a1;
        *(int32_t *)((int32_t)&v5 - 4) = a3;
        int32_t v6 = function_1000d070(); // 0x100062bf
        g1 = v6;
        *(int32_t *)(g8 - 4) = v6;
        g4 = v2;
        *(int32_t *)(g8 - 8) = v2;
        function_10005f80(&g169, (int32_t)&g169, (int32_t)&g169);
        int32_t v7 = g7 + 1; // 0x100062ce
        g7 = v7;
        int32_t v8 = g8 + 12; // 0x100062cf
        int32_t v9 = g5; // 0x100062d5
        while (v7 < *(int32_t *)(v9 + 12)) {
            // 0x100062b7
            g4 = *(int32_t *)v9 + g3 + 16;
            *(int32_t *)(v8 - 4) = a3;
            v6 = function_1000d070();
            g1 = v6;
            *(int32_t *)(g8 - 4) = v6;
            g4 = v2;
            *(int32_t *)(g8 - 8) = v2;
            function_10005f80(&g169, (int32_t)&g169, (int32_t)&g169);
            v7 = g7 + 1;
            g7 = v7;
            v8 = g8 + 12;
            v9 = g5;
        }
        // 0x100062da
        g3 = *(int32_t *)v8;
        v4 = g8 + 16;
    } else {
        v4 = &v3;
    }
    // 0x1000632c
    *(int32_t *)(v4 - 4) = a3;
    *(int32_t *)(v4 - 8) = a2;
    g4 = v2;
    *(int32_t *)(v4 - 12) = v2;
    function_10005af0(&g169, (int32_t)&g169, (int32_t)&g169);
    g4 = v2;
    function_10004260();
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    return 0;
}

// Address range: 0x10006330 - 0x1000647d
int32_t function_10006330(void) {
    int32_t v1 = g7; // 0x10006330
    int32_t v2 = g4; // 0x10006331
    g7 = v2;
    g4 = v2 + 160;
    g1 = function_10006160(g5, v1);
    g4 = g7 + 140;
    int32_t result = function_100061c0(); // eax
    int32_t v3 = 0; // edi
    *(int32_t *)(g7 + 132) = 0;
    if (*(int32_t *)(g7 + 128) >= v3) {
        int32_t * v4 = (int32_t *)(g7 + 120); // 0x1000635a
        int32_t v5 = *v4; // 0x1000635a
        result = v5;
        if (v5 != v3) {
            int32_t v6 = *(int32_t *)0x100221e8; // 0x10006361
            g4 = v6;
            int32_t v7 = *(int32_t *)v6; // 0x10006367
            g4 = v7;
            result = *(int32_t *)(*(int32_t *)v7 + 20);
            *v4 = v3;
        }
        // 0x10006374
        *(int32_t *)(g7 + 124) = v3;
    }
    // 0x10006377
    *(int32_t *)(g7 + 116) = v3;
    if (*(int32_t *)(g7 + 112) >= v3) {
        int32_t v8 = *(int32_t *)(g7 + 104); // 0x1000637f
        result = v8;
        if (v8 != v3) {
            int32_t v9 = *(int32_t *)0x100221e8; // 0x10006386
            g4 = v9;
            int32_t v10 = *(int32_t *)v9; // 0x1000638c
            g4 = v10;
            *(int32_t *)(g8 - 4) = v8;
            result = *(int32_t *)(*(int32_t *)v10 + 20);
            *(int32_t *)(g7 + 104) = v3;
        }
        // 0x10006399
        *(int32_t *)(g7 + 108) = v3;
    }
    // 0x1000639c
    *(int32_t *)(g7 + 100) = v3;
    if (*(int32_t *)(g7 + 96) >= v3) {
        int32_t v11 = *(int32_t *)(g7 + 88); // 0x100063a4
        result = v11;
        if (v11 != v3) {
            int32_t v12 = *(int32_t *)0x100221e8; // 0x100063ab
            g4 = v12;
            int32_t v13 = *(int32_t *)v12; // 0x100063b1
            g4 = v13;
            *(int32_t *)(g8 - 4) = v11;
            result = *(int32_t *)(*(int32_t *)v13 + 20);
            *(int32_t *)(g7 + 88) = v3;
        }
        // 0x100063be
        *(int32_t *)(g7 + 92) = v3;
    }
    // 0x100063c1
    *(int32_t *)(g7 + 84) = v3;
    if (*(int32_t *)(g7 + 80) >= v3) {
        int32_t v14 = *(int32_t *)(g7 + 72); // 0x100063c9
        result = v14;
        if (v14 != v3) {
            int32_t v15 = *(int32_t *)0x100221e8; // 0x100063d0
            g4 = v15;
            int32_t v16 = *(int32_t *)v15; // 0x100063d6
            g4 = v16;
            *(int32_t *)(g8 - 4) = v14;
            result = *(int32_t *)(*(int32_t *)v16 + 20);
            *(int32_t *)(g7 + 72) = v3;
        }
        // 0x100063e3
        *(int32_t *)(g7 + 76) = v3;
    }
    // 0x100063e6
    *(int32_t *)(g7 + 68) = v3;
    if (*(int32_t *)(g7 + 64) >= v3) {
        int32_t v17 = *(int32_t *)(g7 + 56); // 0x100063ee
        result = v17;
        if (v17 != v3) {
            int32_t v18 = *(int32_t *)0x100221e8; // 0x100063f5
            g4 = v18;
            int32_t v19 = *(int32_t *)v18; // 0x100063fb
            g4 = v19;
            *(int32_t *)(g8 - 4) = v17;
            result = *(int32_t *)(*(int32_t *)v19 + 20);
            *(int32_t *)(g7 + 56) = v3;
        }
        // 0x10006408
        *(int32_t *)(g7 + 60) = v3;
    }
    // 0x1000640b
    *(int32_t *)(g7 + 52) = v3;
    if (*(int32_t *)(g7 + 48) >= v3) {
        int32_t v20 = *(int32_t *)(g7 + 40); // 0x10006413
        result = v20;
        if (v20 != v3) {
            int32_t v21 = *(int32_t *)0x100221e8; // 0x1000641a
            g4 = v21;
            int32_t v22 = *(int32_t *)v21; // 0x10006420
            g4 = v22;
            *(int32_t *)(g8 - 4) = v20;
            result = *(int32_t *)(*(int32_t *)v22 + 20);
            *(int32_t *)(g7 + 40) = v3;
        }
        // 0x1000642d
        *(int32_t *)(g7 + 44) = v3;
    }
    // 0x10006430
    *(int32_t *)(g7 + 36) = v3;
    if (*(int32_t *)(g7 + 32) >= v3) {
        int32_t v23 = *(int32_t *)(g7 + 24); // 0x10006438
        result = v23;
        if (v23 != v3) {
            int32_t v24 = *(int32_t *)0x100221e8; // 0x1000643f
            g4 = v24;
            int32_t v25 = *(int32_t *)v24; // 0x10006445
            g4 = v25;
            *(int32_t *)(g8 - 4) = v23;
            result = *(int32_t *)(*(int32_t *)v25 + 20);
            *(int32_t *)(g7 + 24) = v3;
        }
        // 0x10006452
        *(int32_t *)(g7 + 28) = v3;
    }
    // 0x10006455
    *(int32_t *)(g7 + 20) = v3;
    if (*(int32_t *)(g7 + 16) < v3) {
        // 0x1000647a
        return result;
    }
    int32_t v26 = *(int32_t *)(g7 + 8); // 0x1000645d
    result = v26;
    if (v26 != v3) {
        int32_t v27 = *(int32_t *)0x100221e8; // 0x10006464
        g4 = v27;
        int32_t v28 = *(int32_t *)v27; // 0x1000646a
        g4 = v28;
        *(int32_t *)(g8 - 4) = v26;
        result = *(int32_t *)(*(int32_t *)v28 + 20);
        *(int32_t *)(g7 + 8) = v3;
    }
    // 0x10006477
    *(int32_t *)(g7 + 12) = v3;
    // 0x1000647a
    return result;
}

// Address range: 0x10006480 - 0x1000653c
// From class:    CResListGenerator
// Type:          constructor
// Demangled:     public: __thiscall std::_Init_locks::_Init_locks()
int32_t ??0_Init_locks@std@@QAE@XZ(void) {
    int32_t v1 = g4; // 0x10006482
    g7 = v1;
    int32_t v2 = 0; // ebx
    g4 = v1 + 8;
    *(int32_t *)v1 = (int32_t)&g20;
    *(int16_t *)(g7 + 4) = (int16_t)v2;
    *(char *)(g7 + 6) = (char)v2;
    function_1000d140();
    g4 = g7 + 24;
    function_1000d140();
    g4 = g7 + 40;
    function_1000d140();
    g4 = g7 + 56;
    function_1000d140();
    g4 = g7 + 72;
    function_1000d140();
    g4 = g7 + 88;
    function_1000d140();
    g4 = g7 + 104;
    function_1000d140();
    g4 = g7 + 120;
    function_1000d140();
    *(int32_t *)(g7 + 136) = v2;
    *(int32_t *)(g7 + 140) = v2;
    *(int32_t *)(g7 + 144) = v2;
    *(int32_t *)(g7 + 148) = v2;
    *(int32_t *)(g7 + 152) = v2;
    *(int32_t *)(g7 + 156) = v2;
    *(int32_t *)(g7 + 160) = v2;
    *(int32_t *)(g7 + 164) = v2;
    *(int32_t *)(g7 + 168) = v2;
    *(int32_t *)(g7 + 172) = v2;
    *(int32_t *)(g7 + 176) = v2;
    char * v3 = "reslists"; // bp-16
    int32_t v4 = g7; // 0x1000651b
    g4 = v4 + 56;
    *(int32_t *)(v4 + 180) = v2;
    function_1000d100(v3);
    g4 = g7 + 72;
    function_1000d100("reslists_work");
    return g7;
}

// Address range: 0x10006540 - 0x100066d1
int32_t function_10006540(char * a1) {
    // 0x10006540
    g7 = 0;
    int32_t v1 = g4; // 0x1000654d
    g3 = v1;
    int32_t v2 = 0; // bp-28
    int32_t v3 = (int32_t)a1; // 0x10006589
    int32_t v4; // eax
    int32_t v5; // 0x10006666
    int32_t v6; // 0x100065d0
    if (*(int32_t *)(v1 + 152) > 0) {
        // 0x1000656e
        int32_t v7; // bp-308
        int32_t v8 = &v7; // 0x1000659d
        int32_t v9; // bp-48
        int32_t v10 = &v9; // 0x100065b8
        v6 = &v2;
        int32_t v11 = v1; // 0x10006571
        int32_t v12 = 0;
        int32_t v13 = 0;
        int32_t v14 = 0;
        int32_t v15; // 0x10006658
        while (true) {
            // 0x10006571
            g4 = *(int32_t *)(v11 + 140) + v14;
            int32_t v16 = function_1000d070(); // 0x1000657a
            g4 = g3 + 72;
            g5 = v16;
            v4 = function_1000d070();
            *(int32_t *)(g8 - 4) = v3;
            *(int32_t *)(g8 - 8) = g5;
            *(int32_t *)(g8 - 12) = v4;
            g4 = g3 + 40;
            *(int32_t *)(g8 - 4) = function_1000d070();
            *(int32_t *)(g8 - 8) = (int32_t)"%s\\%s\\%s\\%s";
            *(int32_t *)(g8 - 12) = 260;
            *(int32_t *)(g8 - 16) = v8;
            function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
            *(int32_t *)(g8 + 24) = v8;
            g4 = v10;
            function_1000d150((int32_t)&g169);
            g1 = 0;
            int32_t v17 = g7; // 0x100065c3
            int32_t v18 = v17 + 1; // 0x100065c3
            g4 = v18;
            g5 = v17;
            int32_t v19; // 0x100065de
            int32_t v20; // 0x100065ee
            if (v18 > 0) {
                // 0x100065cc
                g7 = v18;
                *(int32_t *)(g8 - 4) = v18;
                g4 = v6;
                function_10005750((int32_t)&g169);
                v19 = v12;
                v20 = g5;
            } else {
                v19 = v17;
                v20 = v17;
            }
            int32_t v21 = v2; // 0x100065db
            g4 = v21;
            int32_t v22 = v19 + 1; // 0x100065de
            g7 = v22;
            int32_t v23 = v22 - v20 - 1; // 0x100065e3
            int32_t v24; // 0x10006609
            int32_t v25; // 0x10006603
            if (v23 >= 1) {
                // 0x100065ee
                g4 = v21 + 16 * v20;
                *(int32_t *)(g8 - 4) = 16 * v23;
                *(int32_t *)(g8 - 8) = g4;
                int32_t v26 = g4 + 16; // 0x100065fa
                g4 = v26;
                *(int32_t *)(g8 - 12) = v26;
                _memcpy((int32_t *)v22, (int32_t *)v21, (int32_t)&g169);
                v25 = v2;
                g4 = v25;
                v24 = g5;
            } else {
                v25 = v21;
                v24 = v20;
            }
            int32_t v27 = 16 * v24 + v25; // 0x1000660c
            g5 = v27;
            if (v27 != 0) {
                // 0x10006610
                *(int32_t *)(g8 - 4) = v10;
                g4 = g5;
                function_1000d190((int32_t)&g169);
            }
            int32_t v28;
            if (v28 >= 0) {
                int32_t v29 = v9; // 0x10006628
                if (v29 != 0) {
                    int32_t v30 = *(int32_t *)0x100221e8; // 0x1000662f
                    g4 = v30;
                    g4 = *(int32_t *)v30;
                    *(int32_t *)(g8 - 4) = v29;
                    v9 = 0;
                }
            }
            int32_t v31 = v13 + 1; // 0x10006654
            v15 = g3;
            if (v31 >= *(int32_t *)(v15 + 152)) {
                // break -> 0x10006664
                break;
            }
            v11 = v15;
            v12 = v22;
            v13 = v31;
            v14 += 32;
        }
        // 0x10006664
        g7 = 0;
        v5 = v15;
    } else {
        // 0x10006540
        v6 = &v2;
        v5 = v1;
    }
    // 0x10006666
    g4 = v5 + 56;
    int32_t v32 = function_1000d070(); // 0x10006669
    g4 = g3 + 40;
    g5 = v32;
    v4 = function_1000d070();
    g4 = v3;
    *(int32_t *)(g8 - 4) = v3;
    *(int32_t *)(g8 - 8) = g5;
    *(int32_t *)(g8 - 12) = v4;
    *(int32_t *)(g8 - 16) = (int32_t)"%s\\%s\\%s";
    int32_t v33; // bp-316
    *(int32_t *)(g8 - 20) = (int32_t)&v33;
    int32_t v34 = function_10002c60(&g169, (char *)&g169); // 0x1000668a
    *(int32_t *)(g8 - 4) = (int32_t)"GAME";
    *(int32_t *)(g8 - 8) = v34 + 5;
    *(int32_t *)(g8 - 12) = v6;
    int32_t v35 = function_10006280((int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000669c
    g1 = v35;
    g4 = v6;
    int32_t v36 = function_10005db0(); // 0x100066a7
    int32_t result; // 0x100066ce
    if (g7 <= 0) {
        int32_t v37 = v2; // 0x100066b1
        if (v37 != g7) {
            int32_t v38 = *(int32_t *)0x100221e8; // 0x100066b8
            g4 = v38;
            int32_t v39 = *(int32_t *)v38; // 0x100066be
            g4 = v39;
            *(int32_t *)(g8 - 4) = v37;
            result = *(int32_t *)(*(int32_t *)v39 + 20);
        } else {
            result = v37;
        }
    } else {
        result = v36;
    }
    // 0x100066c8
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x100066e0 - 0x100067a0
int32_t function_100066e0(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g4; // 0x100066ea
    g7 = v2;
    g4 = v2 + 56;
    function_1000d070();
    g4 = g7 + 40;
    function_1000d070();
    int32_t v3; // bp-264
    function_10009a90(&v3, 260, "%s\\%s");
    g4 = g119;
    g4 = g7;
    function_10006540("all.lst");
    g4 = g7;
    int32_t v4 = function_10006540("engine.lst"); // 0x10006744
    g5 = 0;
    int32_t v5 = g7; // 0x1000674b
    int32_t v6; // 0x1000679a
    int32_t result; // 0x10006788
    if (*(int32_t *)(v5 + 172) > 0) {
        g4 = *(int32_t *)(v5 + 160);
        *(int32_t *)(g8 - 4) = function_1000d070();
        *(int32_t *)(g8 - 8) = (int32_t)"%s.lst";
        int32_t v7; // bp-532
        *(int32_t *)(g8 - 12) = (int32_t)&v7;
        *(int32_t *)(g8 + 8) = function_10002c60(&g169, (char *)&g169) + 5;
        g4 = g7;
        result = function_10006540((char *)&g169);
        int32_t v8 = g5 + 1; // 0x1000678d
        g5 = v8;
        while (v8 < *(int32_t *)(g7 + 172)) {
            // 0x10006760
            g4 = *(int32_t *)(g7 + 160) + g3 + 16;
            *(int32_t *)(g8 - 4) = function_1000d070();
            *(int32_t *)(g8 - 8) = (int32_t)"%s.lst";
            *(int32_t *)(g8 - 12) = (int32_t)&v7;
            *(int32_t *)(g8 + 8) = function_10002c60(&g169, (char *)&g169) + 5;
            g4 = g7;
            result = function_10006540((char *)&g169);
            v8 = g5 + 1;
            g5 = v8;
        }
        // 0x10006799
        g3 = *(int32_t *)g8;
        v6 = g8 + 4;
    } else {
        // 0x100066e0
        result = v4;
        v6 = g8;
    }
    // 0x1000679a
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = v1;
    return result;
}

// Address range: 0x100067a0 - 0x10006a75
// From class:    CResListGenerator
// Type:          virtual member function
int32_t function_100067a0(void) {
    int32_t v1; // ebp
    g2 = &v1;
    int32_t v2; // bp-1552
    int32_t v3 = &v2; // 0x100067a3
    int32_t v4 = g4; // 0x100067aa
    g7 = v4;
    char * v5 = (char *)(v4 + 5); // 0x100067ac
    int32_t v6; // eax
    if (*v5 == 0) {
        // 0x100067b2
        return v6 & -256 | 1;
    }
    int32_t * v7 = (int32_t *)(v4 + 180); // 0x100067b9
    int32_t v8 = *v7; // 0x100067b9
    g5 = *(int32_t *)0x100221e4;
    g3 = 1;
    if (v8 == 0) {
        // 0x1000681e
        *v7 = 1;
    } else {
        // 0x100067d1
        if (v8 == 1) {
            // 0x100067eb
            g4 = CommandLine();
            int32_t * v9 = (int32_t *)(g7 + 136); // 0x100067fb
            *v9 = g3 + *v9;
            int32_t v10 = g7; // 0x10006801
            if (*(int32_t *)(v10 + 136) >= *(int32_t *)(v10 + 152)) {
                // 0x1000680f
                g4 = v10;
                function_100066e0();
                int32_t * v11 = (int32_t *)(g7 + 180); // 0x10006816
                *v11 = g3 + *v11;
            }
        } else {
            // 0x100067d5
            if (v8 == 2) {
                // 0x100067df
                *v7 = 3;
            } else {
                // 0x100067d9
                *v5 = 0;
            }
        }
    }
    int32_t v12 = *(int32_t *)(g7 + 180) - g3; // 0x1000682a
    int32_t v13; // bp-780
    if (v12 == 0) {
        int32_t v14 = *(int32_t *)(g7 + 140) + 32 * *(int32_t *)(g7 + 136); // 0x100068ca
        g4 = v14;
        *(int32_t *)(g8 - 4) = function_1000d070();
        g4 = g7 + 72;
        *(int32_t *)(g8 - 4) = function_1000d070();
        *(int32_t *)(g8 - 8) = (int32_t)"%s\\%s";
        int32_t v15 = &v13; // 0x100068e6
        g4 = v15;
        *(int32_t *)(g8 - 12) = 512;
        *(int32_t *)(g8 - 16) = v15;
        function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
        *(int32_t *)(g8 + 16) = v15;
        g4 = g7 + 40;
        *(int32_t *)(g8 - 4) = function_1000d070();
        *(int32_t *)(g8 - 8) = (int32_t)"%s\\%s";
        int32_t v16; // bp-1040
        int32_t v17 = &v16; // 0x1000690f
        *(int32_t *)(g8 - 12) = 260;
        *(int32_t *)(g8 - 16) = v17;
        function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
        g4 = g119;
        *(int32_t *)(g8 + 16) = (int32_t)"GAME";
        *(int32_t *)(g8 + 12) = v17;
        int32_t v18 = 0; // bp-8
        int32_t v19 = CommandLine(); // 0x10006943
        *(int32_t *)(g8 - 4) = (int32_t)&v18;
        *(int32_t *)(g8 - 8) = (int32_t)"-startmap";
        g4 = v19;
        *(int32_t *)(g8 - 12) = 259;
        *(int32_t *)(g8 - 16) = 0;
        int32_t v20; // bp-267
        *(int32_t *)(g8 - 20) = (int32_t)&v20;
        int32_t * v21 = NULL; // bp-268
        _memset(NULL, (int32_t)&g169, (int32_t)&g169);
        int32_t v22 = v18; // 0x10006971
        if (v22 != 0) {
            // 0x1000697b
            *(int32_t *)(g8 + 8) = 260;
            *(int32_t *)(g8 + 4) = v22;
            int32_t v23 = (int32_t)&v21; // 0x10006981
            g4 = v23;
            *(int32_t *)g8 = v23;
            function_10009a60(&g169, (int32_t)&g169, (int32_t)&g169);
        }
        // 0x10006990
        g4 = v14 + 16;
        int32_t v24 = function_1000d070(); // 0x10006993
        g4 = g7 + 88;
        v6 = function_1000d070();
        *(int32_t *)(g8 - 4) = v15;
        *(int32_t *)(g8 - 8) = v24;
        *(int32_t *)(g8 - 12) = v6;
        g4 = g7 + 104;
        *(int32_t *)(g8 - 4) = function_1000d070();
        *(int32_t *)(g8 - 8) = (int32_t)"%s %s %s -reslistdir %s";
        *(int32_t *)(g8 - 12) = 512;
        *(int32_t *)(g8 - 16) = v3;
        function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
        int32_t v25 = CommandLine(); // 0x100069cd
        *(int32_t *)(g8 - 4) = v3;
        g4 = v25;
        int32_t v26 = CommandLine(); // 0x100069df
        *(int32_t *)(g8 - 4) = 0;
        g4 = v26;
        *(int32_t *)(g8 - 8) = (int32_t)"-norebuildaudio";
        if ((char)(int32_t)v21 != 0) {
            int32_t v27 = CommandLine(); // 0x100069fa
            *(int32_t *)(g8 - 4) = (int32_t)&v21;
            *(int32_t *)(g8 - 8) = (int32_t)"-startmap";
            g4 = v27;
        }
        // 0x10006a11
        if (*(char *)(g7 + 6) != 0) {
            int32_t v28 = CommandLine(); // 0x10006a17
            *(int32_t *)(g8 - 4) = 0;
            g4 = v28;
            *(int32_t *)(g8 - 8) = (int32_t)"-xboxreslist";
        }
        int32_t v29 = CommandLine(); // 0x10006a29
        g4 = v29;
        *(int32_t *)(g8 - 4) = *(int32_t *)(*(int32_t *)v29 + 8);
        *(int32_t *)(g8 - 8) = (int32_t)"Generating Reslists: Setting command line:\n'%s'\n";
        // 0x10006a3a
        v6 = Warning();
        goto lab_0x10006a43;
    } else {
        int32_t v30 = v12 - g3; // 0x10006832
        v6 = v30;
        if (v30 == 0) {
            // 0x1000683f
            if (*(char *)(g7 + 6) == 0) {
                // 0x1000684e
                g4 = g7 + 56;
                *(int32_t *)(g8 - 4) = function_1000d070();
                g4 = g7 + 104;
                *(int32_t *)(g8 - 4) = function_1000d070();
                *(int32_t *)(g8 - 8) = (int32_t)"%s -reslistdir %s -rebuildaudio";
                int32_t v31 = &v13; // 0x10006865
                g4 = v31;
                *(int32_t *)(g8 - 12) = 512;
                *(int32_t *)(g8 - 16) = v31;
                function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
                int32_t v32 = CommandLine(); // 0x10006879
                *(int32_t *)(g8 - 4) = v31;
                g4 = v32;
                g4 = CommandLine();
                *(int32_t *)(g8 - 4) = (int32_t)"-norebuildaudio";
                g4 = CommandLine();
                *(int32_t *)(g8 - 4) = (int32_t)"-makereslists";
                int32_t v33 = CommandLine(); // 0x100068ab
                g4 = v33;
                *(int32_t *)(g8 - 4) = *(int32_t *)(*(int32_t *)v33 + 8);
                *(int32_t *)(g8 - 8) = (int32_t)"Generating Caches: Setting command line:\n'%s'\n";
                // 0x10006a3a
                v6 = Warning();
                goto lab_0x10006a43;
            } else {
                // 0x10006845
                *(char *)(g7 + 5) = 0;
                goto lab_0x10006a43;
            }
        } else {
            // 0x10006836
            *(char *)(g7 + 5) = 0;
            goto lab_0x10006a43;
        }
    }
  lab_0x10006a43:
    // 0x10006a43
    if (*(char *)(g7 + 5) != 0) {
        // branch -> 0x10006a6b
    } else {
        // 0x10006a49
        g4 = CommandLine();
        *(int32_t *)(g8 - 4) = (int32_t)"-makereslists";
        int32_t v34 = CommandLine(); // 0x10006a59
        *(int32_t *)(g8 - 4) = 0;
        g4 = v34;
        v6 = *(int32_t *)(*(int32_t *)v34 + 20);
        *(int32_t *)(g8 - 8) = (int32_t)"-autoquit";
    }
    // 0x10006a6b
    return v6 & -256 | (int32_t)*(char *)(g7 + 5);
}

// Address range: 0x10006a80 - 0x10006f4d
int32_t function_10006a80(int32_t * a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-652
    int32_t v3 = &v2; // 0x10006a86
    int32_t v4 = g4; // 0x10006a8d
    g7 = v4;
    unsigned char v5 = *(char *)a2; // 0x10006a8f
    g4 = (int32_t)v5 | v4 & -256;
    if (v5 == 43) {
        // 0x10006f36
        return Msg() & -256;
    }
    if (v5 == 45) {
        // 0x10006f36
        return Msg() & -256;
    }
    // 0x10006aa3
    g4 = v3;
    g1 = function_10009a90(&v2, 512, "%s/%s");
    char v6; // bp-108
    int32_t v7 = &v6; // 0x10006ac7
    g4 = v7;
    function_1000c7c0(0, 0, 0);
    g4 = g119;
    g4 = g119 + 4;
    int32_t v8; // bp-696
    if ((char)v3 == 0) {
        // 0x10006afa
        v8 = v3;
        int32_t v9 = Error(); // 0x10006b06
        int32_t v10;
        if (v10 < 0) {
            // 0x10006b2c
            return v9 & -256;
        }
        char v11 = v6; // 0x10006b15
        int32_t v12 = v11; // 0x10006b15
        int32_t v13; // 0x10006b2c
        if (v11 != 0) {
            int32_t v14 = *(int32_t *)0x100221e8; // 0x10006b1c
            g4 = v14;
            int32_t v15 = *(int32_t *)v14; // 0x10006b22
            g4 = v15;
            v8 = v12;
            v13 = *(int32_t *)(*(int32_t *)v15 + 20);
        } else {
            v13 = v12;
        }
        // 0x10006b2c
        return v13 & -256;
    }
    // 0x10006b35
    v8 = g5;
    int32_t v16 = function_1000a480(36); // 0x10006b38
    g1 = v16;
    int32_t v17; // 0x10006b64
    int32_t v18; // 0x10006b4b
    if (v16 != 0) {
        // 0x10006b44
        g4 = v16;
        v18 = function_1000a4a0((int32_t)"reslists");
        g1 = v18;
        v17 = g8;
    } else {
        v17 = &v8;
        v18 = 0;
    }
    // 0x10006b61
    g5 = v18;
    g4 = v6;
    *(int32_t *)(v17 - 4) = 0;
    *(int32_t *)(v17 - 8) = 0;
    *(int32_t *)(v17 - 12) = 0;
    *(int32_t *)(v17 - 16) = g4;
    *(int32_t *)(v17 - 20) = (int32_t)"reslists";
    g4 = g5;
    int32_t v19 = function_1000b8a0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x10006b72
    if ((char)v19 == 0) {
        // 0x10006b7b
        *(int32_t *)(g8 - 4) = v3;
        *(int32_t *)(g8 - 8) = (int32_t)"Unable to parse keyvalues from '%s'\n";
        g1 = Error();
        g4 = g5;
        g1 = function_1000a8a0();
        g4 = v7;
        return function_10003770() & -256;
    }
    // 0x10006ba9
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g8 - 8) = (int32_t)"maplist.txt";
    *(int32_t *)(g8 - 12) = (int32_t)"maplist";
    g4 = g5;
    *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
    int32_t v20; // bp-60
    int32_t v21 = &v20; // 0x10006bbc
    g4 = v21;
    function_1000d150((int32_t)&g169);
    g4 = v21;
    *(int32_t *)(g8 - 4) = function_1000d070();
    *(int32_t *)(g8 - 8) = g7 + 160;
    *(int32_t *)(g8 - 12) = (int32_t)a1;
    g4 = g7;
    function_10005be0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
    int32_t v22 = *(int32_t *)(g7 + 172); // 0x10006bdf
    if (v22 >= 0 != v22 != 0) {
        // 0x10006be8
        g4 = v21;
        *(int32_t *)(g8 - 4) = function_1000d070();
        *(int32_t *)(g8 - 8) = (int32_t)"Maplist file '%s' empty or missing!!!\n";
        g1 = Error();
        g4 = g5;
        g1 = function_1000a8a0();
        g4 = v21;
        g1 = function_10003730();
        g4 = v7;
        return function_10003770() & -256;
    }
    int32_t v23 = 0; // bp-8
    int32_t v24 = CommandLine(); // 0x10006c2e
    g1 = v24;
    *(int32_t *)(g8 - 4) = (int32_t)&v23;
    *(int32_t *)(g8 - 8) = (int32_t)"+map";
    g4 = v24;
    int32_t v25; // bp-28
    if (v24 != 0) {
        // 0x10006c46
        if (v23 != 0) {
            // 0x10006c4c
            g4 = g7 + 160;
            function_10005f40();
            int32_t v26 = &v25; // 0x10006c57
            g4 = v26;
            function_1000d140();
            *(int32_t *)(g8 - 4) = v23;
            g4 = v26;
            function_1000d100((char *)&g169);
            *(int32_t *)(g8 - 4) = v26;
            g4 = g7 + 160;
            *(int32_t *)(g8 - 8) = *(int32_t *)(g7 + 172);
            g1 = function_10005a80((int32_t)&g169, (int32_t)&g169);
            g4 = v26;
            function_10003730();
        }
    }
    int32_t v27 = CommandLine(); // 0x10006c89
    *(int32_t *)(g8 - 4) = 0;
    g4 = v27;
    *(int32_t *)(g8 - 8) = (int32_t)"-startstage";
    *(int32_t *)(g7 + 136) = *(int32_t *)(*(int32_t *)v27 + 28);
    int32_t v28 = 0; // bp-12
    int32_t v29 = CommandLine(); // 0x10006ca8
    *(int32_t *)(g8 - 4) = (int32_t)&v28;
    *(int32_t *)(g8 - 8) = (int32_t)"-startmap";
    g4 = v29;
    int32_t v30 = v28; // 0x10006cbc
    if (v30 != 0) {
        // 0x10006cc3
        *(int32_t *)(g8 - 12) = v30;
        g4 = g7 + 120;
        function_1000d100((char *)&g169);
    }
    // 0x10006ccc
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-startstage";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-makereslists";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-reslistdir";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-norebuildaudio";
    g4 = CommandLine();
    *(int32_t *)(g8 - 4) = (int32_t)"-startmap";
    int32_t v31 = CommandLine(); // 0x10006d1c
    g4 = v31;
    *(int32_t *)(g8 - 4) = *(int32_t *)(*(int32_t *)v31 + 8);
    g4 = g7 + 104;
    function_1000d100((char *)&g169);
    int32_t v32; // 0x10006d53
    if (v28 == 0) {
        // 0x10006ccc
        v32 = g8;
    } else {
        int32_t v33 = CommandLine(); // 0x10006d36
        g4 = g7 + 120;
        int32_t v34 = function_1000d070(); // 0x10006d3e
        g4 = v33;
        *(int32_t *)(g8 - 4) = v34;
        int32_t v35 = g8 - 8; // 0x10006d4c
        *(int32_t *)v35 = (int32_t)"-startmap";
        v32 = v35;
    }
    // 0x10006d53
    *(int32_t *)(v32 - 4) = (int32_t)&g14;
    *(int32_t *)(v32 - 8) = (int32_t)"basecommandline";
    g4 = g5;
    *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
    g4 = g7 + 88;
    function_1000d100((char *)&g169);
    g4 = g7 + 56;
    *(int32_t *)(g8 - 4) = function_1000d070();
    *(int32_t *)(g8 - 8) = (int32_t)"finaldir";
    g4 = g5;
    *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
    g4 = g7 + 56;
    function_1000d100((char *)&g169);
    g4 = g7 + 72;
    *(int32_t *)(g8 - 4) = function_1000d070();
    *(int32_t *)(g8 - 8) = (int32_t)"workdir";
    g4 = g5;
    *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
    g4 = g7 + 72;
    function_1000d100((char *)&g169);
    *(int32_t *)(g8 - 4) = 0;
    *(int32_t *)(g8 - 8) = (int32_t)"xbox";
    g4 = g5;
    int32_t v36 = function_1000a660((int32_t)&g169, (int32_t)&g169); // 0x10006db2
    *(int32_t *)(g8 - 4) = 0;
    *(int32_t *)(g8 - 8) = (int32_t)"%i";
    int32_t v37; // bp-140
    int32_t v38 = &v37; // 0x10006dc0
    g6 = v38;
    g4 = g4 & -256 | (int32_t)(v36 != 0);
    *(int32_t *)(g8 - 12) = 32;
    *(int32_t *)(g8 - 16) = v38;
    *(char *)(g7 + 6) = (char)g4;
    function_10009a90(NULL, (int32_t)&g169, (char *)&g169);
    *(int32_t *)(g8 + 12) = 0;
    *(int32_t *)(g8 + 8) = v38;
    g4 = g5;
    int32_t v39 = function_1000a510((char *)&g169, (int32_t)&g169); // 0x10006de9
    g5 = v39;
    if (v39 != 0) {
        // 0x10006df8
        int32_t v40; // bp-44
        int32_t v41 = &v40; // 0x10006df8
        int32_t v42 = &v25; // 0x10006e00
        int32_t v43 = 0;
        while (true) {
            // 0x10006df8
            g4 = v41;
            function_1000d140();
            g4 = v42;
            function_1000d140();
            *(int32_t *)(g8 - 4) = (int32_t)&g14;
            *(int32_t *)(g8 - 8) = (int32_t)"subdir";
            g4 = g5;
            *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
            g4 = v41;
            function_1000d100((char *)&g169);
            *(int32_t *)(g8 - 4) = (int32_t)&g14;
            *(int32_t *)(g8 - 8) = (int32_t)"addcommands";
            g4 = g5;
            *(int32_t *)(g8 - 4) = function_1000aa00((char *)&g169, (int32_t)&g169);
            g4 = v42;
            function_1000d100((char *)&g169);
            g4 = v41;
            int32_t v44;
            if (function_1000d060() < 1) {
                // 0x10006e60
                g4 = v38;
                *(int32_t *)(g8 - 4) = v38;
                g6 = v3;
                *(int32_t *)(g8 - 8) = v3;
                *(int32_t *)(g8 - 12) = (int32_t)"%s: failed to specify 'subdir' for item %s\n";
                v44 = Error();
            } else {
                int32_t v45 = g7; // 0x10006e48
                g4 = v45 + 140;
                *(int32_t *)(g8 - 4) = v41;
                *(int32_t *)(g8 - 8) = *(int32_t *)(v45 + 152);
                v44 = function_10005e20((int32_t)&g169, (int32_t)&g169);
            }
            // 0x10006e7c
            g1 = v44;
            int32_t v46 = v43 + 1; // 0x10006e7f
            g5 = v46;
            g4 = v41;
            function_100057e0(v46);
            *(int32_t *)(g8 - 4) = g5;
            *(int32_t *)(g8 - 8) = (int32_t)"%i";
            *(int32_t *)(g8 - 12) = 32;
            *(int32_t *)(g8 - 16) = v38;
            function_10009a90(&g169, (int32_t)&g169, (char *)&g169);
            *(int32_t *)(g8 + 12) = 0;
            *(int32_t *)(g8 + 8) = v38;
            g4 = v18;
            int32_t v47 = function_1000a510((char *)&g169, (int32_t)&g169); // 0x10006eae
            g5 = v47;
            if (v47 == 0) {
                // break -> 0x10006ebd
                break;
            }
            v43 = v46;
        }
    }
    int32_t v48 = g7; // 0x10006ebd
    int32_t v49 = *(int32_t *)(v48 + 152); // 0x10006ebd
    *(char *)(v48 + 5) = (char)(v49 >= 0 == (v49 != 0));
    int32_t v50 = v49 - 1; // 0x10006ecb
    g4 = v50;
    int32_t * v51 = (int32_t *)(g7 + 136); // 0x10006ece
    int32_t v52 = *v51; // 0x10006ece
    int32_t v53; // 0x10006ee2
    if (v52 >= 0) {
        if (v52 > v50) {
            // 0x10006ee0
            v53 = v50;
        } else {
            v53 = v52;
        }
    } else {
        // 0x10006ed8
        v53 = 0;
    }
    // 0x10006ee2
    *v51 = v53;
    int32_t v54 = CommandLine(); // 0x10006ee8
    *(int32_t *)(g8 - 4) = 0;
    g4 = v54;
    int32_t v55 = *(int32_t *)(*(int32_t *)v54 + 12); // 0x10006ef0
    g1 = v55;
    *(int32_t *)(g8 - 8) = (int32_t)"-collate";
    if (v55 == 0) {
        // 0x10006f10
        g4 = v18;
        g1 = function_1000a8a0();
        g4 = v21;
        g1 = function_10003730();
        g4 = v7;
        return (int32_t)*(char *)(g7 + 5) | function_10003770() & -256;
    }
    // 0x10006efe
    g4 = g7;
    function_100066e0();
    *(int32_t *)(g8 - 4) = -1;
    *(char *)(g7 + 5) = 0;
    function_10011fc6((int32_t)&g169);
    // UNREACHABLE
}

// Address range: 0x10006f50 - 0x1000701a
// From class:    CResListGenerator
// Type:          virtual member function
int32_t function_10006f50(int32_t a1, int32_t a2) {
    int32_t v1; // ebp
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x10006f53
    int32_t v4 = g4; // 0x10006f5a
    g7 = v4;
    char * v5 = (char *)(v4 + 4); // 0x10006f5c
    if (*v5 != 0) {
        // 0x10007013
        int32_t result; // eax
        return result;
    }
    // 0x10006f66
    g4 = v4 + 8;
    *v5 = 1;
    function_1000d100((char *)a1);
    g4 = g7 + 24;
    function_1000d100((char *)a2);
    g4 = g7 + 24;
    function_1000d070();
    g4 = g7 + 8;
    function_1000d070();
    g6 = v3;
    function_10009a90(&v2, 260, "%s/%s");
    function_10009740(v3, 92);
    g4 = v3;
    __strlwr((char *)&v2);
    g4 = g7 + 40;
    function_1000d100((char *)&v2);
    int32_t v6 = CommandLine(); // 0x10006fdf
    g4 = v6;
    if (v6 != 0) {
        // branch -> 0x10007013
    }
    // 0x10007013
    return 0;
}

// Address range: 0x1000701a - 0x10007020
int32_t function_1000701a(void) {
    // 0x1000701a
    return WSACleanup();
}

// Address range: 0x10007020 - 0x10007026
int32_t function_10007020(int16_t wVersionRequested, struct WSAData * lpWSAData) {
    // 0x10007020
    return WSAStartup(wVersionRequested, lpWSAData);
}

// Address range: 0x10007030 - 0x10007085
int32_t function_10007030(int32_t a1, int32_t a2) {
    int32_t v1 = *(int32_t *)a1; // 0x10007036
    if (v1 == 0) {
        // 0x1000703c
        return v1 & -256;
    }
    // 0x10007040
    g4 = a2;
    int32_t v2 = *(int32_t *)a2; // 0x10007043
    g4 = v2;
    if (v2 == 0) {
        // 0x10007049
        return v1 & -256 | 1;
    }
    bool v3; // 0x10007077
    while (true) {
        unsigned char v4 = *(char *)v1; // 0x10007050
        unsigned char v5 = *(char *)v2; // 0x10007052
        if (v4 != v5) {
            v3 = v4 < v5;
            // break -> 0x10007077
            break;
        }
        if (v4 == 0) {
            // 0x1000706c
            return 0;
        }
        unsigned char v6 = *(char *)(v1 + 1); // 0x1000705a
        unsigned char v7 = *(char *)(v2 + 1); // 0x1000705d
        if (v6 != v7) {
            v3 = v6 < v7;
            // break -> 0x10007077
            break;
        }
        int32_t v8 = v2 + 2; // 0x10007065
        g4 = v8;
        if (v6 == 0) {
            // 0x1000706c
            return 0;
        }
        v2 = v8;
        int32_t v9; // edx
        v9 = (int32_t)v6 | v9 & -256;
        v1 += 2;
    }
    int32_t v10 = v3; // 0x10007077
    uint32_t v11 = v10 + v1; // 0x10007077
    int32_t v12 = v3; // 0x10007077
    bool v13 = v3 ? v1 < v12 - v10 | v11 != -1 : v1 < v11; // 0x10007077
    int32_t v14 = v12 - (int32_t)!v13; // 0x10007079
    return (int32_t)(v14 < 0) | v14 & -256;
}

// Address range: 0x10007090 - 0x100070a3
int32_t function_10007090(int32_t a1) {
    // 0x10007090
    g1 = a1;
    return function_1000bbe0(a1, g2);
}

// Address range: 0x100070b0 - 0x10007141
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_100070b0(int32_t a1, int32_t a2, char a3, int32_t a4, int32_t a5, char a6) {
    char v1 = a6; // bp+24
    char v2 = a3; // bp+12
    int32_t v3; // 0x100070c5
    if (a3 == 0) {
        v3 = 1;
    } else {
        v3 = 0;
    }
    int32_t v4; // 0x100070d4
    if (a6 != 0) {
        // 0x100070c5
        v4 = v3 | 2;
    } else {
        v4 = v3;
    }
    // 0x100070c8
    g4 = a1;
    int32_t v5; // ebp
    int32_t v6; // ebx
    int32_t v7; // edi
    int32_t v8; // esi
    int32_t result = Plat_CreateWindow(a1, a2, a4, a5, v4, v7, v8, v6, v5); // 0x100070dc
    if (result == 0) {
        // 0x100070eb
        return result;
    }
    // 0x100070f2
    Plat_GetDesktopResolution(&v2, &v1);
    int32_t v9 = (int32_t)v2 - a4; // 0x10007103
    int32_t v10 = (int32_t)v1 - a5; // 0x1000710d
    int32_t v11 = v10 - (v10 >> 31); // 0x10007110
    int32_t v12 = (v9 - (v9 >> 31)) / 2; // 0x10007114
    int32_t v13 = v12 < 0 ? 0 : v12; // 0x1000711a
    g4 = v13;
    v2 = v13;
    int32_t v14 = v11 < -1 ? 0 : v11 / 2; // 0x10007127
    v1 = v14;
    Plat_SetWindowPos(result, v13, v14);
    return result;
}

// Address range: 0x10007150 - 0x10007154
int32_t function_10007150(void) {
    // 0x10007150
    return *(int32_t *)(g4 + 96);
}

// Address range: 0x10007160 - 0x10007173
int32_t function_10007160(int32_t result, int32_t a2) {
    // 0x10007160
    *(int32_t *)(g4 + 100) = result;
    *(int32_t *)(g4 + 92) = a2;
    return result;
}

// Address range: 0x10007180 - 0x10007199
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10007180(int32_t a1) {
    int32_t v1 = *(int32_t *)(g4 + 100); // 0x10007183
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 112);
}

// Address range: 0x100071a0 - 0x10007254
int32_t function_100071a0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x100071a5
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x100071a7
    int32_t result; // eax
    int32_t v4; // 0x100071fd
    int32_t v5; // 0x1000724e
    int32_t * v6; // 0x100071b2
    int32_t v7; // 0x100071b8
    int32_t v8; // 0x100071d7
    if (v3 < 0) {
        v5 = &v1;
        goto lab_0x1000724e;
    } else {
        // 0x100071b2
        v6 = (int32_t *)(v2 + 4);
        int32_t v9 = *v6; // 0x100071b2
        result = v9;
        v7 = v9 + a1;
        g4 = v7;
        if (v3 == 0) {
            int32_t v10;
            if (v9 == 0) {
                // 0x100071ce
                result = 1;
                v10 = 1;
            } else {
                v10 = v9;
            }
            if (v10 < v7) {
                v8 = 2 * v10;
                while (v8 < v7) {
                    // 0x100071d7
                    v8 *= 2;
                }
                goto lab_0x100071dd;
            } else {
                v4 = v10;
                goto lab_0x100071fb;
            }
        } else {
            int32_t v11 = v7 - 1; // 0x100071be
            int32_t v12 = ((int32_t)((0x100000000 * (int64_t)(v11 >> 31) | (int64_t)v11) / (int64_t)v3) + 1) * v3; // 0x100071c5
            v8 = v12;
            goto lab_0x100071dd;
        }
    }
  lab_0x1000724e:
    // 0x1000724e
    g5 = *(int32_t *)v5;
    g7 = *(int32_t *)(v5 + 4);
    g2 = *(int32_t *)(v5 + 8);
    return g1;
  lab_0x100071fb:
    // 0x100071fb
    *v6 = v4;
    if (v7 != 0) {
        int32_t v13 = *(int32_t *)0x100221e8; // 0x10007204
        g4 = v13;
        g4 = *(int32_t *)v13;
        int32_t v14 = g3; // bp-16
        g3 = v7;
        *(int32_t *)v2 = result;
        g5 = 56 * result;
        g7 = v14;
        g2 = v1;
        return result;
    }
    int32_t v15 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000723c
    g4 = v15;
    int32_t v16 = *(int32_t *)v15; // 0x1000723e
    g1 = v16;
    *(int32_t *)v2 = v16;
    v5 = g8;
    goto lab_0x1000724e;
  lab_0x100071dd:
    // 0x100071dd
    result = v8;
    int32_t v17; // 0x100071f51
    if (v8 < v7) {
        if (v8 != 0) {
            v17 = v8;
            goto lab_0x100071f0;
        } else {
            if (v7 > -1) {
                v17 = v8;
                goto lab_0x100071f0;
            } else {
                // 0x100071ea
                result = -1;
                v4 = -1;
                goto lab_0x100071fb;
            }
        }
    } else {
        v4 = v8;
        goto lab_0x100071fb;
    }
  lab_0x100071f0:;
    int32_t v18; // 0x100071f5
    while (true) {
        int32_t v19 = v17 + v7; // 0x100071f0
        v18 = (v19 - (v19 >> 31)) / 2;
        if (v18 >= v7) {
            // break -> 0x100071fb
            break;
        }
        v17 = v18;
    }
    // 0x100071fb
    result = v18;
    v4 = v18;
    goto lab_0x100071fb;
}

// Address range: 0x10007260 - 0x100072f3
int32_t function_10007260(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x10007265
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x10007267
    int32_t v4; // eax
    int32_t v5; // 0x100072bd
    int32_t v6; // 0x100072ed
    int32_t * v7; // 0x1000726e
    int32_t v8; // 0x10007274
    int32_t v9; // 0x10007293
    if (v3 < 0) {
        v6 = &v1;
        goto lab_0x100072ed;
    } else {
        // 0x1000726e
        v7 = (int32_t *)(v2 + 4);
        int32_t v10 = *v7; // 0x1000726e
        v4 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v3 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x1000728a
                v4 = 3;
                v11 = 3;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x10007293
                    v9 *= 2;
                }
                goto lab_0x10007299;
            } else {
                v5 = v11;
                goto lab_0x100072bb;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x1000727a
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v3) + 1) * v3; // 0x10007281
            v9 = v13;
            goto lab_0x10007299;
        }
    }
  lab_0x100072ed:
    // 0x100072ed
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x100072bb:
    // 0x100072bb
    *v7 = v5;
    int32_t v14 = *(int32_t *)0x100221e8; // 0x100072c0
    g4 = v14;
    int32_t v15 = *(int32_t *)v14; // 0x100072c6
    g4 = v15;
    int32_t result = 12 * v4; // 0x100072cd
    if (v8 != 0) {
        // 0x100072d4
        *(int32_t *)v2 = result;
        g5 = v8;
        g7 = result;
        g2 = v1;
        return result;
    }
    int32_t v16 = *(int32_t *)(*(int32_t *)v15 + 4); // 0x100072e6
    g1 = v16;
    *(int32_t *)v2 = v16;
    v6 = g8;
    goto lab_0x100072ed;
  lab_0x10007299:
    // 0x10007299
    v4 = v9;
    int32_t v17; // 0x100072b51
    if (v9 < v8) {
        if (v9 != 0) {
            v17 = v9;
            goto lab_0x100072b0;
        } else {
            if (v8 > -1) {
                v17 = v9;
                goto lab_0x100072b0;
            } else {
                // 0x100072a6
                v4 = -1;
                v5 = -1;
                goto lab_0x100072bb;
            }
        }
    } else {
        v5 = v9;
        goto lab_0x100072bb;
    }
  lab_0x100072b0:;
    int32_t v18; // 0x100072b5
    while (true) {
        int32_t v19 = v17 + v8; // 0x100072b0
        v18 = (v19 - (v19 >> 31)) / 2;
        if (v18 >= v8) {
            // break -> 0x100072bb
            break;
        }
        v17 = v18;
    }
    // 0x100072bb
    v4 = v18;
    v5 = v18;
    goto lab_0x100072bb;
}

// Address range: 0x10007300 - 0x100073a2
int32_t function_10007300(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = &v1; // 0x10007304
    int32_t v3 = g4; // 0x10007305
    int32_t v4 = *(int32_t *)(v3 + 8); // 0x10007307
    int32_t v5; // 0x10007370
    int32_t v6; // 0x1000739c
    int32_t * v7; // 0x10007312
    int32_t v8; // 0x10007318
    int32_t v9; // 0x10007337
    if (v4 < 0) {
        v6 = v2;
        goto lab_0x1000739c;
    } else {
        // 0x10007312
        v7 = (int32_t *)(v3 + 4);
        int32_t v10 = *v7; // 0x10007312
        g1 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v4 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x1000732e
                g1 = 2;
                v11 = 2;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x10007337
                    v9 *= 2;
                }
                // 0x1000733d
                g1 = v9;
            } else {
                v9 = v11;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x1000731e
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v4) + 1) * v4; // 0x10007325
            g1 = v13;
            v9 = v13;
        }
        if ((v9 & 0xffff) < v8) {
            if ((int16_t)v9 != 0) {
                goto lab_0x10007354;
            } else {
                if (v8 > 0xffff) {
                    goto lab_0x10007354;
                } else {
                    int32_t v14 = v9 - 1; // 0x10007351
                    g1 = v14;
                    v5 = v14;
                    goto lab_0x1000736e;
                }
            }
        } else {
            v5 = v9;
            goto lab_0x1000736e;
        }
    }
  lab_0x1000739c:
    // 0x1000739c
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x1000736e:
    // 0x1000736e
    *v7 = v5;
    int32_t v15 = *(int32_t *)0x100221e8; // 0x10007373
    g4 = v15;
    int32_t v16 = *(int32_t *)v15; // 0x10007379
    g4 = v16;
    int32_t result = 16 * g1; // 0x1000737b
    if (v8 != 0) {
        // 0x10007383
        *(int32_t *)v3 = result;
        g5 = v8;
        g7 = result;
        g2 = v1;
        return result;
    }
    int32_t v17 = *(int32_t *)(*(int32_t *)v16 + 4); // 0x10007395
    g1 = v17;
    *(int32_t *)v3 = v17;
    v6 = g8;
    goto lab_0x1000739c;
  lab_0x10007354:
    if ((v8 & 0xffff) != v8) {
        v6 = v2;
        goto lab_0x1000739c;
    } else {
        int32_t v18 = v9 + v8; // 0x10007360
        int32_t v19 = (v18 - (v18 >> 31)) / 2; // 0x10007365
        while ((v19 & 0xffff) < v8) {
            // 0x10007360
            v18 = v19 + v8;
            v19 = (v18 - (v18 >> 31)) / 2;
        }
        // 0x1000736e
        g1 = v19;
        v5 = v19;
        goto lab_0x1000736e;
    }
}

// Address range: 0x100073b0 - 0x10007498
int32_t function_100073b0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, char a8, int32_t a9) {
    int32_t v1 = (int32_t)a2;
    int32_t v2 = g4; // 0x100073b7
    g4 = v1;
    int32_t v3 = (int32_t)*(int16_t *)(v2 + 16); // edi
    *(int16_t *)a2 = -1;
    *(char *)(int32_t)a3 = 0;
    int32_t v4 = v3; // 0x100073cc
    int32_t result = 0xffff; // 0x100073cc
    int32_t v5; // 0x10007492
    if ((int16_t)v4 == (int16_t)result) {
        v5 = g8;
    } else {
        int32_t v6; // 0x100074958
        while (true) {
            // 0x100073d6
            g4 = v1;
            *(int16_t *)a2 = (int16_t)v4;
            int32_t v7 = 16 * (v4 & 0xffff); // 0x100073e4
            *(int32_t *)(g8 - 4) = (v7 | 8) + *(int32_t *)(v2 + 4);
            *(int32_t *)(g8 - 8) = a1;
            int32_t v8; // 0x1000747f
            if ((char)a1 == 0) {
                // 0x10007442
                *(char *)a3 = 0;
                char v9 = g99; // 0x10007445
                if ((v9 & 1) == 0) {
                    // 0x1000744e
                    g99 = v9 | 1;
                    g95 = (int16_t *)-1;
                    g97 = -1;
                }
                // 0x10007469
                g4 = 0xffff;
                int32_t v10;
                if ((int16_t)v3 != -1) {
                    // 0x10007473
                    v10 = v7 + *(int32_t *)(v2 + 4);
                } else {
                    v10 = (int32_t)&g95;
                }
                // 0x1000747f
                v8 = (int32_t)*(int16_t *)(v10 + 2);
                v3 = v8;
                v6 = v10;
            } else {
                // 0x100073fc
                *(char *)a3 = 1;
                char v11 = g99; // 0x100073ff
                if ((v11 & 1) == 0) {
                    // 0x10007408
                    g99 = v11 | 1;
                    g95 = (int16_t *)-1;
                    g97 = -1;
                }
                // 0x10007423
                g4 = 0xffff;
                if ((int16_t)v3 == -1) {
                    int32_t v12 = (int32_t)*(int16_t *)&g95; // 0x1000743d
                    v3 = v12;
                    v6 = (int32_t)&g95;
                    v8 = v12;
                } else {
                    int32_t v13 = v7 + *(int32_t *)(v2 + 4); // 0x10007430
                    int32_t v14 = (int32_t)*(int16_t *)v13; // 0x10007430
                    v3 = v14;
                    v6 = v13;
                    v8 = v14;
                }
            }
            // 0x10007483
            if (v8 == 0xffff) {
                // break -> 0x10007491
                break;
            }
            v4 = v8;
        }
        // 0x10007491
        g7 = *(int32_t *)g8;
        result = v6;
        v5 = g8 + 4;
    }
    // 0x10007492
    g5 = *(int32_t *)v5;
    g3 = *(int32_t *)(v5 + 4);
    g2 = *(int32_t *)(v5 + 8);
    return result;
}

// Address range: 0x100074a0 - 0x1000759f
int32_t function_100074a0(void) {
    int32_t v1 = g4; // 0x100074a3
    int32_t v2 = g7; // 0x100074a4
    g7 = v1;
    int16_t * v3 = (int16_t *)(v1 + 20); // 0x100074a7
    uint16_t v4 = *v3; // 0x100074a7
    int32_t result = v4; // 0x100074a7
    g4 = result;
    if (v4 != -1) {
        int32_t v5 = *(int32_t *)(v1 + 4); // 0x10007587
        int32_t v6 = 2 * result; // 0x1000758c
        g4 = v6;
        uint16_t v7 = *(int16_t *)(v5 + (16 * result | 2)); // 0x1000758e
        g4 = (int32_t)v7 | v6 & 0x10000;
        *v3 = v7;
        *(int32_t *)(g7 + 24) = v5;
        g7 = v2;
        return result;
    }
    int16_t * v8 = (int16_t *)(v1 + 22); // 0x100074b9
    int32_t v9 = (int32_t)*v8; // 0x100074b9
    g4 = v9;
    int32_t * v10 = (int32_t *)(v1 + 8); // 0x100074c1
    int32_t v11 = *v10; // 0x100074c1
    g1 = v11;
    int32_t v12; // 0x100074cc
    int32_t v13; // 0x10007507
    if (v9 < v11) {
        int32_t v14 = (int32_t)*v8; // 0x100074c8
        g4 = v14;
        v12 = v14 + 1;
        if ((v12 & 0xffff) < v11) {
            // 0x100074da
            g4 = v12;
            v13 = v11;
        } else {
            // 0x100074dd
            g4 = 0xffff;
            v13 = v11;
            v12 = 0xffff;
        }
    } else {
        int32_t v15 = *v10; // 0x100074e4
        g1 = v15;
        int32_t v16 = v15 >= 0 == (v15 != 0) ? 0 : 0xffff; // 0x100074ef
        g4 = v16;
        v13 = v15;
        v12 = v16;
    }
    int32_t v17 = g5; // 0x100074fc
    int32_t v18 = v12 & 0xffff; // 0x100074fd
    int32_t v19 = v17 & -0x10000 | v18; // 0x100074fd
    g5 = v19;
    g4 = v18;
    int32_t v20; // 0x10007577
    int32_t v21; // 0x10007577
    if (v18 >= v13) {
        // 0x1000750b
        g4 = v1 + 4;
        function_10007300(1, v17, v2, v1, 0x10000 * v12 / 0x10000, g2);
        int16_t * v22 = (int16_t *)(g7 + 22); // 0x10007515
        int32_t v23 = (int32_t)*v22; // 0x10007515
        g4 = v23;
        int32_t * v24 = (int32_t *)(g7 + 8); // 0x1000751d
        int32_t v25 = *v24; // 0x1000751d
        int32_t v26; // 0x10007528
        int32_t v27; // 0x10007562
        if (v23 < v25) {
            int32_t v28 = (int32_t)*v22; // 0x10007524
            g4 = v28;
            v26 = v28 + 1;
            if ((v26 & 0xffff) < v25) {
                // 0x10007536
                g4 = v26;
                v27 = v25;
            } else {
                // 0x10007539
                g4 = 0xffff;
                v27 = v25;
                v26 = 0xffff;
            }
        } else {
            int32_t v29 = *v24; // 0x10007540
            int32_t v30 = v29 >= 0 == (v29 != 0) ? 0 : 0xffff; // 0x1000754b
            g4 = v30;
            v27 = v29;
            v26 = v30;
        }
        int32_t v31 = v26 & 0xffff; // 0x10007558
        int32_t v32 = g5 & -0x10000 | v31; // 0x10007558
        g5 = v32;
        g4 = v31;
        if (v31 >= v27) {
            // 0x10007566
            Error();
            v20 = g5;
            v21 = g7;
        } else {
            v20 = v32;
            v21 = g7;
        }
    } else {
        v20 = v19;
        v21 = v1;
    }
    // 0x10007574
    *(int16_t *)(v21 + 22) = (int16_t)v20;
    *(int32_t *)(g7 + 24) = *(int32_t *)(v21 + 4);
    g7 = *(int32_t *)g8;
    return g5 & 0xffff;
}

// Address range: 0x100075a0 - 0x1000768b
int32_t function_100075a0(int32_t a1) {
    int32_t v1 = g4; // 0x100075aa
    int32_t v2 = function_10003620(a1) & 0xffff; // 0x100075b1
    g4 = v1;
    int32_t v3 = function_100035c0(v2); // 0x100075b7
    int32_t v4 = *(int32_t *)(v1 + 4); // 0x100075bc
    int32_t v5 = 16 * (a1 & 0xffff); // 0x100075c5
    *(int16_t *)((v5 | 2) + v4) = (int16_t)v3;
    g4 = v1;
    int32_t v6 = function_100035c0(v2); // 0x100075d3
    g4 = 0xffff;
    if ((int16_t)v6 != -1) {
        // 0x100075e2
        g4 = v1;
        int32_t v7 = function_100035c0(v2); // 0x100075e5
        int32_t v8 = *(int32_t *)(v1 + 4); // 0x100075ed
        *(int16_t *)(v8 + (16 * (v7 & 0xffff) | 4)) = (int16_t)a1;
    }
    // 0x100075f7
    g4 = 0xffff;
    if ((int16_t)v2 != -1) {
        // 0x10007601
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v9 = function_10003560((int32_t)&g169); // 0x10007604
        int32_t v10 = *(int32_t *)(v1 + 4); // 0x10007609
        g4 = v10;
        *(int16_t *)((16 * v2 | 4) + v10) = (int16_t)v9;
    }
    int16_t * v11 = (int16_t *)(v1 + 16); // 0x10007618
    if ((int16_t)a1 == *v11) {
        // 0x10007660
        *v11 = (int16_t)v2;
    } else {
        // 0x1000761e
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        *(int32_t *)(g8 - 4) = function_10003560((int32_t)&g169) & 0xffff;
        g4 = v1;
        int32_t v12 = function_100035c0((int32_t)&g169); // 0x1000762c
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v13 = function_10003560((int32_t)&g169); // 0x1000764c
        if ((int16_t)v12 != (int16_t)a1) {
            int32_t v14 = *(int32_t *)(v1 + 4); // 0x10007654
            *(int16_t *)(v14 + (16 * (v13 & 0xffff) | 2)) = (int16_t)v2;
        } else {
            int32_t v15 = *(int32_t *)(v1 + 4); // 0x1000763e
            g4 = v15;
            *(int16_t *)(v15 + 16 * (v13 & 0xffff)) = (int16_t)v2;
        }
    }
    int32_t v16 = *(int32_t *)(v1 + 4); // 0x10007664
    g6 = v16;
    g4 = 2 * v2;
    int32_t result = 0xffff; // eax
    *(int16_t *)(16 * v2 + v16) = (int16_t)a1;
    if ((int16_t)a1 != (int16_t)result) {
        int32_t v17 = *(int32_t *)(v1 + 4); // 0x10007679
        g4 = v17;
        g6 = v5;
        *(int16_t *)(v5 + 4 + v17) = (int16_t)v2;
    }
    // 0x10007684
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x10007690 - 0x1000777b
int32_t function_10007690(int32_t a1) {
    int32_t v1 = g4; // 0x1000769a
    int32_t v2 = function_100035c0(a1) & 0xffff; // 0x100076a1
    g4 = v1;
    int32_t v3 = function_10003620(v2); // 0x100076a7
    int32_t v4 = *(int32_t *)(v1 + 4); // 0x100076ac
    int32_t v5 = 16 * (a1 & 0xffff); // 0x100076b5
    *(int16_t *)(v5 + v4) = (int16_t)v3;
    g4 = v1;
    int32_t v6 = function_10003620(v2); // 0x100076c2
    g4 = 0xffff;
    if ((int16_t)v6 != -1) {
        // 0x100076d1
        g4 = v1;
        int32_t v7 = function_10003620(v2); // 0x100076d4
        int32_t v8 = *(int32_t *)(v1 + 4); // 0x100076dc
        *(int16_t *)(v8 + (16 * (v7 & 0xffff) | 4)) = (int16_t)a1;
    }
    // 0x100076e6
    g4 = 0xffff;
    if ((int16_t)v2 != -1) {
        // 0x100076f0
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v9 = function_10003560((int32_t)&g169); // 0x100076f3
        int32_t v10 = *(int32_t *)(v1 + 4); // 0x100076f8
        g4 = v10;
        *(int16_t *)((16 * v2 | 4) + v10) = (int16_t)v9;
    }
    int16_t * v11 = (int16_t *)(v1 + 16); // 0x10007707
    if ((int16_t)a1 == *v11) {
        // 0x1000774f
        *v11 = (int16_t)v2;
    } else {
        // 0x1000770d
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        *(int32_t *)(g8 - 4) = function_10003560((int32_t)&g169) & 0xffff;
        g4 = v1;
        int32_t v12 = function_10003620((int32_t)&g169); // 0x1000771b
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v13 = function_10003560((int32_t)&g169); // 0x1000773c
        if ((int16_t)v12 != (int16_t)a1) {
            int32_t v14 = *(int32_t *)(v1 + 4); // 0x10007744
            *(int16_t *)(v14 + 16 * (v13 & 0xffff)) = (int16_t)v2;
        } else {
            int32_t v15 = *(int32_t *)(v1 + 4); // 0x1000772d
            g4 = v15;
            *(int16_t *)(v15 + (16 * (v13 & 0xffff) | 2)) = (int16_t)v2;
        }
    }
    int32_t v16 = *(int32_t *)(v1 + 4); // 0x10007753
    g6 = v16;
    g4 = 2 * v2;
    int32_t result = 0xffff; // eax
    *(int16_t *)((16 * v2 | 2) + v16) = (int16_t)a1;
    if ((int16_t)a1 != (int16_t)result) {
        int32_t v17 = *(int32_t *)(v1 + 4); // 0x10007769
        g4 = v17;
        g6 = v5;
        *(int16_t *)(v5 + 4 + v17) = (int16_t)v2;
    }
    // 0x10007774
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x10007780 - 0x100077d1
int32_t function_10007780(void) {
    int32_t v1 = g4; // 0x10007782
    int32_t v2 = *(int32_t *)(v1 + 16) - 1; // 0x10007787
    int32_t v3 = v2; // edi
    if (v2 >= 0) {
        int32_t v4 = g7; // bp-12
        int32_t v5 = 12 * v2; // 0x10007790
        int32_t v6 = &v4; // 0x1000779c
        int32_t v7 = v1; // 0x10007792
        int32_t v8; // 0x100077ba
        while (true) {
            int32_t v9 = *(int32_t *)(*(int32_t *)(v7 + 4) + v5); // 0x10007795
            int32_t v10; // 0x100077a5
            int32_t v11; // 0x100077a8
            int32_t v12; // 0x100077ba
            if (v9 != 0) {
                // 0x1000779c
                *(int32_t *)(v6 - 4) = v9;
                function_1000bd90((int32_t)&g169);
                v11 = v5;
                v10 = v1;
                v12 = g8 + 4;
            } else {
                v11 = v5;
                v10 = v7;
                v12 = v6;
            }
            int32_t v13 = *(int32_t *)(v10 + 4); // 0x100077a5
            g4 = v13;
            int32_t v14 = *(int32_t *)(v11 + 8 + v13); // 0x100077a8
            g1 = v14;
            int32_t v15; // 0x100077c0
            if (v14 != 0) {
                int32_t v16 = *(int32_t *)*(int32_t *)0x100221e8; // 0x100077b6
                g4 = v16;
                v8 = v12 - 4;
                *(int32_t *)v8 = v14;
                g1 = *(int32_t *)(*(int32_t *)v16 + 20);
                v15 = v5;
            } else {
                v15 = v11;
                v8 = v12;
            }
            int32_t v17 = v3 - 1; // 0x100077c3
            v3 = v17;
            if (v17 < 0) {
                // break -> 0x100077c6
                break;
            }
            // 0x100077c0
            v6 = v8;
            v5 = v15 - 12;
            v7 = v1;
        }
        // 0x100077c6
        g7 = *(int32_t *)v8;
    }
    // 0x100077c7
    *(int32_t *)(v1 + 16) = 0;
    g3 = *(int32_t *)g8;
    return g1;
}

// Address range: 0x100077e0 - 0x10007961
int32_t function_100077e0(int32_t a1) {
    // 0x100077e0
    g7 = a1;
    int32_t v1; // bp-10
    int32_t v2 = &v1; // 0x10007903
    uint16_t v3 = *(int16_t *)(a1 + 38); // 0x100077f043
    g4 = 0;
    int32_t result; // 0x1000795e
    if (v3 == 0) {
        // 0x100077e0
        result = g1;
    } else {
        int32_t v4 = v3; // 0x100077f051
        while (true) {
            int32_t v5 = a1; // 0x1000781c
            char v6 = 1;
            int32_t v7 = 0; // 0x10007942
            char v8;
            int32_t v9; // 0x1000795e10
            int32_t v10;
            while (true) {
                int32_t v11 = v7 & 0xffff; // 0x10007810
                int32_t v12 = 56 * v11; // 0x10007822
                g3 = v12;
                uint16_t v13 = *(int16_t *)(v12 + 18 + *(int32_t *)v5); // 0x10007824
                int32_t v14 = v13; // 0x10007824
                g5 = 0;
                if (v13 != 0) {
                    int32_t v15 = v7; // 0x10007840
                    char v16 = v6;
                    int32_t v17 = v14;
                    int32_t v18 = 0;
                    char v19;
                    int32_t v20; // 0x1000795e11
                    while (true) {
                        int32_t v21 = g8 - 4; // 0x10007840
                        *(int32_t *)v21 = v15;
                        g1 = v21;
                        *(int16_t *)v21 = (int16_t)g5;
                        g4 = g3 + *(int32_t *)g7;
                        int32_t v22 = 0x10000 * v18 / 0x10000; // 0x1000784a
                        *(int32_t *)(g8 - 4) = function_1000e5b0(v22);
                        int32_t v23; // bp-6
                        *(int32_t *)(g8 - 8) = (int32_t)&v23;
                        g4 = g7 + 20;
                        int32_t v24 = function_1000ed60((int32_t)&g169, (int32_t)&g169); // 0x10007857
                        uint16_t v25 = *(int16_t *)v24; // 0x1000785c
                        int32_t v26 = v25; // 0x1000785c
                        int32_t v27;
                        if (v25 != -1) {
                            int32_t v28 = *(int32_t *)g7; // 0x1000786a
                            g4 = v26;
                            int32_t v29 = 56 * v26; // 0x1000787b
                            g1 = v29;
                            uint16_t v30 = *(int16_t *)(v29 + 18 + v28); // 0x1000787d
                            int32_t v31 = v30; // 0x1000787d
                            g4 = v31;
                            if (v30 != 0) {
                                int32_t v32 = v31; // 0x100078a7
                                char v33 = v16;
                                int32_t v34 = v17;
                                int32_t v35 = 0;
                                char v36;
                                int32_t v37; // 0x1000791f
                                int32_t v38; // 0x10007914
                                while (true) {
                                    int32_t v39 = g8 - 4; // 0x100078a7
                                    *(int32_t *)v39 = v32;
                                    g4 = v39;
                                    *(int16_t *)v39 = (int16_t)(v35 & 0xffff | v28 & -0x10000);
                                    g4 = g1 + *(int32_t *)g7;
                                    int32_t v40 = function_1000e5b0(v35); // 0x100078b1
                                    g4 = *(int32_t *)g7;
                                    g5 = v40;
                                    *(int32_t *)(g8 - 4) = v40;
                                    g4 += g3;
                                    int32_t v41; // bp-8
                                    *(int32_t *)(g8 - 8) = (int32_t)&v41;
                                    int32_t v42 = function_1000ed60((int32_t)&g169, (int32_t)&g169); // 0x100078c1
                                    g4 = 0xffff;
                                    if (*(int16_t *)v42 == -1) {
                                        // 0x100078d0
                                        g1 = v11;
                                        int32_t v43 = g8 - 4; // 0x100078d4
                                        *(int32_t *)v43 = 0xffff;
                                        *(int16_t *)v43 = (int16_t)g1;
                                        g4 = g7 + 20;
                                        *(int32_t *)(g8 - 4) = function_1000e5b0((int32_t)&g169);
                                        *(int32_t *)(g8 - 8) = g5;
                                        int32_t v44 = function_100094b0(&g169, (char *)&g169); // 0x100078e4
                                        *(int32_t *)(g8 + 4) = g5;
                                        if (v44 != 0) {
                                            // 0x10007901
                                            g4 = *(int32_t *)g7;
                                            g6 = v2;
                                            *(int32_t *)g8 = v2;
                                            g4 += g3;
                                            function_1000f030(0, (int32_t)&g169);
                                            v38 = (int32_t)*(int16_t *)(*(int32_t *)g7 + 18 + g3);
                                            g4 = v38;
                                            v36 = 0;
                                        } else {
                                            // 0x100078f1
                                            *(int32_t *)g8 = (int32_t)"Encountered a circular dependency with library %s!\n";
                                            Warning();
                                            v36 = v33;
                                            v38 = v34;
                                        }
                                    } else {
                                        v36 = v33;
                                        v38 = v34;
                                    }
                                    // 0x1000791c
                                    v37 = v35 + 1;
                                    if (v37 >= v31) {
                                        // break -> 0x1000792c
                                        break;
                                    }
                                    // 0x100078a0
                                    g1 = v29;
                                    v32 = g4;
                                    v28 = g6;
                                    v33 = v36;
                                    v34 = v38;
                                    v35 = v37;
                                }
                                // 0x1000792c
                                g5 = v22;
                                v20 = v37;
                                v19 = v36;
                                v27 = v38;
                            } else {
                                v20 = v29;
                                v19 = v16;
                                v27 = v17;
                            }
                        } else {
                            v20 = v26;
                            v19 = v16;
                            v27 = v17;
                        }
                        int32_t v45 = g5 + 1; // 0x1000792f
                        g5 = v45;
                        if ((int16_t)v45 >= (int16_t)v27) {
                            // break -> 0x1000793c
                            break;
                        }
                        // 0x1000792f
                        v15 = g4;
                        v16 = v19;
                        v17 = v27;
                        v18 = v45;
                    }
                    // 0x1000793c
                    g4 = v7;
                    v10 = v20;
                    v9 = v20;
                    v8 = v19;
                } else {
                    v10 = v14;
                    v9 = 0;
                    v8 = v6;
                }
                int32_t v46 = v7 + 1; // 0x10007942
                g4 = v46;
                if (v46 >= v4) {
                    // break -> 0x1000794e
                    break;
                }
                // 0x10007942
                v5 = g7;
                v6 = v8;
                v7 = v46;
            }
            if (v8 != 0) {
                result = v9;
                // break -> 0x10007958
                break;
            }
            int32_t v47 = g7;
            uint16_t v48 = *(int16_t *)(v47 + 38); // 0x100077f0
            g4 = 0;
            if (v48 == 0) {
                result = v10;
                // break -> 0x10007958
                break;
            }
            v4 = v48;
            a1 = v47;
        }
    }
    // 0x10007958
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x10007970 - 0x100079d5
int32_t function_10007970(void) {
    int32_t v1 = g7; // 0x10007970
    int32_t v2 = g4; // 0x10007972
    g5 = v2;
    int32_t v3 = *(int32_t *)(v2 + 12) - 1; // 0x10007977
    g7 = v3;
    int32_t v4; // 0x100079a2
    if (v3 >= 0) {
        int32_t v5 = 56 * v3; // 0x10007988
        g3 = v5;
        g4 = v2 + v5;
        g1 = function_1000ef30();
        int32_t v6 = g3 - 56; // 0x10007999
        g3 = v6;
        int32_t v7 = g7 - 1; // 0x1000799c
        g7 = v7;
        while (v7 >= 0) {
            // 0x10007990
            g4 += v6;
            g1 = function_1000ef30();
            v6 = g3 - 56;
            g3 = v6;
            v7 = g7 - 1;
            g7 = v7;
        }
        // 0x1000799f
        v4 = g5;
    } else {
        v4 = v2;
    }
    int32_t v8 = 0; // esi
    *(int32_t *)(v4 + 12) = 0;
    int32_t v9 = g4; // 0x100079cd
    if (*(int32_t *)(g5 + 8) < v8) {
        // 0x100079cd
        *(int32_t *)(g5 + 16) = v9;
        g7 = v1;
        return g1;
    }
    int32_t result = v9; // eax
    if (v9 != v8) {
        int32_t v10 = *(int32_t *)0x100221e8; // 0x100079b0
        g4 = v10;
        int32_t v11 = *(int32_t *)v10; // 0x100079b6
        g4 = v11;
        result = *(int32_t *)(*(int32_t *)v11 + 20);
        *(int32_t *)g5 = v8;
    }
    // 0x100079c2
    *(int32_t *)(g5 + 4) = v8;
    *(int32_t *)(g5 + 16) = g4;
    g7 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x100079e0 - 0x10007ad6
int32_t function_100079e0(int32_t * a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // 0x100079e0
    int32_t v3 = g3; // 0x100079e3
    int32_t v4 = g5; // 0x100079e4
    int32_t v5 = g4; // 0x100079e5
    int32_t v6 = v5; // edi
    uint16_t v7 = *(int16_t *)(v5 + 16); // 0x100079e7
    int32_t result = v7; // 0x100079e7
    int32_t v8 = result; // ebx
    if (v7 == -1) {
        // 0x10007acd
        g5 = v4;
        g3 = v3;
        g2 = v2;
        return result;
    }
    int32_t v9 = g7; // bp-16
    int32_t v10 = &v9; // 0x100079f9
    int32_t * v11 = (int32_t *)(v10 - 4); // 0x10007a10
    int32_t * v12 = (int32_t *)(v10 - 8); // 0x10007a13
    int32_t v13; // eax
    int32_t v14; // 0x10007ac5
    int32_t v15; // 0x10007ac521
    while (true) {
        int32_t v16 = *(int32_t *)(v5 + 4); // 0x10007a00
        g4 = v16;
        int32_t v17 = 16 * result & 0xffff0; // 0x10007a09
        *v11 = (v17 | 8) + v16;
        *v12 = v1;
        int32_t v18; // 0x10007ab1
        if ((char)g4 == 0) {
            // 0x10007a60
            g4 = v1;
            v13 = *(int32_t *)(v6 + 4) + 8 + v17;
            *v11 = v1;
            *v12 = v13;
            if ((char)v13 == 0) {
                // break -> 0x10007a60
                break;
            }
            char v19 = g99; // 0x10007a77
            if ((v19 & 1) == 0) {
                // 0x10007a80
                g99 = v19 | 1;
                g95 = (int16_t *)-1;
                g97 = -1;
            }
            // 0x10007a9b
            g4 = 0xffff;
            int32_t v20;
            if ((int16_t)v8 != -1) {
                // 0x10007aa5
                v20 = v17 + *(int32_t *)(v6 + 4);
            } else {
                v20 = (int32_t)&g95;
            }
            // 0x10007ab1
            v18 = (int32_t)*(int16_t *)(v20 + 2);
            v8 = v18;
            v15 = v20;
        } else {
            char v21 = g99; // 0x10007a1d
            if ((v21 & 1) == 0) {
                // 0x10007a26
                g99 = v21 | 1;
                g95 = (int16_t *)-1;
                g97 = -1;
            }
            // 0x10007a41
            if ((int16_t)v8 == -1) {
                int32_t v22 = (int32_t)*(int16_t *)&g95; // 0x10007a5b
                v8 = v22;
                v15 = (int32_t)&g95;
                v18 = v22;
            } else {
                int32_t v23 = v17 + *(int32_t *)(v6 + 4); // 0x10007a4e
                int32_t v24 = (int32_t)*(int16_t *)v23; // 0x10007a4e
                v8 = v24;
                v15 = v23;
                v18 = v24;
            }
        }
        // 0x10007ab5
        if (v18 == 0xffff) {
            v14 = v18;
            goto lab_0x10007ac3_2;
        }
        // 0x10007ab5
        result = v18;
        v5 = v6;
    }
    // 0x10007a60
    v15 = v13;
    v14 = v8;
    goto lab_0x10007ac3_2;
  lab_0x10007ac3_2:
    // 0x10007ac3
    g7 = v9;
    g5 = *(int32_t *)(v10 + 4);
    g3 = *(int32_t *)(v10 + 8);
    g2 = *(int32_t *)(v10 + 12);
    return v14 & 0xffff | v15 & -0x10000;
}

// Address range: 0x10007ae0 - 0x10007b98
int32_t function_10007ae0(int32_t result, int32_t a2) {
    int32_t v1 = g2; // 0x10007ae0
    int32_t v2 = g7; // 0x10007ae3
    int32_t v3 = g5; // 0x10007ae4
    g5 = a2;
    int32_t v4 = g4; // 0x10007ae8
    g7 = v4;
    if (a2 == 0) {
        // 0x10007aee
        g5 = v3;
        g7 = v2;
        g2 = v1;
        return result;
    }
    int32_t v5 = *(int32_t *)(v4 + 12); // 0x10007af7
    int32_t v6 = *(int32_t *)(v4 + 4); // 0x10007afa
    g4 = v6;
    int32_t v7; // 0x10007b10
    int32_t v8; // 0x10007b10
    if (v5 + a2 > v6) {
        int32_t v9 = v5 - v6 + a2; // 0x10007b06
        g1 = v9;
        g4 = v4;
        function_100071a0(v9, v3, v2, v1);
        v8 = g5;
        v7 = g7;
    } else {
        v8 = a2;
        v7 = v4;
    }
    int32_t * v10 = (int32_t *)(v7 + 12); // 0x10007b10
    *v10 = *v10 + v8;
    int32_t v11 = *(int32_t *)(g7 + 12) - result - g5; // 0x10007b1d
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g7 + 16) = g4;
    if (v11 < 1) {
        goto lab_0x10007b62;
    } else {
        // 0x10007b27
        if (g5 < 1) {
            goto lab_0x10007b8f;
        } else {
            // 0x10007b2b
            *(int32_t *)(g8 - 4) = 56 * v11;
            *(int32_t *)(g8 - 8) = 56 * result + g4;
            int32_t v12 = g4 + 56 * (g5 + result); // 0x10007b53
            g4 = v12;
            *(int32_t *)(g8 - 12) = v12;
            _memcpy(&g169, &g169, (int32_t)&g169);
            goto lab_0x10007b62;
        }
    }
  lab_0x10007b62:;
    int32_t v13 = g5; // 0x10007b62
    if (v13 >= 1) {
        int32_t v14 = 56 * result; // 0x10007b73
        while (true) {
            int32_t v15 = g4 + v14; // 0x10007b77
            g4 = v15;
            int32_t v16; // 0x10007b8c
            if (v15 != 0) {
                // 0x10007b7b
                *(int32_t *)(g8 - 4) = 0;
                *(int32_t *)(g8 - 8) = 16;
                *(int32_t *)(g8 - 12) = 0;
                function_1000efc0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                v16 = g5;
            } else {
                v16 = v13;
            }
            int32_t v17 = v16 - 1; // 0x10007b8c
            g5 = v17;
            if (v17 == 0) {
                // break -> 0x10007b8f
                break;
            }
            v13 = v17;
            v14 += 56;
        }
    }
    goto lab_0x10007b8f;
  lab_0x10007b8f:
    // 0x10007b8f
    g3 = *(int32_t *)g8;
    g5 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x10007ba0 - 0x10008186
int32_t function_10007ba0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g4; // 0x10007ba7
    g7 = v1;
    int32_t v2; // ebx
    int32_t v3; // edx
    int32_t v4;
    int32_t v5; // 0x1000816e
    int32_t v6; // 0x1000816e43
    int32_t v7; // 0x10008094
    int32_t v8; // 0x10007cb2
    if ((int16_t)a1 != *(int16_t *)(v1 + 16)) {
        v7 = v1;
        while (true) {
          lab_0x10007bc3:;
            char v9 = g99; // 0x10007bc3
            int32_t v10 = v9; // 0x10007bc3
            int32_t v11; // 0x10007be6
            if ((v9 & 1) == 0) {
                // 0x10007bcc
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v11 = v10 | 1;
                g4 = 1;
                g99 = v11;
                *(int16_t *)&g98 = 1;
            } else {
                v11 = v10;
            }
            // 0x10007bfa
            g4 = 0xffff;
            int16_t v12 = a1; // 0x10007bff
            int32_t v13;
            if (v12 != -1) {
                int32_t v14 = 16 * a1 & 0xffff0; // 0x10007c07
                g4 = v14;
                v13 = *(int32_t *)(v7 + 4) + v14;
            } else {
                v13 = (int32_t)&g95;
            }
            // 0x10007c14
            g4 = v13;
            uint16_t v15 = *(int16_t *)(v13 + 4); // 0x10007c14
            int32_t v16 = v15; // 0x10007c14
            g4 = v16;
            int32_t v17; // 0x10007c36
            if ((v11 & 1) == 0) {
                // 0x10007c1c
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v17 = v11 | 1;
                g99 = v17;
                *(int16_t *)&g98 = 1;
            } else {
                v17 = v11;
            }
            // 0x10007c4a
            int32_t v18;
            if (v15 != -1) {
                int32_t v19 = 16 * v16; // 0x10007c54
                g4 = v19;
                v18 = *(int32_t *)(v7 + 4) + v19;
            } else {
                v18 = (int32_t)&g95;
            }
            // 0x10007c61
            g4 = v18;
            if (*(int16_t *)(v18 + 6) != 0) {
                v6 = v7;
                // break -> 0x1000816c
                break;
            }
            int32_t v20; // 0x10007c87
            if ((v17 & 1) == 0) {
                // 0x10007c70
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v20 = v17 | 1;
                g4 = 1;
                g99 = v20;
                *(int16_t *)&g98 = 1;
            } else {
                v20 = v17;
            }
            // 0x10007c9b
            g4 = 0xffff;
            int32_t v21;
            if (v12 != -1) {
                int32_t v22 = 16 * a1 & 0xffff0; // 0x10007ca5
                g4 = v22;
                v21 = *(int32_t *)(v7 + 4) + v22;
            } else {
                v21 = (int32_t)&g95;
            }
            // 0x10007cb2
            g4 = v21;
            uint16_t v23 = *(int16_t *)(v21 + 4); // 0x10007cb2
            v8 = v23;
            int32_t v24; // 0x10007cba
            if ((v20 & 1) == 0) {
                // 0x10007cba
                v24 = v20 | 1;
                g99 = v24;
                g95 = (int16_t *)-1;
                g97 = -1;
            } else {
                v24 = v20;
            }
            // 0x10007cd6
            int32_t v25;
            if (v23 != -1) {
                int32_t v26 = 16 * v8; // 0x10007ce2
                g4 = v26;
                v25 = *(int32_t *)(v7 + 4) + v26;
            } else {
                v25 = (int32_t)&g95;
            }
            // 0x10007cef
            g4 = v25;
            uint16_t v27 = *(int16_t *)(v25 + 4); // 0x10007cef
            int32_t v28 = v27; // 0x10007cef
            v2 = v28;
            int32_t v29; // 0x10007cf7
            if ((v24 & 1) == 0) {
                // 0x10007cf7
                v29 = v24 | 1;
                g99 = v29;
                g95 = (int16_t *)-1;
                g97 = -1;
            } else {
                v29 = v24;
            }
            // 0x10007d13
            g4 = 0xffff;
            int32_t v30;
            if (v23 != -1) {
                int32_t v31 = 16 * v8; // 0x10007d1c
                g4 = v31;
                v30 = *(int32_t *)(v7 + 4) + v31;
            } else {
                v30 = (int32_t)&g95;
            }
            // 0x10007d29
            g4 = v30;
            uint16_t v32 = *(int16_t *)(v30 + 4); // 0x10007d29
            int32_t v33 = v32; // 0x10007d29
            g4 = v33;
            int32_t v34; // 0x10007d46
            if ((v29 & 1) == 0) {
                // 0x10007d31
                *(int16_t *)&g95 = -1;
                g96 = -1;
                g97 = -1;
                v34 = v29 | 1;
                g99 = v34;
                *(int16_t *)&g98 = 1;
            } else {
                v34 = v29;
            }
            // 0x10007d5a
            int32_t v35;
            if (v32 != -1) {
                int32_t v36 = 16 * v33; // 0x10007d64
                g4 = v36;
                v35 = *(int32_t *)(v7 + 4) + v36;
            } else {
                v35 = (int32_t)&g95;
            }
            // 0x10007d71
            g4 = v35;
            if (*(int16_t *)v35 != v23) {
                int32_t v37; // 0x10007f5c
                if ((v34 & 1) == 0) {
                    // 0x10007f5c
                    v37 = v34 | 1;
                    g99 = v37;
                    g95 = (int16_t *)-1;
                    g97 = -1;
                } else {
                    v37 = v34;
                }
                int32_t v38;
                if (v27 != -1) {
                    int32_t v39 = 16 * v28; // 0x10007f7f
                    g4 = v39;
                    v38 = *(int32_t *)(v7 + 4) + v39;
                } else {
                    v38 = (int32_t)&g95;
                }
                // 0x10007f8c
                g4 = v38;
                uint16_t v40 = *(int16_t *)v38; // 0x10007f8c
                int32_t v41 = v40; // 0x10007f8c
                v3 = v41;
                int32_t v42; // 0x10007fad
                if ((v37 & 1) == 0) {
                    // 0x10007f93
                    *(int16_t *)&g95 = -1;
                    g96 = -1;
                    g97 = -1;
                    v42 = v37 | 1;
                    g4 = 1;
                    g99 = v42;
                    *(int16_t *)&g98 = 1;
                } else {
                    v42 = v37;
                }
                // 0x10007fc1
                g4 = 0xffff;
                int32_t v43;
                if (v40 != -1) {
                    int32_t v44 = 16 * v41; // 0x10007fcd
                    g4 = v44;
                    v43 = *(int32_t *)(v7 + 4) + v44;
                } else {
                    v43 = (int32_t)&g95;
                }
                // 0x10007fda
                g4 = v43;
                if (*(int16_t *)(v43 + 6) != 0) {
                    int32_t v45; // 0x1000801a
                    if ((v42 & 1) == 0) {
                        // 0x1000801a
                        v45 = v42 | 1;
                        g99 = v45;
                        g95 = (int16_t *)-1;
                        g97 = -1;
                    } else {
                        v45 = v42;
                    }
                    // 0x10008036
                    g4 = 0xffff;
                    int32_t v46;
                    if (v12 != -1) {
                        int32_t v47 = 16 * a1 & 0xffff0; // 0x10008046
                        g4 = v47;
                        v46 = *(int32_t *)(v7 + 4) + v47;
                    } else {
                        v46 = (int32_t)&g95;
                    }
                    // 0x10008053
                    g4 = v46;
                    uint16_t v48 = *(int16_t *)(v46 + 4); // 0x10008053
                    int32_t v49 = v48; // 0x10008053
                    g4 = v49;
                    if ((v45 & 1) == 0) {
                        // 0x1000805b
                        g99 = v45 | 1;
                        *(int16_t *)&g95 = -1;
                        g96 = -1;
                        g97 = -1;
                        *(int16_t *)&g98 = 1;
                    }
                    // 0x10008085
                    int32_t v50;
                    if (v48 != -1) {
                        // 0x1000808f
                        v50 = *(int32_t *)(v7 + 4) + 16 * v49;
                    } else {
                        v50 = (int32_t)&g95;
                    }
                    // 0x1000809e
                    int32_t v51; // 0x10008135
                    int32_t v52; // 0x10008138
                    if (*(int16_t *)v50 == v12) {
                        // 0x100080a7
                        *(int32_t *)(g8 - 4) = v8;
                        g4 = g7;
                        function_10007690(v8);
                        char v53 = g99; // 0x100080b4
                        int32_t v54 = v53; // 0x100080b4
                        g4 = v54;
                        int32_t v55; // 0x100080bf
                        if ((v53 & 1) == 0) {
                            // 0x100080bf
                            v55 = v54 | 1;
                            g4 = v55;
                            g99 = v55;
                            g95 = (int16_t *)-1;
                            g97 = -1;
                        } else {
                            v55 = v54;
                        }
                        int32_t v56 = g5; // 0x100080e1
                        int32_t v57;
                        if ((int16_t)v56 != -1) {
                            // 0x100080e6
                            v57 = *(int32_t *)(g7 + 4) + 16 * v56;
                        } else {
                            v57 = (int32_t)&g95;
                        }
                        uint16_t v58 = *(int16_t *)(v57 + 4); // 0x100080f5
                        int32_t v59 = v58; // 0x100080f5
                        if ((v55 & 1) == 0) {
                            int32_t v60 = v55 | 1; // 0x100080fe
                            g4 = v60;
                            g99 = v60;
                            g95 = (int16_t *)-1;
                            g97 = -1;
                        }
                        // 0x1000811b
                        g4 = 0xffff;
                        int32_t v61;
                        int32_t v62;
                        if (v58 == -1) {
                            // 0x1000811b
                            v62 = g7;
                            v61 = (int32_t)&g95;
                        } else {
                            int32_t v63 = g7; // 0x10008127
                            v62 = v63;
                            v61 = *(int32_t *)(v63 + 4) + 16 * v59;
                        }
                        // 0x10008131
                        v2 = (int32_t)*(int16_t *)(v61 + 4);
                        v4 = v8;
                        v52 = v59;
                        v51 = v62;
                    } else {
                        v4 = a1;
                        v52 = v8;
                        v51 = v7;
                    }
                    // 0x10008135
                    g4 = 1;
                    *(int16_t *)(*(int32_t *)(v51 + 4) + (16 * v52 | 6)) = 1;
                    *(int16_t *)((16 * (v2 & 0xffff) | 6) + *(int32_t *)(g7 + 4)) = 0;
                    *(int32_t *)(g8 - 4) = v2;
                    g4 = g7;
                    function_100075a0((int32_t)&g169);
                    goto lab_0x1000815e;
                } else {
                    goto lab_0x10007fe1;
                }
            } else {
                int32_t v64; // 0x10007d7e
                if ((v34 & 1) == 0) {
                    // 0x10007d7e
                    v64 = v34 | 1;
                    g99 = v64;
                    g95 = (int16_t *)-1;
                    g97 = -1;
                } else {
                    v64 = v34;
                }
                // 0x10007d9a
                g4 = 0xffff;
                int32_t v65;
                if (v27 != -1) {
                    int32_t v66 = 16 * v28; // 0x10007da3
                    g4 = v66;
                    v65 = *(int32_t *)(v7 + 4) + v66;
                } else {
                    v65 = (int32_t)&g95;
                }
                // 0x10007db0
                g4 = v65;
                uint16_t v67 = *(int16_t *)(v65 + 2); // 0x10007db0
                int32_t v68 = v67; // 0x10007db0
                v3 = v68;
                int32_t v69; // 0x10007dd2
                if ((v64 & 1) == 0) {
                    // 0x10007db8
                    *(int16_t *)&g95 = -1;
                    g96 = -1;
                    g97 = -1;
                    v69 = v64 | 1;
                    g4 = 1;
                    g99 = v69;
                    *(int16_t *)&g98 = 1;
                } else {
                    v69 = v64;
                }
                // 0x10007de6
                g4 = 0xffff;
                int32_t v70;
                if (v67 != -1) {
                    int32_t v71 = 16 * v68; // 0x10007df2
                    g4 = v71;
                    v70 = *(int32_t *)(v7 + 4) + v71;
                } else {
                    v70 = (int32_t)&g95;
                }
                // 0x10007dff
                g4 = v70;
                if (*(int16_t *)(v70 + 6) == 0) {
                    goto lab_0x10007fe1;
                } else {
                    int32_t v72; // 0x10007e4f
                    if ((v69 & 1) == 0) {
                        int32_t v73 = v69 | 1; // 0x10007e0e
                        g99 = v73;
                        g95 = (int16_t *)-1;
                        g97 = -1;
                        v72 = v73;
                    } else {
                        v72 = v69;
                    }
                    // 0x10007e2a
                    g4 = 0xffff;
                    int32_t v74;
                    if (v12 != -1) {
                        int32_t v75 = 16 * a1 & 0xffff0; // 0x10007e3a
                        g4 = v75;
                        v74 = *(int32_t *)(v7 + 4) + v75;
                    } else {
                        v74 = (int32_t)&g95;
                    }
                    // 0x10007e47
                    g4 = v74;
                    uint16_t v76 = *(int16_t *)(v74 + 4); // 0x10007e47
                    int32_t v77 = v76; // 0x10007e47
                    g4 = v77;
                    if ((v72 & 1) == 0) {
                        // 0x10007e4f
                        g99 = v72 | 1;
                        *(int16_t *)&g95 = -1;
                        g96 = -1;
                        g97 = -1;
                        *(int16_t *)&g98 = 1;
                    }
                    // 0x10007e79
                    int32_t v78;
                    if (v76 != -1) {
                        // 0x10007e83
                        v78 = *(int32_t *)(v7 + 4) + 16 * v77;
                    } else {
                        v78 = (int32_t)&g95;
                    }
                    // 0x10007e92
                    int32_t v79;
                    int32_t v80; // 0x10007f2a
                    int32_t v81; // 0x10007f2d
                    if (*(int16_t *)(v78 + 2) == v12) {
                        // 0x10007e9c
                        *(int32_t *)(g8 - 4) = v8;
                        g4 = g7;
                        function_100075a0(v8);
                        char v82 = g99; // 0x10007ea9
                        int32_t v83 = v82; // 0x10007ea9
                        g4 = v83;
                        int32_t v84; // 0x10007eb4
                        if ((v82 & 1) == 0) {
                            // 0x10007eb4
                            v84 = v83 | 1;
                            g4 = v84;
                            g99 = v84;
                            g95 = (int16_t *)-1;
                            g97 = -1;
                        } else {
                            v84 = v83;
                        }
                        int32_t v85 = g5; // 0x10007ed6
                        int32_t v86;
                        if ((int16_t)v85 != -1) {
                            // 0x10007edb
                            v86 = *(int32_t *)(g7 + 4) + 16 * v85;
                        } else {
                            v86 = (int32_t)&g95;
                        }
                        uint16_t v87 = *(int16_t *)(v86 + 4); // 0x10007eea
                        int32_t v88 = v87; // 0x10007eea
                        if ((v84 & 1) == 0) {
                            int32_t v89 = v84 | 1; // 0x10007ef3
                            g4 = v89;
                            g99 = v89;
                            g95 = (int16_t *)-1;
                            g97 = -1;
                        }
                        // 0x10007f10
                        g4 = 0xffff;
                        int32_t v90;
                        int32_t v91;
                        if (v87 == -1) {
                            // 0x10007f10
                            v91 = g7;
                            v90 = (int32_t)&g95;
                        } else {
                            int32_t v92 = g7; // 0x10007f1c
                            v91 = v92;
                            v90 = *(int32_t *)(v92 + 4) + 16 * v88;
                        }
                        // 0x10007f26
                        v2 = (int32_t)*(int16_t *)(v90 + 4);
                        v79 = v8;
                        v81 = v88;
                        v80 = v91;
                    } else {
                        v79 = a1;
                        v81 = v8;
                        v80 = v7;
                    }
                    // 0x10007f2a
                    g4 = 1;
                    *(int16_t *)(*(int32_t *)(v80 + 4) + (16 * v81 | 6)) = 1;
                    *(int16_t *)((16 * (v2 & 0xffff) | 6) + *(int32_t *)(g7 + 4)) = 0;
                    *(int32_t *)(g8 - 4) = v2;
                    g4 = g7;
                    function_10007690((int32_t)&g169);
                    v4 = v79;
                    goto lab_0x1000815e;
                }
            }
        }
      lab_0x1000816c:
        // 0x1000816c
        g3 = *(int32_t *)(g8 + 4);
        v5 = v6;
    } else {
        v5 = v1;
    }
    int32_t v93 = (int32_t)*(int16_t *)(v5 + 16); // 0x1000816e
    int32_t v94 = *(int32_t *)(v5 + 4); // 0x10008172
    g4 = v94;
    *(int16_t *)((16 * v93 | 6) + v94) = 1;
    return 2 * v93;
  lab_0x10007fe1:;
    int32_t v95 = *(int32_t *)(v7 + 4); // 0x10007fe1
    g4 = v95;
    *(int16_t *)(v95 + (16 * v8 | 6)) = 1;
    int32_t v96 = *(int32_t *)(g7 + 4); // 0x10007ff2
    int32_t v97 = 1; // 0x10007ff7
    g4 = v97;
    *(int16_t *)((16 * v3 | 6) + v96) = (int16_t)v97;
    g4 = 0;
    *(int16_t *)(*(int32_t *)(g7 + 4) + 6 + 16 * v2) = 0;
    int32_t v98 = v2; // 0x1000800c
    g6 = v98;
    v4 = v98;
    goto lab_0x1000815e;
  lab_0x1000815e:;
    int32_t v99 = g7; // 0x10008162
    if ((int16_t)v4 == *(int16_t *)(v99 + 16)) {
        v6 = v99;
        // break -> 0x1000816c
        goto lab_0x1000816c;
    }
    // 0x10007bc0
    v7 = v99;
    a1 = v4;
    goto lab_0x10007bc3;
}

// Address range: 0x10008190 - 0x100081e0
int32_t function_10008190(void) {
    int32_t v1 = g7; // 0x10008190
    int32_t v2 = g4; // 0x10008191
    g7 = v2;
    int32_t v3 = *(int32_t *)(v2 + 4); // 0x10008193
    g1 = v3;
    int32_t v4 = g5; // 0x10008196
    int32_t v5 = *(int32_t *)(v2 + 12); // 0x10008197
    g5 = v5;
    int32_t v6 = v5 + 1; // 0x1000819a
    g4 = v6;
    int32_t v7; // 0x100081ae
    if (v6 > v3) {
        // 0x100081a1
        g4 = v2;
        function_10007260(v5 - v3 + 1, v4, v1);
        v7 = g7;
    } else {
        v7 = v2;
    }
    int32_t * v8 = (int32_t *)(v7 + 12); // 0x100081ae
    *v8 = *v8 + 1;
    int32_t v9 = *(int32_t *)(g7 + 12) - g5 - 1; // 0x100081b8
    *(int32_t *)(g7 + 16) = g4;
    int32_t v10; // 0x100081dd
    if (v9 < 1) {
        // 0x100081ae
        v10 = g8;
    } else {
        // 0x100081c0
        g4 += 12 * g5;
        *(int32_t *)(g8 - 4) = 12 * v9;
        *(int32_t *)(g8 - 8) = g4;
        int32_t v11 = g4 + 12; // 0x100081cf
        g4 = v11;
        *(int32_t *)(g8 - 12) = v11;
        _memcpy(&g169, &g169, (int32_t)&g169);
        v10 = g8 + 12;
    }
    int32_t result = g5; // 0x100081db
    g5 = *(int32_t *)v10;
    g7 = *(int32_t *)(v10 + 4);
    return result;
}

// Address range: 0x100081e0 - 0x10008254
int32_t function_100081e0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g6 & -0x10000 | a2 & 0xffff; // edx
    int32_t v3 = g7; // bp-8
    g7 = a1;
    int32_t v4 = *(int32_t *)(g4 + 4) + (16 * a1 & 0xffff0); // 0x100081f1
    int32_t v5 = g5; // bp-12
    *(int16_t *)(v4 + 2) = -1;
    *(int16_t *)v4 = (int16_t)0xffff;
    g5 = 0;
    *(int16_t *)(v4 + 4) = (int16_t)v2;
    *(int16_t *)(v4 + 6) = (int16_t)g5;
    int32_t v6; // bp-16
    if ((int16_t)v2 == -1) {
        int32_t v7 = g7; // 0x10008244
        v6 = v7;
        *(int16_t *)(g4 + 16) = (int16_t)v7;
        int32_t result = function_10007ba0(v6, v5, v3, v1); // 0x10008249
        g5 = v6;
        g7 = v5;
        return result;
    }
    int32_t v8 = *(int32_t *)(g4 + 4); // 0x10008215
    int32_t v9 = g7; // 0x10008233
    v6 = v9;
    int16_t v10 = v9; // 0x10008234
    int32_t v11 = 16 * (v2 & 0xffff); // 0x10008234
    if ((char)a3 == 0) {
        // 0x10008233
        *(int16_t *)((v11 | 2) + v8) = v10;
        int32_t result2 = function_10007ba0(v6, v5, v3, v1); // 0x10008239
        g5 = v6;
        g7 = v5;
        return result2;
    }
    // 0x10008223
    *(int16_t *)(v8 + v11) = v10;
    int32_t result3 = function_10007ba0(v6, v5, v3, v1); // 0x10008228
    g5 = v6;
    g7 = v5;
    return result3;
}

// Address range: 0x10008260 - 0x10008371
int32_t function_10008260(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g3; // 0x10008266
    int32_t v3 = g7; // 0x10008267
    g7 = a1;
    int32_t v4 = g5; // bp-24
    int32_t v5 = &v4; // 0x1000826b
    g5 = g4;
    g3 = function_10009450(a1) + 1;
    __alloca_probe_16();
    function_10009bf0(g7, &v4, g3);
    int32_t v6 = *(int32_t *)(g5 + 16) - 1; // 0x10008298
    g7 = v6;
    int32_t v7; // 0x100082d8
    if (v6 >= 0) {
        int32_t v8 = v6; // 0x100082ca4
        int32_t v9 = v5; // 0x100082b6
        int32_t v10 = 12 * v6; // 0x100082c7
        while (true) {
            int32_t v11 = *(int32_t *)(g5 + 4); // 0x100082a5
            g4 = v11;
            int32_t v12 = *(int32_t *)(v10 + 8 + v11); // 0x100082a8
            int32_t v13; // 0x100082ca
            int32_t v14; // 0x100082b63
            if (v12 != 0) {
                // 0x100082af
                *(int32_t *)(v9 - 4) = v12;
                *(int32_t *)(v9 - 8) = v5;
                if (function_100094b0((int32_t *)v10, (char *)&g169) == 0) {
                    int32_t result = g7; // 0x10008302
                    g5 = v4;
                    g7 = v3;
                    g3 = v2;
                    g2 = v1;
                    return result;
                }
                // 0x100082c4
                v13 = g7;
                v14 = g8 + 8;
            } else {
                v13 = v8;
                v14 = v9;
            }
            int32_t v15 = v13 - 1; // 0x100082ca
            g7 = v15;
            if (v15 < 0) {
                v7 = v14;
                // break -> 0x100082d0
                break;
            }
            // 0x100082c7
            v8 = v15;
            v9 = v14;
            v10 -= 12;
        }
    } else {
        v7 = v5;
    }
    // 0x100082d0
    g7 = a1;
    int32_t v16 = *(int32_t *)(g4 + 40); // 0x100082d5
    *(int32_t *)(v7 - 4) = a1;
    int32_t v17 = g5; // 0x100082d9
    g4 = v17;
    if (v16 == 0) {
        // 0x100082e4
        *(int32_t *)(v7 - 8) = g7;
        *(int32_t *)(v7 - 12) = (int32_t)"AppFramework : Unable to load module %s!\n";
        Warning();
        g5 = v4;
        g7 = v3;
        g3 = v2;
        g2 = v1;
        return -1;
    }
    // 0x10008310
    g4 = v17 + 4;
    int32_t result2 = function_10008190(); // 0x10008313
    int32_t v18 = *(int32_t *)(g5 + 4); // 0x10008318
    g4 = v18;
    int32_t v19 = 12 * result2; // 0x10008323
    g7 = v19;
    *(int32_t *)(v18 + v19) = v16;
    *(int32_t *)(*(int32_t *)(g5 + 4) + 4 + g7) = 0;
    int32_t v20 = *(int32_t *)0x100221e8; // 0x10008336
    g4 = v20;
    int32_t v21 = *(int32_t *)v20; // 0x1000833c
    g4 = v21;
    int32_t v22 = *(int32_t *)(*(int32_t *)v21 + 4); // 0x10008340
    *(int32_t *)(g8 - 4) = g3;
    int32_t v23 = *(int32_t *)(g5 + 4); // 0x10008346
    g4 = v23;
    *(int32_t *)(v23 + 8 + g7) = v22;
    g4 = *(int32_t *)(*(int32_t *)(g5 + 4) + 8 + g7);
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g8 - 8) = v5;
    *(int32_t *)(g8 - 12) = g4;
    function_10009a60((int32_t *)result2, (int32_t)&g169, (int32_t)&g169);
    g5 = v4;
    g7 = v3;
    g3 = v2;
    g2 = v1;
    return result2;
}

// Address range: 0x10008380 - 0x100083f3
int32_t function_10008380(int32_t a1) {
    int32_t v1 = g2; // 0x10008380
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g5; // 0x10008383
    g5 = a1;
    if (a1 == 0) {
        // 0x1000838b
        Warning();
        g5 = v3;
        g2 = v2;
        return -1;
    }
    int32_t v4 = g4; // 0x100083a2
    int32_t v5 = *(int32_t *)(v4 + 16) - 1; // 0x100083a5
    int32_t v6 = g7; // 0x100083a6
    int32_t v7 = v4 + 4;
    if (v5 < 0) {
        goto lab_0x100083c3_2;
      lab_0x100083c3_2:
        // 0x100083c3
        g7 = v7;
        g4 = v7;
        int32_t result = function_10008190(); // 0x100083c8
        int32_t v8 = 12 * result; // 0x100083d4
        g4 = v8;
        *(int32_t *)(*(int32_t *)g7 + v8) = 0;
        *(int32_t *)(*(int32_t *)g7 + 4 + g4) = a1;
        *(int32_t *)(*(int32_t *)g7 + 8 + g4) = 0;
        // 0x100083ed
        g7 = v6;
        g5 = v3;
        g2 = v2;
        return result;
    }
    int32_t result2 = v5; // 0x100083c0
    int32_t v9 = 12 * v5 + 4 + *(int32_t *)v7; // 0x100083bd
    while (true) {
        int32_t v10 = *(int32_t *)v9; // 0x100083b3
        if (v10 != 0 == v10 == a1) {
            // break -> 0x100083ed
            break;
        }
        int32_t v11 = result2 - 1; // 0x100083c0
        if (v11 < 0) {
            goto lab_0x100083c3_2;
        }
        result2 = v11;
        v9 -= 12;
    }
    // 0x100083ed
    g7 = v6;
    g5 = v3;
    g2 = v1;
    return result2;
}

// Address range: 0x10008400 - 0x100084bc
int32_t function_10008400(char * a1) {
    int32_t v1 = g7; // 0x10008406
    int32_t v2 = g5; // 0x10008407
    int32_t v3 = v2; // bp-20
    int32_t v4 = (int32_t)a1; // 0x10008408
    g5 = v4;
    int32_t v5 = g4; // 0x1000840b
    g7 = v5;
    int32_t v6; // 0x10008446
    if (a1 != NULL) {
        // 0x10008411
        g4 = v5 + 64;
        char * v7; // bp-12
        *(int32_t *)&v7 = v4;
        int32_t v8 = function_100079e0((int32_t *)&v7, v2, v1, v4, g2); // 0x1000841b
        g4 = 0xffff;
        if ((int16_t)v8 != -1) {
            int32_t v9 = *(int32_t *)(*(int32_t *)(g7 + 68) + (16 * (v8 & 0xffff) | 12)); // 0x10008434
            g4 = v9;
            int32_t result = *(int32_t *)(*(int32_t *)(g7 + 24) + 4 * v9); // 0x1000843b
            g5 = (int32_t)&v7;
            g7 = v3;
            return result;
        }
        // 0x10008411
        v6 = g8;
    } else {
        v6 = &v3;
    }
    int32_t v10 = v6 - 4; // 0x10008446
    *(int32_t *)v10 = g3;
    int32_t v11 = 0; // ebx
    int32_t v12 = g7; // 0x10008449
    int32_t result2; // 0x1000845e
    int32_t v13; // 0x1000846b
    int32_t v14; // 0x1000848916
    if (*(int32_t *)(v12 + 36) > 0) {
        int32_t v15 = v10; // 0x1000845b
        int32_t v16 = 0; // 0x10008453
        int32_t v17 = v12; // 0x10008450
        while (true) {
            int32_t v18 = *(int32_t *)(v17 + 24); // 0x10008450
            g4 = v18;
            int32_t v19 = *(int32_t *)(v18 + 4 * v16); // 0x10008453
            g4 = v19;
            int32_t v20 = v15 - 4; // 0x1000845b
            *(int32_t *)v20 = v4;
            result2 = *(int32_t *)(*(int32_t *)v19 + 8);
            if (result2 != 0) {
                // break -> 0x100084b3
                break;
            }
            int32_t v21 = v11 + 1; // 0x10008462
            v11 = v21;
            int32_t v22 = v21 & 0xffff; // 0x10008463
            int32_t v23 = g7; // 0x10008466
            if (v22 >= *(int32_t *)(v23 + 36)) {
                v14 = v20;
                v13 = v23;
                goto lab_0x1000846b_2;
            }
            v15 = v20;
            v16 = v22;
            v17 = v23;
        }
        goto lab_0x100084b3;
    } else {
        v14 = v10;
        v13 = v12;
        goto lab_0x1000846b_2;
    }
  lab_0x1000846b_2:;
    int32_t v24 = *(int32_t *)(v13 + 56); // 0x1000846b
    g3 = 0;
    int32_t v25; // 0x1000849e
    if (v24 < 1) {
        v25 = v13;
        goto lab_0x1000849e_2;
    } else {
        int32_t v26 = 0; // 0x10008486
        int32_t v27 = v13; // 0x10008480
        int32_t v28; // 0x10008491
        while (true) {
            int32_t v29 = *(int32_t *)(v27 + 44); // 0x10008480
            g4 = v29;
            *(int32_t *)(v14 - 4) = 0;
            *(int32_t *)(v14 - 8) = v4;
            v28 = v29 + 4 * v26;
            if (v28 != 0) {
                // break -> 0x100084b3
                break;
            }
            int32_t v30 = g3 + 1; // 0x10008495
            g3 = v30;
            int32_t v31 = v30 & 0xffff; // 0x10008496
            if ((char *)v31 >= (char *)v24) {
                // 0x1000849e
                v25 = g7;
                goto lab_0x1000849e_2;
            }
            // 0x10008495
            v26 = v31;
            v27 = g7;
        }
        result2 = v28;
        goto lab_0x100084b3;
    }
  lab_0x100084b3:
    // 0x100084b3
    g3 = *(int32_t *)g8;
    g5 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    return result2;
  lab_0x1000849e_2:;
    int32_t v32 = *(int32_t *)(v25 + 92); // 0x1000849e
    g7 = v32;
    if (v32 == 0) {
        // 0x100084b1
        result2 = 0;
        goto lab_0x100084b3;
    } else {
        // 0x100084a5
        *(int32_t *)(v14 - 4) = v4;
        g4 = v32;
        int32_t v33 = function_10008400((char *)&g169); // 0x100084a8
        if (v33 != 0) {
            result2 = v33;
            goto lab_0x100084b3;
        } else {
            // 0x100084b1
            result2 = 0;
            goto lab_0x100084b3;
        }
    }
}

// Address range: 0x100084c0 - 0x1000851d
int32_t function_100084c0(int32_t a1) {
    int32_t v1 = g4; // 0x100084c5
    g7 = v1;
    g4 = v1 + 64;
    int32_t v2 = function_10003d90(); // 0x100084cb
    g4 = 0xffff;
    if ((int16_t)v2 == -1) {
      lab_0x10008504:
        // 0x10008504
        g7 = *(int32_t *)(g8 + 4);
        g3 = *(int32_t *)(g8 + 8);
        g2 = *(int32_t *)(g8 + 12);
        return 0;
    }
    // 0x100084dd
    g3 = a1;
    int32_t v3; // 0x100084e8
    int32_t v4; // 0x100084e0
    while (true) {
        int32_t v5 = v2 & 0xffff; // 0x1000850d
        v4 = *(int32_t *)(g7 + 68);
        g4 = v4;
        v3 = 16 * v5;
        if (*(int32_t *)((v3 || 12) + v4) == a1) {
            // break -> 0x1000850d
            break;
        }
        // 0x100084ee
        *(int32_t *)(g8 - 4) = v5;
        g4 = g7 + 64;
        int32_t v6 = function_10003e60((int32_t)&g169); // 0x100084f2
        if ((int16_t)v6 == -1) {
            goto lab_0x10008504;
        }
        // 0x100084ee
        a1 = g3;
        v2 = v6;
    }
    // 0x1000850d
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return *(int32_t *)((v3 | 8) + v4);
}

// Address range: 0x10008520 - 0x100085e1
int32_t function_10008520(void) {
    int32_t v1 = g3; // 0x10008526
    int32_t v2 = g7; // 0x10008527
    int32_t v3 = g4; // 0x10008528
    g7 = v3;
    g3 = 0;
    int32_t * v4 = (int32_t *)(v3 + 36); // 0x1000852c
    if (*v4 <= 0) {
      lab_0x1000854c_2:
        // 0x1000854c
        g7 = v2;
        g3 = v1;
        return 1;
    }
    int32_t * v5 = (int32_t *)(v3 + 24); // 0x10008531
    int32_t v6 = 0; // 0x10008558
    int32_t result; // 0x10008539
    while (true) {
        int32_t v7 = *(int32_t *)(4 * v6 + *v5); // 0x10008534
        g4 = v7;
        result = *(int32_t *)(*(int32_t *)v7 + 12);
        if (result != 1) {
            // break -> 0x10008557
            break;
        }
        int32_t v8 = v6 + 1; // 0x10008546
        g3 = v8;
        if (v8 >= *v4) {
            goto lab_0x1000854c_2;
        }
        v6 = v8;
    }
    // 0x10008557
    g5 = v6;
    if (v6 >= 1) {
        int32_t v9 = v6; // 0x1000856c
        int32_t v10 = *v5; // 0x10008560
        g4 = v10;
        g4 = *(int32_t *)(v10 - 4 + 4 * v9);
        int32_t v11 = v9 - 1; // 0x1000856c
        g5 = v11;
        while (v11 >= 0 == (v11 != 0)) {
            // 0x10008560
            v9 = v11;
            v10 = *v5;
            g4 = v10;
            g4 = *(int32_t *)(v10 - 4 + 4 * v9);
            v11 = v9 - 1;
            g5 = v11;
        }
    }
    // 0x10008573
    g4 = v3 + 64;
    int32_t v12 = function_10003d90() & 0xffff; // 0x10008582
    char * v13;
    if (v12 != 0xffff) {
        int32_t v14; // 0x10008598
        int32_t v15; // 0x10008590
        while (true) {
            // 0x10008590
            v15 = *(int32_t *)(g7 + 68);
            g4 = 2 * v12;
            v14 = 16 * v12;
            if (*(int32_t *)((v14 || 12) + v15) == g3) {
                // break -> 0x100085b3
                break;
            }
            // 0x1000859e
            *(int32_t *)(g8 - 4) = v12;
            g4 = g7 + 64;
            int32_t v16 = function_10003e60((int32_t)&g169) & 0xffff; // 0x100085a7
            if (v16 == 0xffff) {
                v13 = "(Unknown)";
                goto lab_0x100085bf;
            }
            v12 = v16;
        }
        // 0x100085b3
        v13 = (char *)*(int32_t *)((v14 | 8) + v15);
    } else {
        v13 = "(Unknown)";
    }
  lab_0x100085bf:
    // 0x100085bf
    g4 = (int32_t)v13;
    *(int32_t *)(g8 - 4) = *(int32_t *)&g44;
    *(int32_t *)(g8 - 8) = g4;
    *(int32_t *)(g8 - 12) = (int32_t)"System (%s) failed during stage %s\n";
    Warning();
    g7 = *(int32_t *)(g8 + 16);
    g3 = *(int32_t *)(g8 + 20);
    return result;
}

// Address range: 0x100085f0 - 0x10008614
int32_t function_100085f0(int32_t a1, int32_t a2) {
    // 0x100085f0
    g4 = g113;
    int32_t result = function_10008400((char *)a1); // 0x100085fd
    g4 = a2;
    if (a2 != 0) {
        // 0x10008609
        *(int32_t *)a2 = (int32_t)(result == 0);
    }
    // 0x10008612
    g2 = a1;
    return result;
}

// Address range: 0x10008620 - 0x10008626
int32_t function_10008620(int32_t a1) {
    // 0x10008620
    return 0x100085f0;
}

// Address range: 0x10008630 - 0x100086df
int32_t function_10008630(void) {
    int32_t v1 = g7; // 0x10008630
    int32_t v2 = g4; // 0x10008631
    g7 = v2;
    g113 = v2;
    int32_t * v3 = (int32_t *)(v2 + 96); // 0x10008639
    int32_t v4 = *v3; // 0x10008639
    int32_t v5 = g5; // 0x1000863c
    g164 = v4;
    switch (v4) {
        default: {
            // 0x10008649
            *v3 = 7;
            int32_t v6 = g7; // 0x10008657
            int32_t v7 = *(int32_t *)(v6 + 36) - 1; // 0x1000865a
            *(int32_t *)(v6 + 96) = 8;
            int32_t v8; // 0x10008679
            if (v7 < 0) {
                // 0x10008649
                v8 = g7;
            } else {
                int32_t v9 = g7;
                g4 = *(int32_t *)(4 * v7 + *(int32_t *)(v9 + 24));
                while (v7 >= 1) {
                    // 0x10008664
                    v7--;
                    g4 = *(int32_t *)(4 * v7 + *(int32_t *)(v9 + 24));
                }
                v8 = v9;
            }
            // 0x10008674
            g4 = v8;
            *(int32_t *)(v8 + 96) = 9;
        }
        case 3: {
        }
        case 4: {
            int32_t v10 = *(int32_t *)(v2 + 36) - 1; // 0x10008687
            g5 = v10;
            *(int32_t *)(v2 + 96) = 10;
            int32_t v11 = g7;
            if (v10 >= 0) {
                int32_t v12 = g5; // 0x1000869e
                int32_t v13 = *(int32_t *)(v11 + 24); // 0x10008691
                g4 = v13;
                g4 = *(int32_t *)(4 * v12 + v13);
                int32_t v14 = v12 - 1; // 0x1000869e
                g5 = v14;
                while (v14 >= 0) {
                    // 0x10008691
                    v12 = v14;
                    v13 = *(int32_t *)(v11 + 24);
                    g4 = v13;
                    g4 = *(int32_t *)(4 * v12 + v13);
                    v14 = v12 - 1;
                    g5 = v14;
                }
            }
        }
        case 0: {
        }
        case 1: {
        }
        case 2: {
            // 0x100086a1
            *(int32_t *)(v2 + 96) = 11;
            int32_t v15 = g7; // 0x100086a8
            g4 = v15 + 64;
            *(int32_t *)(v15 + 36) = 0;
            function_10004370();
            LoggingSystem_ResetCurrentLoggingState();
            int32_t v16 = *(int32_t *)&g45; // 0x100086bd
            g4 = v16;
            g1 = LoggingSystem_RegisterLoggingListener((int32_t **)v16);
            g4 = g7;
            function_10007780();
            int32_t result = *(int32_t *)(g4 + 24); // 0x100086d6
            g5 = v5;
            g4 = g7;
            g7 = v1;
            return result;
        }
    }
}

// Address range: 0x10008700 - 0x1000876c
int32_t function_10008700(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // 0x10008700
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g7; // 0x1000870a
    g7 = g4;
    int32_t v4 = 0xffff; // bp-12
    char v5 = 0; // bp-8
    function_100073b0(a1, &v4, (int32_t *)&v5, g5, v3, g3, 0xffff, 0, v1);
    g4 = g7;
    int32_t v6 = v5; // 0x10008730
    g6 = v6;
    int32_t v7 = function_100074a0() & 0xffff; // 0x10008733
    g5 = v7;
    g4 = g7;
    function_100081e0(v7, v4, v6);
    int16_t * v8 = (int16_t *)(g7 + 18); // 0x10008746
    *v8 = *v8 + 1;
    g4 = 2 * g5;
    int32_t v9 = (16 * g5 | 8) + *(int32_t *)(g7 + 4); // 0x1000874e
    if (v9 != 0) {
        int32_t v10 = *(int32_t *)g3; // 0x10008756
        g4 = v10;
        *(int32_t *)v9 = v10;
        *(int32_t *)(v9 + 4) = *(int32_t *)(g3 + 4);
    }
    // 0x10008760
    g2 = v2;
    return g5 & 0xffff | v9 & -0x10000;
}

// Address range: 0x10008770 - 0x1000880e
int32_t function_10008770(int32_t a1, int32_t a2, int32_t a3) {
    int32_t result = g4; // 0x10008774
    *(int32_t *)result = (int32_t)&g21;
    int32_t v1 = g5; // bp-12
    int32_t v2 = 0; // edi
    *(int32_t *)(result + 4) = 0;
    *(int32_t *)(result + 8) = v2;
    *(int32_t *)(result + 12) = v2;
    *(int32_t *)(result + 16) = v2;
    *(int32_t *)(result + 20) = v2;
    *(int32_t *)(result + 24) = v2;
    *(int32_t *)(result + 28) = v2;
    *(int32_t *)(result + 32) = v2;
    *(int32_t *)(result + 36) = v2;
    *(int32_t *)(result + 40) = v2;
    *(int32_t *)(result + 44) = v2;
    *(int32_t *)(result + 48) = v2;
    *(int32_t *)(result + 52) = v2;
    *(int32_t *)(result + 56) = v2;
    *(int32_t *)(result + 60) = v2;
    *(int32_t *)(result + 64) = v2;
    *(int32_t *)(result + 68) = v2;
    *(int32_t *)(result + 72) = 16;
    *(int32_t *)(result + 76) = v2;
    int32_t v3 = *(int32_t *)*(int32_t *)0x100221e8; // 0x100087c1
    g4 = v3;
    int32_t v4 = 256; // bp-16
    *(int32_t *)(result + 68) = *(int32_t *)(*(int32_t *)v3 + 4);
    *(int32_t *)(result + 80) = 0xffff;
    *(int32_t *)(result + 84) = -1;
    *(int32_t *)(result + 88) = *(int32_t *)(result + 68);
    int32_t * v5 = (int32_t *)(result + 64); // 0x100087e6
    if (*v5 != v2) {
        // 0x10008800
        g4 = a1;
        g5 = v4;
        *(int32_t *)(result + 92) = a1;
        g7 = v1;
        return result;
    }
    // 0x100087eb
    *v5 = 0x10007030;
    *(int32_t *)(result + 92) = a1;
    g5 = v4;
    g7 = v1;
    return result;
}

// Address range: 0x10008810 - 0x10008aab
int32_t function_10008810(int32_t a1) {
    int32_t v1 = g3; // 0x10008816
    int32_t v2 = g7; // 0x1000881a
    int32_t v3 = (int32_t)*(int16_t *)(a1 + 38); // 0x1000881b
    g7 = v3;
    int32_t v4 = g5; // bp-52
    int32_t v5 = &v4; // 0x10008826
    int32_t v6 = g4; // 0x1000882a
    __alloca_probe_16();
    g5 = v5;
    int32_t v7 = g7; // 0x1000883c
    int32_t v8; // 0x1000885a11
    if (v7 >= 1) {
        // 0x10008840
        v4 = 0;
        int32_t v9; // 0x10008844
        if (v7 != 1) {
            int32_t v10 = 1; // 0x1000884392
            *(int32_t *)(4 * v10 + v5) = v10;
            int32_t v11 = 2; // 0x10008843
            v9 = g7;
            while (v11 < v9) {
                // 0x10008840
                v10 = v11;
                *(int32_t *)(4 * v10 + g5) = v10;
                v11++;
                v9 = g7;
            }
        } else {
            v9 = 1;
        }
        v8 = v9;
    } else {
        v8 = v7;
    }
    // 0x10008848
    g112 = a1;
    int32_t v12; // bp-12
    int32_t v13 = &v12; // 0x100088ac
    int32_t v14; // bp-14
    int32_t v15 = &v14; // 0x100088e7
    int32_t v16 = v8; // 0x1000885a
    int32_t v17; // 0x1000894e17
    while (true) {
        // 0x1000884e
        if (v16 <= 1) {
            v17 = v16;
            // break -> 0x1000893b
            break;
        }
        int32_t v18 = g5 + 4; // 0x10008862
        g4 = v18;
        int32_t v19 = v16; // 0x1000892914
        char v20 = 0;
        int32_t v21 = 1; // 0x10008925
        char v22;
        while (true) {
            int16_t * v23 = (int16_t *)v18;
            g3 = 0;
            if (v21 >= 1) {
                int32_t * v24 = (int32_t *)v18; // 0x10008903
                char v25 = v20;
                char v26;
                while (true) {
                    // 0x10008872
                    g1 = g112;
                    int32_t v27 = g8 - 4; // 0x1000887d
                    *(int32_t *)v27 = g4;
                    *(int16_t *)v27 = (int16_t)(int32_t)*v23;
                    g4 = g1 + 20;
                    int32_t v28 = function_1000e5b0((int32_t)&g169); // 0x10008886
                    uint16_t v29 = *(int16_t *)(4 * g3 + g5); // 0x1000888b
                    int32_t v30 = g8 - 4; // 0x1000888f
                    *(int32_t *)v30 = g4;
                    g1 = g112;
                    *(int16_t *)v30 = (int16_t)(int32_t)v29;
                    g4 = g1 + 20;
                    int32_t v31 = function_1000e5b0(v28); // 0x100088a0
                    g5 = g112;
                    *(int32_t *)(g8 - 4) = v31;
                    *(int32_t *)(g8 - 8) = v13;
                    g4 = g5 + 20;
                    function_1000f030((char)&g169, (int32_t)&g169);
                    int32_t v32 = v12 & 0xffff; // 0x100088b8
                    g7 = v32;
                    int32_t v33 = g5; // 0x100088bc
                    uint32_t v34 = *(int32_t *)(v33 + 12); // 0x100088bc
                    int32_t v35; // 0x100088d5
                    int32_t v36; // 0x100088da
                    if (v34 <= v32) {
                        // 0x100088ca
                        *(int32_t *)(g8 - 4) = v32 + 1 - v34;
                        *(int32_t *)(g8 - 8) = v34;
                        g4 = g5;
                        function_10007ae0((int32_t)&g169, (int32_t)&g169);
                        v36 = g7;
                        v35 = g5;
                    } else {
                        v36 = v32;
                        v35 = v33;
                    }
                    // 0x100088d5
                    g4 = *(int32_t *)v35 + 56 * v36;
                    *(int32_t *)(g8 - 4) = v28;
                    *(int32_t *)(g8 - 8) = v15;
                    int32_t v37 = function_1000ed60((int32_t)&g169, (int32_t)&g169); // 0x100088eb
                    g4 = 0xffff;
                    if (*(int16_t *)v37 != -1) {
                        // 0x100088fa
                        g4 = v18;
                        int32_t v38 = *(int32_t *)(4 * g3 + v5); // 0x10008900
                        g7 = v38;
                        *v24 = v38;
                        *(int32_t *)(4 * g3 + v5) = *v24;
                        v26 = 1;
                    } else {
                        v26 = v25;
                    }
                    // 0x1000890e
                    g5 = v5;
                    int32_t v39 = g3 + 1; // 0x10008911
                    g3 = v39;
                    if (v39 >= v21) {
                        // break -> 0x1000891b
                        break;
                    }
                    v25 = v26;
                }
                // 0x1000891b
                g7 = v3;
                v22 = v26;
            } else {
                v3 = v19;
                v22 = v20;
            }
            int32_t v40 = v18 + 4; // 0x10008921
            int32_t v41 = v21 + 1; // 0x10008925
            if (v41 >= v3) {
                // break -> 0x10008931
                break;
            }
            v19 = v3;
            v20 = v22;
            v21 = v41;
            v18 = v40;
        }
        if (v22 == 0) {
            v17 = v3;
            // break -> 0x1000893b
            break;
        }
        v16 = v3;
    }
    // 0x1000893b
    g112 = 0;
    int32_t v42 = v17; // 0x1000894e
    while (true) {
        // 0x10008945
        g3 = 1;
        if (v42 <= 1) {
            // break -> 0x10008a09
            break;
        }
        int32_t v43 = v42; // 0x100089f721
        int32_t v44 = 1; // 0x10008959
        char v45 = 1;
        char v46;
        int32_t v47; // 0x100089f7
        while (true) {
            int32_t v48 = g5; // 0x10008956
            int32_t v49 = 4 * v44; // 0x10008956
            uint32_t v50 = *(int32_t *)(v48 + v49); // 0x10008956
            uint32_t v51 = *(int32_t *)(v49 - 4 + v48); // 0x10008959
            g4 = v51;
            if (v50 <= v51) {
                int32_t v52 = g8 - 4; // 0x1000896b
                *(int32_t *)v52 = v51;
                g1 = v52;
                *(int16_t *)v52 = (int16_t)g4;
                int32_t v53 = a1 + 20; // 0x10008971
                g7 = v53;
                g4 = v53;
                int32_t v54 = function_1000e5b0(v50); // eax
                int32_t v55 = g8 - 4; // 0x1000897f
                *(int32_t *)v55 = g4;
                g1 = v55;
                g4 = g7;
                *(int16_t *)v55 = (int16_t)(g6 & -0x10000 | v50 & 0xffff);
                *(int32_t *)(g8 - 4) = function_1000e5b0(v54);
                *(int32_t *)(g8 - 8) = v13;
                g4 = g7;
                function_1000f030((char)&g169, (int32_t)&g169);
                int32_t v56 = v12 & 0xffff; // 0x1000899b
                g7 = v56;
                g4 = a1;
                uint32_t v57 = *(int32_t *)(a1 + 12); // 0x100089a2
                int32_t v58; // 0x100089be
                if (v57 <= v56) {
                    // 0x100089b0
                    *(int32_t *)(g8 - 4) = v56 + 1 - v57;
                    *(int32_t *)(g8 - 8) = v57;
                    function_10007ae0((int32_t)&g169, (int32_t)&g169);
                    g4 = a1;
                    v58 = g7;
                } else {
                    v58 = v56;
                }
                // 0x100089bc
                g4 = *(int32_t *)a1 + 56 * v58;
                *(int32_t *)(g8 - 4) = v54;
                *(int32_t *)(g8 - 8) = v15;
                int32_t v59 = function_1000ed60((int32_t)&g169, (int32_t)&g169); // 0x100089d2
                g7 = v3;
                g4 = 0xffff;
                if (*(int16_t *)v59 == -1) {
                    int32_t v60 = g5; // 0x100089e4
                    int32_t v61 = 4 * g3; // 0x100089e4
                    int32_t * v62 = (int32_t *)(v61 + v60); // 0x100089e8
                    *v62 = *(int32_t *)(v60 - 4 + v61);
                    *(int32_t *)(g5 - 4 + 4 * g3) = *v62;
                    v47 = g7;
                    v46 = 0;
                } else {
                    v47 = v3;
                    v46 = v45;
                }
            } else {
                v47 = v43;
                v46 = v45;
            }
            int32_t v63 = g3 + 1; // 0x100089f6
            g3 = v63;
            if (v63 >= v47) {
                // break -> 0x100089ff
                break;
            }
            v43 = v47;
            v44 = v63;
            v45 = v46;
        }
        if (v46 != 0) {
            // break -> 0x10008a09
            break;
        }
        v42 = v47;
    }
    // 0x10008a09
    __alloca_probe_16();
    *(int32_t *)(g8 - 4) = 4 * g7;
    int32_t * v64 = (int32_t *)(v6 + 24); // 0x10008a25
    int32_t v65 = *v64; // 0x10008a25
    g4 = v65;
    *(int32_t *)(g8 - 8) = v65;
    *(int32_t *)(g8 - 12) = g8;
    _memcpy2();
    if (g7 >= 1) {
        int32_t v66 = 0; // 0x10008a38
        g4 = v6;
        int32_t v67 = *v64; // 0x10008a3e
        g4 = v67;
        int32_t v68 = *(int32_t *)(g8 + 4 * *(int32_t *)(v66 + g5)); // 0x10008a41
        *(int32_t *)(v67 + v66) = v68;
        int32_t v69 = 1; // 0x10008a47
        while (v69 < g7) {
            // 0x10008a38
            v66 = 4 * v69;
            g4 = v6;
            v67 = *v64;
            g4 = v67;
            v68 = *(int32_t *)(g8 + 4 * *(int32_t *)(v66 + g5));
            *(int32_t *)(v67 + v66) = v68;
            v69++;
        }
    }
    // 0x10008a4c
    g3 = v6;
    g4 = v6 + 64;
    int32_t v70 = function_10003d90(); // 0x10008a52
    int32_t v71 = v70 & 0xffff; // 0x10008a57
    g4 = v71;
    int32_t v72; // 0x10008a89
    if ((int16_t)v70 != -1) {
        while (true) {
          lab_0x10008a64:;
            uint32_t v73 = g7; // 0x10008a66
            if (v73 >= 1) {
                int32_t * v74 = (int32_t *)(*(int32_t *)(g3 + 68) + (16 * v71 | 12)); // 0x10008a76
                int32_t v75 = 0; // 0x10008a84
                while (true) {
                    // 0x10008a78
                    if (*(int32_t *)(4 * v75 + g5) == *v74) {
                        // break -> 0x10008a84
                        break;
                    }
                    int32_t v76 = v75 + 1; // 0x10008a7d
                    if (v76 >= v73) {
                        v72 = v71;
                        goto lab_0x10008a86_2;
                    }
                    v75 = v76;
                }
                // 0x10008a84
                *v74 = v75;
                v72 = g4;
            } else {
                v72 = v71;
            }
            goto lab_0x10008a86_2;
        }
    }
  lab_0x10008a9f:
    // 0x10008a9f
    g5 = v4;
    g7 = v2;
    g3 = v1;
    return 0xffff;
  lab_0x10008a86_2:
    // 0x10008a86
    g3 = v6;
    *(int32_t *)(g8 - 4) = v72;
    g4 = g3 + 64;
    int32_t v77 = function_10003e60((int32_t)&g169); // 0x10008a8d
    int32_t v78 = v77 & 0xffff; // 0x10008a92
    g4 = v78;
    if ((int16_t)v77 == -1) {
        // break -> 0x10008a9f
        goto lab_0x10008a9f;
    }
    v71 = v78;
    goto lab_0x10008a64;
}

// Address range: 0x10008ab0 - 0x10008b50
int32_t function_10008ab0(void) {
    int32_t v1 = g2; // 0x10008ab0
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g4; // 0x10008ab3
    int32_t v4 = g5; // bp-16
    int32_t v5 = &v4; // 0x10008ab5
    g7 = v3;
    g5 = 0;
    int32_t v6; // 0x10008ad1
    int32_t v7; // 0x10008adb
    if (*(int32_t *)(v3 + 36) <= 0) {
        // 0x10008ab0
        v2 = v1;
        v6 = g1;
        v7 = v5;
        goto lab_0x10008adb_2;
      lab_0x10008adb_2:
        // 0x10008adb
        g5 = *(int32_t *)v7;
        g7 = *(int32_t *)(v7 + 4);
        g2 = v2;
        return v6 & -256 | 1;
    }
    int32_t v8 = v5; // 0x10008aca
    int32_t v9 = 0; // 0x10008ac3
    while (true) {
        int32_t v10 = *(int32_t *)(*(int32_t *)(v3 + 24) + 4 * v9); // 0x10008ac3
        g4 = v10;
        int32_t v11 = v8 - 4; // 0x10008aca
        *(int32_t *)v11 = 0x100085f0;
        v6 = *(int32_t *)*(int32_t *)v10;
        if ((char)v6 == 0) {
            // break -> 0x10008ae3
            break;
        }
        int32_t v12 = g5 + 1; // 0x10008ad5
        g5 = v12;
        int32_t v13 = g7; // 0x10008ad6
        if (v12 >= *(int32_t *)(v13 + 36)) {
            v7 = v11;
            goto lab_0x10008adb_2;
        }
        v8 = v11;
        v9 = v12;
        v3 = v13;
    }
    // 0x10008ae3
    *(int32_t *)(v8 - 8) = g3;
    g4 = g7 + 64;
    int32_t v14 = function_10003d90() & 0xffff; // 0x10008af3
    char * v15;
    if (v14 != 0xffff) {
        int32_t v16; // 0x10008b08
        int32_t v17; // 0x10008b00
        while (true) {
            // 0x10008b00
            v17 = *(int32_t *)(g7 + 68);
            g4 = 2 * v14;
            v16 = 16 * v14;
            if (*(int32_t *)((v16 || 12) + v17) == g5) {
                // break -> 0x10008b23
                break;
            }
            // 0x10008b0e
            *(int32_t *)(g8 - 4) = v14;
            g4 = g7 + 64;
            int32_t v18 = function_10003e60((int32_t)&g169) & 0xffff; // 0x10008b17
            if (v18 == 0xffff) {
                v15 = "(Unknown)";
                goto lab_0x10008b2f;
            }
            v14 = v18;
        }
        // 0x10008b23
        v15 = (char *)*(int32_t *)((v16 | 8) + v17);
    } else {
        v15 = "(Unknown)";
    }
  lab_0x10008b2f:
    // 0x10008b2f
    g4 = (int32_t)v15;
    *(int32_t *)(g8 - 4) = *(int32_t *)&g43;
    *(int32_t *)(g8 - 8) = g4;
    *(int32_t *)(g8 - 12) = (int32_t)"System (%s) failed during stage %s\n";
    int32_t v19 = Warning(); // 0x10008b3e
    g3 = *(int32_t *)(g8 + 12);
    g5 = *(int32_t *)(g8 + 16);
    g7 = *(int32_t *)(g8 + 20);
    g2 = v2;
    return v19 & -256;
}

// Address range: 0x10008b50 - 0x10008b55
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10008b50(void) {
    // 0x10008b50
    return function_10008630();
}

// Address range: 0x10008b60 - 0x10008b84
int32_t function_10008b60(int32_t a1) {
    int32_t v1 = g7; // 0x10008b63
    g7 = g4;
    function_10008770(0, v1, g2);
    *(int32_t *)(g7 + 100) = a1;
    *(int32_t *)g7 = (int32_t)&g22;
    *(char *)(g7 + 104) = 0;
    int32_t result = g7; // 0x10008b7d
    g7 = 0;
    g2 = v1;
    return result;
}

// Address range: 0x10008b90 - 0x10008bfd
int32_t function_10008b90(int32_t a1, int32_t a2) {
    // 0x10008b90
    int32_t v1; // bp-12
    int32_t v2 = &v1; // 0x10008b93
    int32_t v3 = g5; // bp-20
    g5 = a1;
    int32_t v4 = g4; // 0x10008b9b
    g3 = v4;
    int32_t v5; // 0x10008be4
    int32_t v6; // 0x10008bea
    int32_t v7; // 0x10008bea10
    if (a1 == 0) {
        v7 = &v3;
        goto lab_0x10008bdd;
    } else {
        int32_t v8 = a1; // 0x10008ba8
        unsigned char v9 = *(char *)v8; // 0x10008ba6
        int32_t v10 = (int32_t)v9 | v4 & -256; // 0x10008ba6
        g4 = v10;
        int32_t v11 = v8 + 1; // 0x10008ba8
        while (v9 != 0) {
            // 0x10008ba6
            v8 = v11;
            v9 = *(char *)v8;
            v10 = (int32_t)v9 | v10 & -256;
            g4 = v10;
            v11 = v8 + 1;
        }
        int32_t v12 = *(int32_t *)0x100221e8; // 0x10008bad
        g4 = v12;
        int32_t v13 = *(int32_t *)v12; // 0x10008bb3
        g4 = v13;
        int32_t v14 = *(int32_t *)v13; // 0x10008bb7
        int32_t v15 = v11 - (a1 + 1) + 1; // bp-24
        int32_t v16 = &v15; // 0x10008bba
        int32_t v17 = *(int32_t *)(v14 + 4); // 0x10008bbb
        if (v17 == 0) {
            v7 = v16;
            goto lab_0x10008bdd;
        } else {
            // 0x10008bc4
            g4 = a1;
            int32_t v18 = a1; // 0x10008bd2
            unsigned char v19 = *(char *)v18; // 0x10008bd0
            int32_t v20 = (int32_t)v19 | v14 & -256; // edx
            *(char *)(v18 + v17 - a1) = v19;
            int32_t v21 = g4 + 1; // 0x10008bd5
            g4 = v21;
            while ((char)v20 != 0) {
                // 0x10008bd0
                v18 = v21;
                v19 = *(char *)v18;
                v20 = (int32_t)v19 | v20 & -256;
                *(char *)(v18 + v17 - a1) = v19;
                v21 = g4 + 1;
                g4 = v21;
            }
            // 0x10008bda
            v6 = v16;
            v5 = v17;
            goto lab_0x10008bdf;
        }
    }
  lab_0x10008bdd:
    // 0x10008bdd
    v6 = v7;
    v5 = 0;
    goto lab_0x10008bdf;
  lab_0x10008bdf:
    // 0x10008bdf
    g4 = a2;
    v1 = v5;
    *(int32_t *)(v6 - 4) = v2;
    g4 = g3;
    return function_10008700(v1, *(int32_t *)a2);
}

// Address range: 0x10008c00 - 0x10008d32
int32_t function_10008c00(int32_t a1, int32_t a2) {
    int32_t v1 = g3; // 0x10008c0a
    int32_t v2 = g4; // 0x10008c0b
    g3 = v2;
    if (a1 == -1) {
        // 0x10008c0f
        g3 = v1;
        return 0;
    }
    int32_t v3 = g5; // 0x10008c18
    int32_t v4 = v3; // bp-24
    g5 = a2;
    int32_t v5;
    int32_t v6; // 0x10008c39
    if (a2 != 0) {
        // 0x10008c20
        g4 = v2 + 64;
        int32_t v7 = a2; // bp-16
        int32_t v8 = function_100079e0(&v7, v3, v1, a2, (int32_t)&g169); // 0x10008c2a
        v6 = g8;
        v5 = v8 & 0xffff;
    } else {
        v6 = &v4;
        v5 = 0xffff;
    }
    int32_t v9 = v6 - 4; // 0x10008c39
    *(int32_t *)v9 = g7;
    int32_t v10 = v5 & 0xffff; // 0x10008c3a
    g7 = v10;
    if (v10 != 0xffff) {
        // 0x10008c45
        *(int32_t *)(v6 - 8) = a2;
        *(int32_t *)(v6 - 12) = (int32_t)"AppFramework : Attempted to add two systems with the same interface name %s!\n";
        Warning();
        g4 = 2 * g7;
        int32_t v11 = *(int32_t *)((16 * g7 | 12) + *(int32_t *)(g3 + 68)); // 0x10008c5b
        int32_t v12 = *(int32_t *)(g3 + 24); // 0x10008c5f
        g4 = v12;
        g7 = *(int32_t *)(g8 + 8);
        g5 = *(int32_t *)(g8 + 12);
        g3 = *(int32_t *)(g8 + 16);
        return *(int32_t *)(v12 + 4 * v11);
    }
    int32_t v13 = *(int32_t *)(g3 + 4) + 12 * a1; // 0x10008c77
    int32_t * v14 = (int32_t *)v13; // 0x10008c77
    int32_t result; // eax
    if (*v14 == 0) {
        // 0x10008c8d
        result = *(int32_t *)(v13 + 4);
    } else {
        int32_t v15 = *v14; // 0x10008c80
        g4 = v15;
        *(int32_t *)(v6 - 8) = v15;
        result = function_1000bdb0((int32_t)&g169);
        v9 = g8 + 4;
    }
    int32_t * v16 = (int32_t *)(v9 - 4); // 0x10008c93
    int32_t v17; // bp-8
    *v16 = (int32_t)&v17;
    int32_t * v18 = (int32_t *)(v9 - 8); // 0x10008c94
    *v18 = a2;
    if (v17 == 0) {
        if (result != 0) {
            int32_t v19 = g3; // 0x10008ca7
            int32_t v20 = *(int32_t *)(v19 + 36); // 0x10008ca7
            g5 = v20;
            int32_t v21 = *(int32_t *)(v19 + 28); // 0x10008caa
            g1 = v21;
            int32_t v22 = v20 + 1; // 0x10008cad
            g4 = v22;
            int32_t v23; // 0x10008cc2
            if (v22 > v21) {
                // 0x10008cb4
                *v16 = v20 - v21 + 1;
                g4 = g3 + 24;
                function_1000d920(result);
                v23 = g3;
            } else {
                v23 = v19;
            }
            int32_t * v24 = (int32_t *)(v23 + 36); // 0x10008cc2
            *v24 = *v24 + 1;
            int32_t v25 = g3; // 0x10008cc5
            int32_t v26 = *(int32_t *)(v25 + 24); // 0x10008cc8
            g4 = v26;
            int32_t v27 = *(int32_t *)(v25 + 36) - g5 - 1; // 0x10008ccd
            *(int32_t *)(v25 + 40) = v26;
            if (v27 >= 1) {
                // 0x10008cd5
                g4 += 4 * g5;
                *(int32_t *)(g8 - 4) = 4 * v27;
                *(int32_t *)(g8 - 8) = g4;
                int32_t v28 = g4 + 4; // 0x10008cde
                g4 = v28;
                *(int32_t *)(g8 - 12) = v28;
                _memcpy(&g169, &g169, (int32_t)&g169);
            }
            int32_t v29 = *(int32_t *)(g3 + 24); // 0x10008cea
            g4 = v29;
            int32_t v30 = 4 * g5 + v29; // 0x10008ced
            if (v30 != 0) {
                // 0x10008cf4
                *(int32_t *)v30 = result;
            }
            // 0x10008cf9
            g4 = a2;
            int32_t v31; // bp-12
            *(int32_t *)(g8 - 4) = (int32_t)&v31;
            *(int32_t *)(g8 - 8) = g4;
            g4 = g3 + 64;
            int32_t v32 = g5; // 0x10008d04
            v31 = v32;
            function_10008b90(v32, (int32_t)&g169);
            g7 = *(int32_t *)g8;
            g5 = *(int32_t *)(g8 + 4);
            g3 = *(int32_t *)(g8 + 8);
            return result;
        }
    }
    // 0x10008d18
    *v16 = a2;
    *v18 = (int32_t)"AppFramework : Unable to create system %s!\n";
    Warning();
    g7 = *(int32_t *)(g8 + 8);
    g5 = *(int32_t *)(g8 + 12);
    g3 = *(int32_t *)(g8 + 16);
    return 0;
}

// Address range: 0x10008d40 - 0x10008d99
int32_t function_10008d40(int32_t * a1, char * a2, int32_t a3) {
    // 0x10008d40
    g7 = (int32_t)a1;
    int32_t v1 = *a1; // 0x10008d47
    int32_t v2 = g5; // bp-12
    int32_t v3 = &v2; // 0x10008d4c
    g5 = g4;
    if (*(char *)v1 == 0) {
      lab_0x10008d74:
        // 0x10008d74
        g5 = *(int32_t *)v3;
        g7 = *(int32_t *)(v3 + 4);
        g2 = *(int32_t *)(v3 + 8);
        return v1 & -256 | 1;
    }
    int32_t v4; // 0x10008d7c
    while (true) {
        // 0x10008d51
        *(int32_t *)(v3 - 4) = v1;
        g4 = g5;
        int32_t v5 = function_10008260((int32_t)&g169); // 0x10008d54
        *(int32_t *)(g8 - 4) = *(int32_t *)(g7 + 4);
        *(int32_t *)(g8 - 8) = v5;
        g4 = g5;
        int32_t v6 = function_10008c00((int32_t)&g169, (int32_t)&g169); // 0x10008d60
        v4 = g7;
        if (v6 == 0) {
            // break -> 0x10008d7c
            break;
        }
        int32_t v7 = v4 + 8; // 0x10008d69
        int32_t v8 = *(int32_t *)v7; // 0x10008d69
        g7 = v7;
        if (*(char *)v8 == 0) {
            v1 = v8;
            v3 = g8;
            goto lab_0x10008d74;
        }
        v3 = g8;
        v1 = v8;
    }
    // 0x10008d7c
    *(int32_t *)(g8 - 4) = *(int32_t *)v4;
    *(int32_t *)(g8 - 8) = *(int32_t *)(v4 + 4);
    *(int32_t *)(g8 - 12) = (int32_t)"Unable to load interface %s from %s, requested from EXE.\n";
    int32_t v9 = Warning(); // 0x10008d88
    g5 = *(int32_t *)(g8 + 12);
    g7 = *(int32_t *)(g8 + 16);
    g2 = *(int32_t *)(g8 + 20);
    return v9 & -256;
}

// Address range: 0x10008da0 - 0x10008f74
int32_t function_10008da0(int32_t a1) {
    // 0x10008da0
    char v1; // bp-100
    int32_t v2 = &v1; // 0x10008da3
    g3 = g4;
    int32_t v3; // bp-80
    int32_t v4 = &v3; // 0x10008db2
    g4 = v4;
    v1 = 0;
    function_1000efc0(0, 32, 1);
    g1 = 0;
    int32_t v5 = g3; // 0x10008dd2
    int32_t v6;
    int32_t v7; // 0x10008f6b
    int32_t v8; // 0x10008f6d
    if (*(int32_t *)(v5 + 36) > g7) {
        int32_t v9 = 0; // 0x10008e28
        int32_t v10; // 0x10008f11
        while (true) {
            // 0x10008e61
            g4 = *(int32_t *)(v5 + 24);
            *(int32_t *)(g8 - 4) = v9;
            g4 = g3;
            int32_t v11 = function_100084c0(v9); // 0x10008e2e
            g5 = v11;
            *(int32_t *)(g8 - 4) = v11;
            int32_t v12; // bp-8
            *(int32_t *)(g8 - 8) = (int32_t)&v12;
            g4 = v4;
            int32_t v13 = g5; // 0x10008e3d
            function_1000f030((char)v13, (int32_t)&g169);
            g4 = 0;
            *(int32_t *)(g8 - 4) = (v12 & 0xffff) + 1;
            *(int32_t *)(g8 - 8) = g4;
            g4 = v2;
            function_10007ae0((int32_t)&g169, (int32_t)&g169);
            int32_t v14 = g7; // 0x10008e61
            int32_t v15 = *(int32_t *)v14; // 0x10008e61
            g4 = v14;
            g7 = v15;
            if (v15 != 0) {
                int32_t v16 = *(int32_t *)(v15 + 4); // 0x10008e74
                if (v16 != 0) {
                    // 0x10008e84
                    if (*(char *)v16 != 0) {
                        int32_t v17 = 0x1000000 * v13 / 0x1000000; // 0x10008e81
                        int32_t v18 = g5; // 0x10008e8d
                        while (true) {
                            // 0x10008eb8
                            *(int32_t *)(g8 - 4) = v18;
                            int32_t v19; // bp-12
                            *(int32_t *)(g8 - 8) = (int32_t)&v19;
                            g4 = v4;
                            function_1000f030((char)&g169, (int32_t)&g169);
                            int32_t v20 = v19 & 0xffff; // 0x10008e9a
                            g5 = v20;
                            g4 = 0;
                            *(int32_t *)(g8 - 4) = v20 + 1;
                            *(int32_t *)(g8 - 8) = g4;
                            g4 = v2;
                            function_10007ae0((int32_t)&g169, (int32_t)&g169);
                            *(int32_t *)(g8 - 4) = *(int32_t *)(g7 + 4);
                            g4 = v1;
                            int32_t v21; // bp-14
                            *(int32_t *)(g8 - 8) = (int32_t)&v21;
                            g4 += 8 * 7 * g5;
                            function_1000f030((char)&g169, (int32_t)&g169);
                            *(int32_t *)(g8 - 4) = 0;
                            *(int32_t *)(g8 - 8) = *(int32_t *)(g7 + 4);
                            if (function_100085f0((int32_t)&g169, (int32_t)&g169) == 0) {
                                // 0x10008ee6
                                *(int32_t *)(g8 + 4) = *(int32_t *)g7;
                                g4 = g3;
                                int32_t v22 = function_10008260((int32_t)&g169); // 0x10008eeb
                                *(int32_t *)(g8 - 4) = *(int32_t *)(g7 + 4);
                                *(int32_t *)(g8 - 8) = v22;
                                g4 = g3;
                                if (function_10008c00((int32_t)&g169, (int32_t)&g169) == 0) {
                                    int32_t v23 = g7; // 0x10008f28
                                    g4 = *(int32_t *)(v23 + 4);
                                    *(int32_t *)(g8 - 4) = v17;
                                    *(int32_t *)(g8 - 8) = *(int32_t *)v23;
                                    *(int32_t *)(g8 - 12) = g4;
                                    *(int32_t *)(g8 - 16) = (int32_t)"Unable to load interface %s from %s (Dependency of %s)\n";
                                    Warning();
                                    g4 = v4;
                                    g1 = function_1000ef30();
                                    g4 = v2;
                                    function_10007970();
                                    char v24 = v1; // 0x10008f54
                                    int32_t v25 = v24; // 0x10008f54
                                    if (v24 == 0) {
                                        // 0x10008f25
                                        v8 = v25;
                                        v7 = g8;
                                        goto lab_0x10008f6b;
                                    } else {
                                        int32_t v26 = *(int32_t *)*(int32_t *)0x100221e8; // 0x10008f61
                                        g4 = v26;
                                        int32_t v27 = g8 - 4; // 0x10008f65
                                        *(int32_t *)v27 = v25;
                                        v8 = *(int32_t *)(*(int32_t *)v26 + 20);
                                        v7 = v27;
                                        goto lab_0x10008f6b;
                                    }
                                }
                            }
                            int32_t v28 = g7; // 0x10008f00
                            int32_t v29 = *(int32_t *)(v28 + 12); // 0x10008f00
                            g7 = v28 + 8;
                            if (v29 == 0) {
                                // break -> 0x10008f0e
                                break;
                            }
                            // 0x10008e81
                            g5 = v17;
                            if (*(char *)v29 == 0) {
                                // break -> 0x10008f0e
                                break;
                            }
                            v18 = v17;
                        }
                    }
                }
            }
            // 0x10008f0e
            v10 = v9 + 1;
            g1 = v10;
            int32_t v30 = g3; // 0x10008f15
            if (v10 >= *(int32_t *)(v30 + 36)) {
                // break -> 0x10008f1e
                break;
            }
            // 0x10008e22
            v5 = v30;
            v9 = v10;
        }
        v6 = v10;
    } else {
        v6 = 0;
    }
    // 0x10008dd7
    *(int32_t *)(g8 - 4) = v2;
    g4 = g3;
    function_100077e0(v6);
    *(int32_t *)(g8 - 4) = v2;
    g4 = g3;
    function_10008810((int32_t)&g169);
    g4 = v4;
    g1 = function_1000ef30();
    g4 = v2;
    int32_t v31 = function_10007970(); // 0x10008df8
    int32_t v32; // 0x10008e1b
    if (g7 <= 32) {
        int32_t v33 = v1; // 0x10008e02
        if (v33 != g7) {
            int32_t v34 = *(int32_t *)0x100221e8; // 0x10008e09
            g4 = v34;
            int32_t v35 = *(int32_t *)v34; // 0x10008e0f
            g4 = v35;
            *(int32_t *)(g8 - 4) = v33;
            v32 = *(int32_t *)(*(int32_t *)v35 + 20);
        } else {
            v32 = v33;
        }
    } else {
        v32 = v31;
    }
    // 0x10008e19
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return v32 & -256 | 1;
  lab_0x10008f6b:
    // 0x10008f6b
    g5 = *(int32_t *)v7;
    g7 = *(int32_t *)(v7 + 4);
    g3 = *(int32_t *)(v7 + 8);
    return v8 & -256;
}

// Address range: 0x10008f80 - 0x1000900c
int32_t function_10008f80(void) {
    int32_t v1 = g7; // bp-4
    int32_t v2 = g4; // 0x10008f81
    g113 = v2;
    *(int32_t *)(v2 + 96) = 0;
    if ((char)v2 == 0) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    // 0x10008f9f
    g4 = v2;
    *(int32_t *)(v2 + 96) = 1;
    int32_t v3 = function_10008da0(v1); // 0x10008fa8
    g1 = v3;
    if ((char)v3 == 0) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    int32_t v4 = g7; // 0x10008fb1
    g4 = v4;
    *(int32_t *)(v4 + 96) = 2;
    if ((char)function_10008ab0() == 0) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    int32_t v5 = g4; // 0x10008fc3
    int32_t v6 = g7; // 0x10008fc8
    g4 = v6;
    *(int32_t *)(v6 + 96) = 3;
    if ((char)v5 == 0) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    int32_t v7 = g7; // 0x10008fd7
    g4 = v7;
    *(int32_t *)(v7 + 96) = 4;
    if (function_10008520() != 1) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    int32_t v8 = g4; // 0x10008fea
    g4 = g7;
    *(int32_t *)(g7 + 96) = 5;
    if ((char)v8 == 0) {
        // 0x10008f9a
        g7 = v1;
        return -1;
    }
    // 0x10008ffe
    *(int32_t *)(g7 + 96) = 6;
    g7 = v1;
    return 1;
}

// Address range: 0x10009010 - 0x10009046
int32_t function_10009010(void) {
    int32_t v1 = g7; // 0x10009010
    int32_t v2 = g4; // 0x10009011
    g7 = v2;
    g113 = v2;
    int32_t v3 = function_10008f80(); // 0x1000901a
    int32_t v4 = g7; // 0x1000901f
    g5 = v3;
    if (*(int32_t *)(v4 + 96) == 6) {
        int32_t v5 = g4; // 0x10009027
        g4 = v4;
        g5 = v5;
    }
    // 0x10009032
    g4 = v4;
    function_10008630();
    g113 = *(int32_t *)(g7 + 92);
    g7 = v1;
    return g5;
}

// Address range: 0x10009050 - 0x10009055
// From class:    CSourceAppSystemGroup
// Type:          virtual member function
int32_t function_10009050(int32_t a1, int32_t a2) {
    // 0x10009050
    return function_10008f80();
}

// Address range: 0x10009060 - 0x100090a3
// From class:    CSimpleWindowsLoggingListener
// Type:          virtual member function
int32_t function_10009060(int32_t result, int32_t a2) {
    // 0x10009060
    if ((char)Plat_IsInDebugSession() != 0) {
        // 0x10009074
        Plat_DebugString(a2);
    }
    // 0x1000907e
    if (*(int32_t *)(result + 8) != 3) {
        // 0x1000909d
        return result;
    }
    // 0x10009087
    if ((char)Plat_IsInDebugSession() != 0) {
        // 0x1000908d
        __asm_int3();
    }
    // 0x1000909d
    return Plat_MessageBox("Error", a2);
}

// Address range: 0x100090b0 - 0x100090b6
int32_t function_100090b0(void) {
    // 0x100090b0
    return g114;
}

// Address range: 0x100090c0 - 0x100090cd
int32_t function_100090c0(int32_t result) {
    // 0x100090c0
    g114 = result;
    return result;
}

// Address range: 0x100090d0 - 0x10009168
int32_t function_100090d0(void) {
    int32_t v1; // ebp
    g2 = &v1;
    g7 = g4;
    int32_t v2; // esi
    function_10001270(0, v2);
    int32_t v3 = *(int32_t *)(g4 + 44); // 0x100090e5
    int32_t v4 = g7; // 0x100090eb
    g4 = v4;
    if ((char)v3 == 0) {
        // 0x1000915a
        return v3 & -256;
    }
    // 0x10009103
    int32_t v5; // bp-264
    function_10002070(&v5, 260, v4 + 108);
    g4 = g7;
    int32_t v6 = function_10008380(VStdLib_GetICVarFactory()); // 0x10009111
    g4 = g7;
    function_10008c00(v6, (int32_t)"VEngineCvar007");
    g4 = g7;
    int32_t v7 = function_10008260((int32_t)&v5); // 0x1000912c
    g4 = g7;
    int32_t v8 = function_10008c00(v7, (int32_t)"VFileSystem017"); // 0x10009139
    *(int32_t *)(g7 + 100) = v8;
    if (v8 != 0) {
        // 0x10009161
        return v8 & -256 | 1;
    }
    // 0x1000915a
    return Error() & -256;
}

// Address range: 0x10009170 - 0x10009190
int32_t function_10009170(int32_t a1, int32_t a2, int32_t a3) {
    // 0x10009170
    g4 = a2;
    return function_10001660(a1, a2, a3, g2) == 0;
}

// Address range: 0x10009190 - 0x10009198
int32_t function_10009190(void) {
    // 0x10009190
    *(int32_t *)(g4 + 100) = 0;
    int32_t result; // eax
    return result;
}

// Address range: 0x100091a0 - 0x100091cd
int32_t function_100091a0(void) {
    int32_t v1 = g4; // 0x100091a1
    g7 = v1;
    if (function_100015f0(*(int32_t *)(v1 + 100)) != 0) {
        // 0x100091b3
        return 0;
    }
    int32_t v2 = g7; // 0x100091b7
    int32_t v3 = *(int32_t *)(v2 + 100); // 0x100091b7
    g4 = v3;
    g4 = *(int32_t *)(v2 + 104);
    function_10007160(v3, v2);
    g4 = *(int32_t *)(g7 + 104);
    g7 = v3;
    return function_10009010();
}

// Address range: 0x100091d0 - 0x1000921a
int32_t function_100091d0(void) {
    // 0x100091d0
    g7 = g4;
    int32_t v1; // esi
    int32_t v2 = function_10009050(g5, v1); // 0x100091d4
    g4 = g7;
    g5 = v2;
    if (function_10007150() != 6) {
        // 0x100091e7
        return g5;
    }
    // 0x100091ec
    if (function_100015f0(*(int32_t *)(g7 + 100)) != 0) {
        // 0x100091fc
        return 0;
    }
    int32_t v3 = *(int32_t *)(g7 + 100); // 0x10009201
    g4 = v3;
    g4 = *(int32_t *)(g7 + 104);
    function_10007160(v3, g7);
    int32_t v4 = *(int32_t *)(g7 + 104); // 0x1000920e
    g4 = v4;
    return *(int32_t *)(*(int32_t *)v4 + 28);
}

// Address range: 0x10009220 - 0x10009235
int32_t function_10009220(void) {
    // 0x10009220
    int32_t v1; // esi
    g7 = v1;
    return function_10008b50();
}

// Address range: 0x10009240 - 0x1000927e
// From class:    CSimpleLoggingListener
// Type:          virtual member function
int32_t function_10009240(int32_t a1) {
    int32_t v1 = g4; // 0x10009244
    int32_t result; // eax
    if (*(char *)(v1 + 4) == 0) {
        // 0x10009250
        result = _printf("%s", (char *)a1);
    }
    // 0x1000925e
    if (*(char *)(v1 + 5) != 0) {
        // 0x10009278
        return result;
    }
    int32_t v2 = Plat_IsInDebugSession(); // 0x10009264
    int32_t result2; // 0x1000927b
    if ((char)v2 != 0) {
        // 0x1000926e
        result2 = Plat_DebugString(a1);
    } else {
        result2 = v2;
    }
    // 0x10009278
    return result2;
}

// Address range: 0x10009280 - 0x100092ab
int32_t function_10009280(int32_t * a1) {
    int32_t v1 = g7; // 0x10009283
    g7 = g4;
    function_10008770(0, v1, g2);
    *(int32_t *)(g7 + 104) = (int32_t)a1;
    *(int32_t *)g7 = (int32_t)&g24;
    *(int32_t *)(g7 + 100) = 0;
    *(char *)(g7 + 108) = 0;
    int32_t result = g7; // 0x100092a4
    g7 = 0;
    g2 = v1;
    return result;
}

// Address range: 0x100092b0 - 0x100093f9
int32_t function_100092b0(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g123; // 0x100092b4
    if (v2 < 0) {
        // 0x100092bd
        g122++;
        g2 = v1;
        return Error();
    }
    int32_t v3 = g5; // bp-20
    int32_t v4 = &v3; // 0x100092dd
    int32_t v5; // ebx
    int32_t v6; // edi
    int32_t v7; // esi
    int32_t v8; // bp-8
    int32_t v9; // 0x10009378
    int32_t v10;
    int32_t v11; // 0x1000937a
    int32_t v12; // 0x10009385
    int32_t v13; // 0x100093f2
    int32_t result2; // 0x100093f8
    int32_t v14; // 0x100093c0
    int32_t v15; // 0x100093f7
    int32_t result; // 0x10009372
    if (v2 != 0) {
        if (a2 >= 1) {
            // 0x10009368
            v5 = a1;
            v8 = a2;
            v14 = g122;
            int32_t v16 = a1; // 0x100093789
            while (true) {
                // 0x10009370
                v6 = 0;
                v9 = v16;
                v11 = 0;
                while (true) {
                  lab_0x10009372:
                    // 0x10009372
                    result = *(int32_t *)(v11 + (int32_t)&g47);
                    g4 = *(int32_t *)v9;
                    v7 = *(int32_t *)(v11 + (int32_t)&g48);
                    *(int32_t *)(g8 - 4) = 0;
                    *(int32_t *)(g8 - 8) = result;
                    v12 = g123;
                    g4 = v12;
                    *(int32_t *)v7 = result;
                    int32_t v17 = g6 & -256; // 0x10009390
                    g6 = v17;
                    result = 0;
                    if (v12 < 1) {
                        goto lab_0x100093bb;
                    } else {
                        int32_t v18 = 0; // 0x100093a9
                        int32_t v19; // 0x100093b0
                        while (true) {
                            int32_t * v20 = (int32_t *)(8 * v18 + (int32_t)&g115); // 0x100093a0
                            int32_t v21 = v7; // 0x100093a0
                            int32_t v22; // 0x100093b2
                            if (*v20 == v21) {
                                // 0x100093a9
                                *v20 = v21;
                                v19 = g6 & -256 | 1;
                                g6 = v19;
                                v22 = result;
                            } else {
                                v19 = v17;
                                v22 = v18;
                            }
                            int32_t v23 = v22 + 1; // 0x100093b2
                            result = v23;
                            if (v23 >= v12) {
                                // break -> 0x100093b7
                                break;
                            }
                            v17 = v19;
                            v18 = v23;
                        }
                        if ((char)v19 != 0) {
                            goto lab_0x100093d9;
                        } else {
                            goto lab_0x100093bb;
                        }
                    }
                }
              lab_0x100093e4:;
                int32_t v24 = v10 + 4; // 0x100093e4
                v5 = v24;
                int32_t v25 = v8 - 1; // 0x100093e7
                v8 = v25;
                if (v25 == 0) {
                    // break -> 0x100093ec
                    break;
                }
                v16 = v24;
            }
            // 0x100093ec
            result2 = result;
            v15 = v1;
            v13 = g8;
        } else {
            result2 = a2;
            v15 = g2;
            v13 = v4;
        }
    } else {
        if (a2 >= 1) {
            // 0x100092ec
            v5 = a1;
            v8 = a2;
            char v26 = g122; // 0x10009335
            while (true) {
                // 0x100092f2
                v6 = 0;
                int32_t v27 = a1; // 0x1000930f
                int32_t v28 = 0; // 0x10009309
                int32_t v29;
                while (true) {
                    int32_t v30 = *(int32_t *)(v28 + (int32_t)&g48); // 0x10009300
                    v7 = v30;
                    result = *(int32_t *)(v28 + (int32_t)&g47);
                    g4 = *(int32_t *)v27;
                    if (*(int32_t *)v30 == 0) {
                        // 0x10009313
                        *(int32_t *)(g8 - 4) = 0;
                        *(int32_t *)(g8 - 8) = result;
                        *(int32_t *)v7 = result;
                        if (result != 0) {
                            int32_t v31 = g123; // 0x10009321
                            int32_t v32 = 8 * v31 + (int32_t)&g115; // 0x10009327
                            result = v32;
                            g123 = v31 + 1;
                            g4 = v26;
                            *(int32_t *)v32 = v7;
                            *(int32_t *)(result + 4) = g4;
                        }
                    }
                    int32_t v33 = v6 + 8; // 0x10009340
                    v6 = v33;
                    v29 = v5;
                    if (v33 >= 432) {
                        // break -> 0x1000934b
                        break;
                    }
                    v27 = v29;
                    v28 = v33;
                }
                int32_t v34 = v29 + 4; // 0x1000934b
                v5 = v34;
                int32_t v35 = v8 - 1; // 0x1000934e
                v8 = v35;
                if (v35 == 0) {
                    // break -> 0x10009353
                    break;
                }
                a1 = v34;
            }
            // 0x10009353
            g122 = v26 + 1;
            g5 = *(int32_t *)g8;
            g7 = *(int32_t *)(g8 + 4);
            g3 = *(int32_t *)(g8 + 8);
            g2 = v1;
            return result;
        }
        result2 = a2;
        v15 = g2;
        v13 = v4;
    }
    // 0x100093ec
    g122++;
    g5 = *(int32_t *)v13;
    g7 = *(int32_t *)(v13 + 4);
    g3 = *(int32_t *)(v13 + 8);
    g2 = v15;
    return result2;
  lab_0x100093bb:;
    int32_t v36 = v7; // 0x100093bb
    if (*(int32_t *)v36 != 0) {
        // 0x100093c0
        g6 = v14;
        int32_t v37 = 8 * v12 + (int32_t)&g115; // 0x100093c6
        result = v37;
        int32_t v38 = v12 + 1; // 0x100093cd
        g4 = v38;
        g123 = v38;
        *(int32_t *)v37 = v36;
        *(int32_t *)(result + 4) = g6;
    }
    goto lab_0x100093d9;
  lab_0x100093d9:;
    int32_t v39 = v6 + 8; // 0x100093d9
    v6 = v39;
    v10 = v5;
    if (v39 >= 432) {
        // break -> 0x100093e4
        goto lab_0x100093e4;
    }
    v9 = v10;
    v11 = v39;
    goto lab_0x10009372;
}

// Address range: 0x10009400 - 0x1000943d
int32_t function_10009400(void) {
    char v1 = g122; // 0x10009400
    int32_t v2 = (int32_t)v1 - 1; // 0x10009406
    g122 = v2;
    if (v1 < 1) {
        // 0x1000943c
        return g1;
    }
    // 0x1000940f
    g4 = g123;
    int32_t v3 = 0; // eax
    if (g123 < 1) {
        // 0x1000943c
        return 0;
    }
    int32_t v4 = 0; // 0x10009429
    int32_t result; // 0x10009436
    while (true) {
        int32_t v5 = 8 * v4; // 0x10009420
        int32_t v6; // 0x10009436
        if (*(int32_t *)(v5 + (int32_t)&g116) == v2) {
            int32_t v7 = *(int32_t *)(v5 + (int32_t)&g115); // 0x10009429
            *(int32_t *)v7 = 0;
            v6 = v3;
        } else {
            v6 = v4;
        }
        // 0x10009436
        result = v6 + 1;
        v3 = result;
        if (result >= g123) {
            // break -> 0x1000943b
            break;
        }
        // 0x10009436
        v4 = result;
    }
    // 0x1000943c
    return result;
}

// Address range: 0x1000943e - 0x10009444
int32_t function_1000943e(void) {
    // 0x1000943e
    return WriteMiniDump();
}

// Address range: 0x10009450 - 0x1000946b
int32_t function_10009450(int32_t a1) {
    int32_t v1 = a1 + 1; // 0x10009456
    g6 = v1;
    unsigned char v2 = *(char *)a1; // 0x10009460
    int32_t v3 = (int32_t)v2 | g4 & -256; // 0x10009460
    g4 = v3;
    int32_t v4 = a1 + 1; // 0x10009462
    while (v2 != 0) {
        // 0x10009460
        a1 = v4;
        v2 = *(char *)a1;
        v3 = (int32_t)v2 | v3 & -256;
        g4 = v3;
        v4 = a1 + 1;
    }
    // 0x10009467
    return v4 - v1;
}

// Address range: 0x10009470 - 0x100094a7
int32_t function_10009470(int32_t a1, int32_t a2) {
    // 0x10009470
    g6 = a2;
    g4 = a1;
    int32_t v1 = g1; // 0x10009480
    uint32_t v2; // 0x100094a0
    bool v3; // 0x100094a0
    while (true) {
        unsigned char v4 = *(char *)a1; // 0x10009480
        int32_t v5 = v1 & -256; // 0x10009480
        unsigned char v6 = *(char *)a2; // 0x10009482
        if (v4 != v6) {
            v3 = v4 < v6;
            v2 = (int32_t)v4 | v5;
            // break -> 0x100094a0
            break;
        }
        if (v4 == 0) {
            // 0x1000949c
            return 0;
        }
        unsigned char v7 = *(char *)(a1 + 1); // 0x1000948a
        int32_t v8 = (int32_t)v7 | v5; // 0x1000948a
        unsigned char v9 = *(char *)(a2 + 1); // 0x1000948d
        if (v7 != v9) {
            v3 = v7 < v9;
            v2 = v8;
            // break -> 0x100094a0
            break;
        }
        int32_t v10 = a1 + 2; // 0x10009492
        g4 = v10;
        int32_t v11 = a2 + 2; // 0x10009495
        g6 = v11;
        if (v7 == 0) {
            // 0x1000949c
            return 0;
        }
        a2 = v11;
        v1 = v8;
        a1 = v10;
    }
    int32_t v12 = v3; // 0x100094a0
    uint32_t v13 = v12 + v2; // 0x100094a0
    int32_t v14 = v3; // 0x100094a0
    bool v15 = v3 ? v2 < v14 - v12 | v13 != -1 : v2 < v13; // 0x100094a0
    return v14 - (int32_t)!v15;
}

// Address range: 0x100094b0 - 0x1000952e
int32_t function_100094b0(int32_t * a1, char * a2) {
    int32_t v1 = (int32_t)a1;
    g6 = v1;
    int32_t v2 = g5; // 0x100094ba
    int32_t v3 = (int32_t)a2; // 0x100094fb
    int32_t result3; // 0x1000952d
    while (true) {
        unsigned char v4 = *(char *)v1; // 0x100094c0
        int32_t result = v4; // 0x100094c0
        unsigned char v5 = *(char *)v3; // 0x100094c3
        int32_t v6 = v5; // 0x100094c3
        g4 = v6;
        int32_t v7; // 0x10009528
        int32_t v8; // 0x10009528
        if (v4 != v5) {
            if (v5 == 0) {
                result3 = result;
                // break -> 0x1000952a
                break;
            }
            int32_t v9; // 0x100094ec
            if (result < 90 || v4 == 90) {
                // 0x100094de
                v9 = result + 32;
            } else {
                v9 = result;
            }
            int32_t v10; // 0x100094e9
            if (v6 < 90 || v5 == 90) {
                // 0x100094e9
                v10 = v6 + 32;
                g4 = v10;
            } else {
                v10 = v6;
            }
            if (v9 != v10) {
                v8 = v10;
                v7 = v9;
                goto lab_0x10009528;
            }
        } else {
            if (v4 == 0) {
                // 0x100094ce
                g5 = v2;
                return result;
            }
        }
        unsigned char v11 = *(char *)(v1 + 1); // 0x100094f0
        int32_t result2 = v11; // 0x100094f0
        unsigned char v12 = *(char *)(v3 + 1); // 0x100094f4
        int32_t v13 = v12; // 0x100094f4
        g4 = v13;
        int32_t v14 = v1 + 2; // 0x100094f8
        g6 = v14;
        int32_t v15 = v3 + 2; // 0x100094fb
        if (v11 != v12) {
            if (v12 == 0) {
                result3 = result2;
                // break -> 0x1000952a
                break;
            }
            int32_t v16; // 0x10009524
            if (result2 < 90 || v11 == 90) {
                // 0x10009516
                v16 = result2 + 32;
            } else {
                v16 = result2;
            }
            int32_t v17; // 0x10009521
            if (v13 < 90 || v12 == 90) {
                // 0x10009521
                v17 = v13 + 32;
                g4 = v17;
            } else {
                v17 = v13;
            }
            if (v16 == v17) {
                v3 = v15;
                v1 = v14;
                // continue -> 0x100094c0
                continue;
            }
            v8 = v17;
            v7 = v16;
          lab_0x10009528:
            // 0x1000952a
            g5 = v2;
            return v7 - v8;
        }
        if (v11 == 0) {
            // 0x10009506
            g5 = v2;
            return result2;
        }
        v3 = v15;
        v1 = v14;
    }
    // 0x1000952a
    g5 = v2;
    return result3;
}

// Address range: 0x10009530 - 0x10009539
char * function_10009530(char * String) {
    // 0x10009530
    return __strlwr(String);
}

// Address range: 0x10009540 - 0x10009577
int32_t function_10009540(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g7; // 0x10009543
    if (a3 < 1) {
        // 0x10009562
        g7 = v1;
        return 0;
    }
    // 0x1000954b
    g6 = a2;
    g4 = a1;
    int32_t v2 = g1; // 0x10009551
    char * v3; // 0x10009551
    char * v4; // 0x10009554
    while (true) {
        // 0x10009551
        v3 = (char *)a1;
        unsigned char v5 = *v3; // 0x10009551
        int32_t v6 = a3 - 1; // 0x10009553
        v4 = (char *)a2;
        if (v5 != *v4) {
            // break -> 0x10009567
            break;
        }
        if (v5 == 0) {
            // 0x10009562
            g7 = v1;
            return 0;
        }
        int32_t v7 = a1 + 1; // 0x1000955c
        g4 = v7;
        int32_t v8 = a2 + 1; // 0x1000955d
        g6 = v8;
        if (v6 >= 0 != v6 != 0) {
            // 0x10009562
            g7 = v1;
            return 0;
        }
        a2 = v8;
        a3 = v6;
        v2 = (int32_t)v5 | v2 & -256;
        a1 = v7;
    }
    char v9 = *v3; // 0x10009567
    g4 = 0;
    char v10 = *v4; // 0x1000956b
    char v11 = v9 - v10; // 0x1000956b
    g7 = v1;
    g4 = v11 < 0 == ((v11 ^ v9) & (v10 ^ v9)) < 0;
    return v11 < 0 == ((v11 ^ v9) & (v10 ^ v9)) < 0 ? 1 : -1;
}

// Address range: 0x10009580 - 0x10009633
int32_t function_10009580(int32_t * a1, int32_t * a2) {
    int32_t v1 = g7; // 0x10009587
    if (a1 == NULL) {
        // 0x1000962c
        g7 = v1;
        return 0;
    }
    if (a2 == NULL) {
        // 0x1000962c
        g7 = v1;
        return 0;
    }
    unsigned char v2 = *(char *)a1; // 0x1000959b
    int32_t v3 = (int32_t)v2 | g4 & -256; // 0x1000959b
    g4 = v3;
    int32_t v4 = g3; // 0x1000959d
    int32_t v5 = g5; // 0x1000959e
    if (v2 == 0) {
      lab_0x10009623:
        // 0x10009623
        g5 = v5;
        g3 = v4;
        g7 = v1;
        return 0;
    }
    unsigned char v6 = *(char *)a2; // 0x100095a7
    int32_t v7 = v6; // 0x100095a7
    int32_t v8 = (int32_t)a2 + 1; // 0x100095ce
    int32_t result = (int32_t)a1; // 0x1000961e
    int32_t v9 = v7 | v4 & -256; // 0x100095c3
    while (true) {
        int32_t v10 = v3 - 65; // 0x100095b2
        int32_t v11; // 0x100095ba
        if ((char)v10 < 26) {
            // 0x100095ba
            v11 = v3 + 32 & 255 | v3 & -256;
            g4 = v11;
        } else {
            v11 = v3;
        }
        int32_t v12; // 0x100095ce
        if (v6 < 91) {
            // 0x100095c3
            v12 = v9 + 32;
        } else {
            // 0x100095c8
            v12 = v10 & -256 | v9 & 255;
        }
        // 0x100095ca
        g6 = v12;
        int32_t v13; // 0x100095c313
        int32_t v14; // 0x1000961b
        if ((char)v11 == (char)v12) {
            unsigned char v15 = *(char *)v8; // 0x100095ce
            int32_t v16 = (int32_t)v15 | v12 & -256; // 0x100095ce
            g6 = v16;
            if (v15 == 0) {
                // 0x10009609
                g5 = v5;
                g3 = v4;
                g7 = v1;
                return result;
            }
            int32_t v17 = result - v8; // 0x100095d8
            g4 = v17;
            int32_t v18 = v17; // 0x100095e0
            int32_t v19; // 0x100095ef
            int32_t v20; // 0x100095f2
            while (true) {
                unsigned char v21 = *(char *)(v8 + v17 + 1); // 0x100095e0
                int32_t v22 = v18 & -256; // 0x100095e0
                int32_t v23 = (int32_t)v21 | v22; // 0x100095e0
                g4 = v23;
                if (v21 == 0) {
                    // break (via goto) -> 0x10009623
                    goto lab_0x10009623;
                }
                if (v21 < 91) {
                    // 0x100095ef
                    v19 = (int32_t)(v21 + 32) | v22;
                    g4 = v19;
                } else {
                    v19 = v23;
                }
                // 0x100095f2
                v20 = v16 - 65;
                int32_t v24; // 0x100095fa
                if ((char)v20 < 26) {
                    // 0x100095fa
                    v24 = v16 + 32 & 255 | v16 & -256;
                    g6 = v24;
                } else {
                    v24 = v16;
                }
                if ((char)v19 != (char)v24) {
                    // break -> 0x10009610
                    break;
                }
                int32_t v25 = v8 + 1; // 0x10009601
                unsigned char v26 = *(char *)v25; // 0x10009601
                int32_t v27 = (int32_t)v26 | v24 & -256; // 0x10009601
                g6 = v27;
                if (v26 == 0) {
                    // 0x10009609
                    g5 = v5;
                    g3 = v4;
                    g7 = v1;
                    return result;
                }
                v16 = v27;
                v18 = v19;
                v8 = v25;
            }
            // 0x10009610
            if (*(char *)v8 == 0) {
                // 0x10009609
                g5 = v5;
                g3 = v4;
                g7 = v1;
                return result;
            }
            // 0x10009615
            v14 = v19;
            v13 = v20 & -256 | v7;
        } else {
            v14 = v11;
            v13 = v9;
        }
        int32_t v28 = result + 1; // 0x1000961b
        unsigned char v29 = *(char *)v28; // 0x1000961b
        int32_t v30 = (int32_t)v29 | v14 & -256; // 0x1000961b
        g4 = v30;
        if (v29 == 0) {
            // break -> 0x10009623
            break;
        }
        result = v28;
        v9 = v13;
        v3 = v30;
    }
    // 0x10009623
    g5 = v5;
    g3 = v4;
    g7 = v1;
    return 0;
}

// Address range: 0x10009640 - 0x10009649
int32_t function_10009640(void) {
    // 0x10009640
    return function_10009580(&g169, &g169);
}

// Address range: 0x10009650 - 0x100096b2
int32_t function_10009650(int32_t a1, int32_t * a2, uint32_t a3, int32_t a4) {
    // 0x10009650
    g4 = a1;
    int32_t v1 = a1; // 0x10009662
    unsigned char v2 = *(char *)v1; // 0x10009660
    int32_t v3 = (int32_t)v2 | g6 & -256; // 0x10009660
    int32_t v4 = v1 + 1; // 0x10009662
    g4 = v4;
    while (v2 != 0) {
        // 0x10009660
        v1 = v4;
        v2 = *(char *)v1;
        v3 = (int32_t)v2 | v3 & -256;
        v4 = v1 + 1;
        g4 = v4;
    }
    int32_t v5 = (int32_t)a2;
    int32_t v6 = v4 - (a1 + 1); // 0x1000966a
    g4 = v5;
    int32_t v7 = v3; // 0x10009673
    int32_t v8 = v5; // 0x10009675
    unsigned char v9 = *(char *)v8; // 0x10009673
    int32_t v10 = v8 + 1; // 0x10009675
    g4 = v10;
    while (v9 != 0) {
        // 0x10009673
        v7 = (int32_t)v9 | v7 & -256;
        v8 = v10;
        v9 = *(char *)v8;
        v10 = v8 + 1;
        g4 = v10;
    }
    int32_t v11 = v10 - (v5 + 1); // 0x1000967d
    g4 = v11;
    int32_t v12; // 0x1000968d
    if (a4 > -1) {
        if (v11 > a4) {
            // 0x10009688
            g4 = a4;
            v12 = a4;
        } else {
            v12 = v11;
        }
    } else {
        v12 = v11;
    }
    int32_t v13 = v12 + v6; // 0x1000968d
    g6 = v13;
    int32_t v14; // 0x10009698
    if (v13 >= a3) {
        // 0x10009694
        v14 = a3 - v6 - 1;
        g4 = v14;
    } else {
        v14 = v12;
    }
    int32_t result; // 0x100096a0
    if (v14 != 0) {
        // 0x1000969d
        result = (int32_t)_strncat((char *)a1, (char *)a2, v14);
        *(char *)(result - 1 + a3) = 0;
    } else {
        result = a1;
    }
    // 0x100096ad
    return result;
}

// Address range: 0x100096c0 - 0x100096f3
int32_t function_100096c0(int32_t * a1) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = v1; // 0x100096d2
    unsigned char v3 = *(char *)v2; // 0x100096d0
    int32_t v4 = g4 & -256; // 0x100096d0
    int32_t v5 = (int32_t)v3 | v4; // 0x100096d0
    g4 = v5;
    int32_t v6 = v2 + 1; // 0x100096d2
    while (v3 != 0) {
        // 0x100096d0
        v2 = v6;
        v3 = *(char *)v2;
        v4 = v5 & -256;
        v5 = (int32_t)v3 | v4;
        g4 = v5;
        v6 = v2 + 1;
    }
    int32_t result = v6 - (v1 + 1); // 0x100096d7
    if (result < 1) {
        // 0x100096f0
        return result;
    }
    char * v7 = (char *)(v1 - 1 + result); // 0x100096dd
    unsigned char v8 = *v7; // 0x100096dd
    g4 = (int32_t)v8 | v4;
    if (v8 == 92) {
        // 0x100096eb
        *v7 = 0;
        // 0x100096f0
        return result;
    }
    if (v8 != 47) {
        // 0x100096f0
        return result;
    }
    // 0x100096eb
    *v7 = 0;
    // 0x100096f0
    return result;
}

// Address range: 0x10009700 - 0x10009739
int32_t function_10009700(int32_t a1) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g7; // bp-8
    int32_t v3 = a1 + 1; // 0x10009709
    g6 = v3;
    int32_t v4 = a1; // 0x10009712
    unsigned char v5 = *(char *)v4; // 0x10009710
    int32_t v6 = (int32_t)v5 | g4 & -256; // 0x10009710
    g4 = v6;
    int32_t v7 = v4 + 1; // 0x10009712
    while (v5 != 0) {
        // 0x10009710
        v4 = v7;
        v5 = *(char *)v4;
        v6 = (int32_t)v5 | v6 & -256;
        g4 = v6;
        v7 = v4 + 1;
    }
    int32_t result = v7 - v3 - 1; // 0x10009719
    int32_t result2 = result; // eax
    if (result < 1) {
        // 0x10009736
        return result;
    }
    int32_t v8 = v6; // 0x10009720
    int32_t v9; // 0x10009732
    while (true) {
        unsigned char v10 = *(char *)(result + a1); // 0x10009720
        int32_t v11 = (int32_t)v10 | v8 & -256; // 0x10009720
        g4 = v11;
        if (v10 == 92) {
            v9 = result;
            // break -> 0x10009732
            break;
        }
        if (v10 == 47) {
            v9 = result;
            // break -> 0x10009732
            break;
        }
        int32_t v12 = result - 1; // 0x1000972d
        result2 = v12;
        if (v12 >= 0 != v12 != 0) {
            v9 = v12;
            // break -> 0x10009732
            break;
        }
        v8 = v11;
        result = v12;
    }
    // 0x10009732
    *(char *)(v9 + a1) = 0;
    // 0x10009736
    g7 = v2;
    g2 = v1;
    return result2;
}

// Address range: 0x10009740 - 0x10009766
int32_t function_10009740(int32_t result, int32_t a2) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = result; // eax
    if (*(char *)result == 0) {
        // 0x10009764
        return result;
    }
    // 0x1000974b
    g6 = g6 & -256 | a2 & 255;
    int32_t v3; // 0x1000975e
    char * v4; // 0x10009750
    while (true) {
      lab_0x10009750:
        // 0x10009750
        v4 = (char *)result;
        unsigned char v5 = *v4; // 0x10009750
        g4 = g4 & -256 | (int32_t)v5;
        if (v5 == 47) {
            goto lab_0x1000975c;
        } else {
            if (v5 != 92) {
                v3 = result;
                goto lab_0x1000975e;
            } else {
                goto lab_0x1000975c;
            }
        }
    }
  lab_0x10009764:
    // 0x10009764
    g2 = v1;
    int32_t result2; // 0x1000975e
    return result2;
  lab_0x1000975c:
    // 0x1000975c
    *v4 = (char)g6;
    v3 = v2;
    goto lab_0x1000975e;
  lab_0x1000975e:
    // 0x1000975e
    result2 = v3 + 1;
    v2 = result2;
    if (*(char *)result2 == 0) {
        // break -> 0x10009764
        goto lab_0x10009764;
    }
    result = result2;
    goto lab_0x10009750;
}

// Address range: 0x10009770 - 0x100097b6
int32_t function_10009770(int32_t * a1) {
    int32_t v1 = (int32_t)a1;
    g4 = v1;
    int32_t v2 = v1; // 0x10009782
    unsigned char v3 = *(char *)v2; // 0x10009780
    int32_t v4 = g6 & -256; // 0x10009780
    int32_t v5 = (int32_t)v3 | v4; // 0x10009780
    g6 = v5;
    int32_t v6 = v2 + 1; // 0x10009782
    while (v3 != 0) {
        // 0x10009780
        v2 = v6;
        v3 = *(char *)v2;
        v4 = v5 & -256;
        v5 = (int32_t)v3 | v4;
        g6 = v5;
        v6 = v2 + 1;
    }
    int32_t v7 = v6 - (v1 + 1) - 1; // 0x10009789
    if (v7 == 0) {
        // 0x100097b4
        return 0;
    }
    // 0x10009792
    g6 = v4 | 46;
    int32_t result = v7 + v1; // 0x100097a6
    while (true) {
        int32_t v8 = result - 1; // 0x10009794
        if (*(char *)v8 == 46) {
            // break -> 0x100097a2
            break;
        }
        if (v8 == v1) {
            // 0x1000979e
            return 0;
        }
        result = v8;
    }
    if (result == v1) {
        // 0x100097b4
        return 0;
    }
    unsigned char v9 = *(char *)result; // 0x100097a6
    g4 = (int32_t)v9 | v1 & -256;
    if (v9 == 92) {
        // 0x100097b4
        return 0;
    }
    if (v9 != 47) {
        // 0x100097b4
        return result;
    }
    // 0x100097b4
    return 0;
}

// Address range: 0x100097c0 - 0x10009902
int32_t function_100097c0(int32_t a1, int32_t a2) {
    int32_t v1 = g4 & -256; // 0x100097c9
    g4 = v1;
    int32_t v2 = a1; // eax
    int32_t v3 = a1; // esi
    int32_t v4; // 0x100097d3
    int32_t v5; // 0x100097f4
    unsigned char v6; // 0x100097d3
    int32_t v7; // 0x100097e9
    if (*(char *)a1 != 0) {
        v7 = a1;
        v4 = a1;
        while (true) {
          lab_0x100097d3:
            // 0x100097d3
            v6 = *(char *)v4;
            g3 = (int32_t)v6 | g3 & -256;
            if (v6 == 92) {
                goto lab_0x100097e3;
            } else {
                if (v6 == 47) {
                    goto lab_0x100097e3;
                } else {
                    // 0x100097df
                    g6 &= -256;
                    goto lab_0x100097e9;
                }
            }
        }
    } else {
        v5 = a1;
    }
  lab_0x100097f4:
    // 0x100097f4
    *(char *)v5 = 0;
    v2 = a1;
    int32_t v8 = a1; // edx
    int32_t v9; // 0x1000981e
    int32_t v10; // 0x1000982e
    int32_t v11; // 0x10009826
    unsigned char v12; // 0x10009800
    int32_t v13; // 0x10009823
    if (*(char *)a1 != 0) {
        v13 = a1;
        v9 = a1;
        while (true) {
          lab_0x10009800:
            // 0x10009800
            v12 = *(char *)v9;
            g3 = g3 & -256 | (int32_t)v12;
            if (v12 != 46) {
                goto lab_0x10009823;
            } else {
                unsigned char v14 = *(char *)(v9 + 1); // 0x10009807
                g4 = g4 & -256 | (int32_t)v14;
                if (v14 == 92) {
                    goto lab_0x10009814;
                } else {
                    if (v14 != 47) {
                        goto lab_0x10009823;
                    } else {
                        goto lab_0x10009814;
                    }
                }
            }
        }
      lab_0x1000982c:
        // 0x1000982c
        v10 = v11;
    } else {
        v10 = a1;
    }
    // 0x1000982c
    *(char *)v10 = 0;
    int32_t v15 = a1; // 0x10009831
    int32_t v16 = v15 + 1; // 0x10009831
    v8 = v16;
    unsigned char v17 = *(char *)v15; // 0x10009834
    int32_t v18 = (int32_t)v17 | g4 & -256; // 0x10009834
    g4 = v18;
    int32_t v19 = v15 + 1; // 0x10009836
    while (v17 != 0) {
        // 0x10009834
        v15 = v19;
        v17 = *(char *)v15;
        v18 = (int32_t)v17 | v18 & -256;
        g4 = v18;
        v19 = v15 + 1;
    }
    int32_t v20 = v19 - v16; // 0x1000983b
    if (v20 > 2) {
        // 0x10009842
        if (*(char *)(v20 - 1 + a1) != 46) {
            goto lab_0x1000985a;
        } else {
            int32_t v21 = a1 + v20 - 2; // 0x10009849
            g4 = v21;
            char * v22 = (char *)v21; // 0x1000984d
            unsigned char v23 = *v22; // 0x1000984d
            if (v23 == 92) {
                // 0x10009857
                *v22 = 0;
                goto lab_0x1000985a;
            } else {
                if (v23 != 47) {
                    goto lab_0x1000985a;
                } else {
                    // 0x10009857
                    *v22 = 0;
                    goto lab_0x1000985a;
                }
            }
        }
    } else {
        goto lab_0x1000985a;
    }
  lab_0x100098ec:;
    // 0x100098ec
    char * v24; // 0x100098e0
    *v24 = (char)(v8 & -256 | a2 & 255);
    int32_t v25 = v2; // 0x100098ee
    goto lab_0x100098ee;
  lab_0x100098ee:;
    int32_t v26 = v25 + 1; // 0x100098ee
    v2 = v26;
    int32_t v27; // 0x100098f6
    if (*(char *)v26 == 0) {
        v27 = v26;
        // break -> 0x100098f4
        goto lab_0x100098f4;
    }
    int32_t v28 = v26; // 0x100098ec
    goto lab_0x100098e0;
  lab_0x100098c9:;
    int32_t v30; // 0x1000989431
    int32_t v31 = v30; // 0x1000989432
    int32_t v32;
    int32_t v33 = v32;
    int32_t v34; // 0x1000986c
    int32_t v35 = v34; // 0x1000986c29
    goto lab_0x100098ca;
  lab_0x100098ca:;
    // 0x100098ca
    int32_t v36; // 0x100098d2
    if (*(char *)v33 == 0) {
        v36 = v31;
        // break -> 0x100098cf
        goto lab_0x100098cf;
    }
    v30 = v31;
    int32_t v37 = v33; // 0x100098c9
    v34 = v35;
    goto lab_0x10009861;
  lab_0x1000987d:;
    int32_t v41 = v37 + 2; // 0x1000987d
    unsigned char v42 = *(char *)v41; // 0x1000987d
    int32_t v38; // 0x1000987d
    g4 = (int32_t)v42 | v38 & -256;
    if (v42 == 0) {
        goto lab_0x10009891;
    } else {
        if (v42 == 92) {
            goto lab_0x10009891;
        } else {
            if (v42 != 47) {
                goto lab_0x100098c9;
            } else {
                goto lab_0x10009891;
            }
        }
    }
  lab_0x10009891:;
    int32_t v43 = v37; // 0x100098fd
    int32_t v44 = v37 - 2; // 0x100098a2
    while (true) {
        // 0x10009894
        g4 = v44;
        if (v44 < v30) {
            // 0x100098fb
            g7 = *(int32_t *)(g8 + 4);
            return v43 & -256;
        }
        unsigned char v45 = *(char *)v44; // 0x10009898
        int32_t v46 = (int32_t)v45 | v43 & -256; // 0x10009898
        if (v45 == 92) {
            // break -> 0x100098a5
            break;
        }
        if (v45 == 47) {
            // break -> 0x100098a5
            break;
        }
        // 0x100098a2
        v43 = v46;
        v44--;
    }
    int32_t v47 = v37 + 3; // 0x100098a7
    v3 = v47;
    int32_t v48 = v41; // 0x100098b2
    unsigned char v49 = *(char *)v48; // 0x100098b0
    int32_t v50 = (int32_t)v49 | v8 & -256; // 0x100098b0
    v8 = v50;
    int32_t v51 = v48 + 1; // 0x100098b2
    while (v49 != 0) {
        // 0x100098b0
        v48 = v51;
        v49 = *(char *)v48;
        v50 = (int32_t)v49 | v50 & -256;
        v8 = v50;
        v51 = v48 + 1;
    }
    // 0x100098b7
    *(int32_t *)(g8 - 4) = v51 - v47 + 1;
    *(int32_t *)(g8 - 8) = v41;
    *(int32_t *)(g8 - 12) = g4;
    v2 = (int32_t)_memcpy(&g169, &g169, (int32_t)&g169);
    v31 = a1;
    v33 = a1;
    v35 = a1;
    goto lab_0x100098ca;
  lab_0x10009823:
    // 0x10009823
    *(char *)v13 = v12;
    int32_t v52 = v2 + 1; // 0x10009825
    v2 = v52;
    v11 = v8 + 1;
    v8 = v11;
    goto lab_0x10009827;
  lab_0x10009827:
    // 0x10009827
    if (*(char *)v52 == 0) {
        // break -> 0x1000982c
        goto lab_0x1000982c;
    }
    v13 = v11;
    v9 = v52;
    goto lab_0x10009800;
  lab_0x10009814:
    // 0x10009814
    if (v9 == a1) {
        goto lab_0x1000981e;
    } else {
        // 0x10009818
        if (*(char *)(v9 - 1) == 46) {
            goto lab_0x10009823;
        } else {
            goto lab_0x1000981e;
        }
    }
  lab_0x1000981e:;
    int32_t v53 = v9 + 2; // 0x1000981e
    v2 = v53;
    v52 = v53;
    v11 = v13;
    goto lab_0x10009827;
  lab_0x100097e3:;
    int32_t v54 = g6 & -256 | 1; // 0x100097e3
    g6 = v54;
    int32_t v55; // 0x100097ec
    int32_t v56; // 0x100097e913
    int32_t v57; // 0x100097f0
    if ((char)v1 != 0) {
        v57 = v1;
        v55 = v4;
        v56 = v7;
        goto lab_0x100097ec;
    } else {
        goto lab_0x100097e9;
    }
  lab_0x100097ec:;
    int32_t v58 = v55 + 1; // 0x100097ec
    v2 = v58;
    int32_t v59 = v54 & 255 | v57 & -256; // 0x100097f0
    g4 = v59;
    if (*(char *)v58 == 0) {
        v5 = v56;
        // break -> 0x100097f4
        goto lab_0x100097f4;
    }
    // 0x100097ec
    v7 = v56;
    v4 = v58;
    v1 = v59;
    goto lab_0x100097d3;
  lab_0x100097e9:
    // 0x100097e9
    *(char *)v7 = v6;
    int32_t v60 = v3 + 1; // 0x100097eb
    v3 = v60;
    v57 = g4;
    v54 = g6;
    v55 = v2;
    v56 = v60;
    goto lab_0x100097ec;
  lab_0x1000985a:
    // 0x1000985a
    if (*(char *)a1 != 0) {
        v30 = a1;
        v37 = a1;
        v34 = a1;
        while (true) {
          lab_0x10009861:
            // 0x10009861
            v32 = v37 + 1;
            if (*(char *)v37 != 46) {
                goto lab_0x100098c9;
            } else {
                // 0x10009866
                if (*(char *)v32 != 46) {
                    goto lab_0x100098c9;
                } else {
                    if (v37 == v34) {
                        // 0x1000986c
                        v38 = g4;
                        goto lab_0x1000987d;
                    } else {
                        unsigned char v39 = *(char *)(v37 - 1); // 0x10009870
                        int32_t v40 = g4 & -256 | (int32_t)v39; // 0x10009870
                        g4 = v40;
                        if (v39 == 92) {
                            v38 = v40;
                            goto lab_0x1000987d;
                        } else {
                            if (v39 != 47) {
                                goto lab_0x100098c9;
                            } else {
                                v38 = v40;
                                goto lab_0x1000987d;
                            }
                        }
                    }
                }
            }
        }
    } else {
        v36 = a1;
    }
  lab_0x100098cf:
    // 0x100098cf
    v2 = v36;
    if (*(char *)v36 != 0) {
        // 0x100098d6
        v28 = v36;
        while (true) {
          lab_0x100098e0:
            // 0x100098e0
            v24 = (char *)v28;
            unsigned char v29 = *v24; // 0x100098e0
            g4 = g4 & -256 | (int32_t)v29;
            if (v29 == 47) {
                goto lab_0x100098ec;
            } else {
                if (v29 != 92) {
                    v25 = v28;
                    goto lab_0x100098ee;
                } else {
                    goto lab_0x100098ec;
                }
            }
        }
    } else {
        v27 = v36;
    }
  lab_0x100098f4:
    // 0x100098f4
    g7 = *(int32_t *)(g8 + 4);
    return v27 & -256 | 1;
}

// Address range: 0x10009910 - 0x1000995c
int32_t function_10009910(int32_t * a1, uint32_t a2) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // bp-4
    int32_t v3 = g5; // bp-12
    int32_t v4 = v1 + 1; // 0x1000991a
    g6 = v4;
    int32_t v5 = v1; // 0x10009922
    unsigned char v6 = *(char *)v5; // 0x10009920
    int32_t v7 = (int32_t)v6 | g4 & -256; // 0x10009920
    g4 = v7;
    int32_t v8 = v5 + 1; // 0x10009922
    while (v6 != 0) {
        // 0x10009920
        v5 = v8;
        v6 = *(char *)v5;
        v7 = (int32_t)v6 | v7 & -256;
        g4 = v7;
        v8 = v5 + 1;
    }
    int32_t result = v8 - v4; // 0x10009927
    if (result < 1) {
        // 0x10009958
        return result;
    }
    unsigned char v9 = *(char *)(v1 - 1 + result); // 0x1000992f
    int32_t result2 = (int32_t)v9 | result & -256; // 0x1000992f
    if (v9 == 92) {
        // 0x10009958
        return result2;
    }
    if (v9 == 47) {
        // 0x10009958
        return result2;
    }
    int32_t v10 = result + 1; // 0x1000993b
    int32_t result3 = v10; // eax
    if (v10 >= a2) {
        // 0x10009943
        result3 = Error();
    }
    // 0x10009952
    *(int16_t *)(v1 + result) = 92;
    // 0x10009958
    g5 = v3;
    g2 = v2;
    return result3;
}

// Address range: 0x10009960 - 0x10009982
int32_t function_10009960(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x10009960
    g4 = a1;
    char v1 = *(char *)a1; // 0x10009966
    int32_t result = g1 & -256; // 0x10009966
    if (v1 != 0) {
        // 0x1000996c
        if (*(char *)(a1 + 1) == 58) {
            // 0x1000997e
            return result | 1;
        }
    }
    if (v1 == 47) {
        // 0x1000997e
        return result | 1;
    }
    if (v1 == 92) {
        // 0x1000997e
        return result | 1;
    }
    // 0x1000997a
    return result;
}

// Address range: 0x10009990 - 0x10009a3e
int32_t function_10009990(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = g2; // bp-4
    if (a5 == 0) {
        // 0x10009a3b
        return g1;
    }
    int32_t v2 = g3; // 0x1000999f
    int32_t v3 = a1 + 1; // 0x100099a5
    g6 = v3;
    unsigned char v4 = *(char *)a1; // 0x100099a8
    int32_t v5 = (int32_t)v4 | g4 & -256; // 0x100099a8
    g4 = v5;
    int32_t v6 = a1 + 1; // 0x100099aa
    while (v4 != 0) {
        // 0x100099a8
        a1 = v6;
        v4 = *(char *)a1;
        v5 = (int32_t)v4 | v5 & -256;
        g4 = v5;
        v6 = a1 + 1;
    }
    // 0x100099af
    g4 = a2;
    uint32_t result = v6 - v3; // 0x100099b2
    if (a2 >= 0) {
        if (result <= a2) {
            // 0x100099dc
            g4 = a4;
            g3 = v2;
            *(char *)a4 = 0;
            g2 = v1;
            return result;
        }
    } else {
        int32_t v7 = -a2; // 0x100099bd
        int64_t v8 = 0x100000000 * (int64_t)(v7 >> 31) | (int64_t)v7; // 0x100099c0
        int32_t v9 = v8 % (int64_t)result; // 0x100099c0
        g6 = v9;
        int32_t v10 = result - v9; // 0x100099c4
        g4 = v10;
        a2 = v10;
    }
    int32_t result2 = a3; // eax
    int32_t v11; // 0x100099ec
    if (a3 >= 0) {
        if (result < a3) {
            // 0x100099eb
            v11 = (0x100000000 * (int64_t)(a3 >> 31) | (int64_t)a3) % (int64_t)result;
            g6 = v11;
            result2 = v11;
        } else {
            v11 = a3;
        }
    } else {
        int32_t v12 = -a3; // 0x100099cd
        int32_t v13 = (0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) % (int64_t)result; // 0x100099d0
        g6 = v13;
        int32_t v14 = result - v13; // 0x100099d2
        result2 = v14;
        v11 = v14;
    }
    int32_t v15 = v11 - a2; // 0x100099f0
    if (v11 <= a2) {
        // 0x100099f4
        g6 = a4;
        g3 = v2;
        *(char *)a4 = 0;
        g2 = v1;
        return result2;
    }
    int32_t v16 = a5 - 1; // 0x10009a03
    if (v15 <= v16) {
        // 0x10009a0c
        result2 = _memcpy2();
        *(char *)(v15 + a4) = 0;
        g3 = v2;
        g2 = v1;
        return result2;
    }
    // 0x10009a23
    g6 = v16;
    g1 = _memcpy2();
    *(char *)(v16 + a4) = 0;
    g3 = v2;
    // 0x10009a3b
    g2 = v1;
    return g1;
}

// Address range: 0x10009a40 - 0x10009a49
int32_t function_10009a40(void) {
    // 0x10009a40
    return _memcpy2();
}

// Address range: 0x10009a50 - 0x10009a59
int32_t * function_10009a50(int32_t * dest, int32_t * src, int32_t n) {
    // 0x10009a50
    return _memcpy(dest, src, n);
}

// Address range: 0x10009a60 - 0x10009a86
int32_t function_10009a60(int32_t * a1, int32_t a2, uint32_t a3) {
    int32_t result = (int32_t)_strncpy((char *)a1, (char *)a2, a3); // 0x10009a71
    if (a3 >= 1) {
        // 0x10009a7d
        *(char *)(a3 - 1 + (int32_t)a1) = 0;
    }
    // 0x10009a82
    return result;
}

// Address range: 0x10009a90 - 0x10009abc
int32_t function_10009a90(int32_t * a1, int32_t a2, char * a3) {
    // 0x10009a90
    g4 = (int32_t)a3;
    int32_t result = a2; // esi
    int32_t v1; // bp+16
    int32_t v2 = __vsnprintf((char *)a1, a2, a3, (int32_t)&v1); // 0x10009aa5
    if (v2 < 0) {
        // 0x10009ab1
        *(char *)((int32_t)a1 - 1 + result) = 0;
    } else {
        result = v2;
    }
    // 0x10009ab8
    return result;
}

// Address range: 0x10009ac0 - 0x10009aec
int32_t function_10009ac0(int32_t * a1, int32_t a2, int32_t a3, int32_t * a4) {
    // 0x10009ac0
    g4 = a3;
    int32_t result = a2; // esi
    int32_t v1 = __vsnprintf((char *)a1, a2, (char *)a3, (int32_t)a4); // 0x10009ad5
    if (v1 < 0) {
        // 0x10009ae1
        *(char *)((int32_t)a1 - 1 + result) = 0;
    } else {
        result = v1;
    }
    // 0x10009ae8
    return result;
}

// Address range: 0x10009af0 - 0x10009b2a
int32_t function_10009af0(int32_t a1, int32_t a2, int32_t a3, int32_t * a4, int32_t * a5, int32_t a6, int32_t a7, int32_t a8) {
    // 0x10009af0
    g4 = a3;
    int32_t result = a2; // esi
    int32_t v1 = __vsnprintf((char *)a1, a2, (char *)a3, (int32_t)a4); // 0x10009b05
    g4 = (int32_t)a5;
    int32_t v2; // 0x10009b1b
    if (a5 != NULL) {
        // 0x10009b14
        *(char *)a5 = (char)(v1 < 0);
        v2 = v1;
    } else {
        v2 = v1;
    }
    if (v2 < 0) {
        // 0x10009b1f
        *(char *)(a1 - 1 + result) = 0;
    } else {
        result = v2;
    }
    // 0x10009b26
    return result;
}

// Address range: 0x10009b30 - 0x10009be1
int32_t function_10009b30(int32_t a1, int32_t result, int32_t a3) {
    int32_t v1 = g5; // bp-8
    int32_t v2; // 0x10009b98
    int32_t v3; // 0x10009ba7
    if (a1 == 0) {
        goto lab_0x10009bd8;
    } else {
        // 0x10009b3f
        if (*(char *)a1 == 0) {
            goto lab_0x10009bd8;
        } else {
            int32_t v4 = a1 + 1; // 0x10009b4a
            int32_t v5 = a1; // 0x10009b52
            unsigned char v6 = *(char *)v5; // 0x10009b50
            int32_t v7 = (int32_t)v6 | g4 & -256; // 0x10009b50
            g4 = v7;
            int32_t v8 = v5 + 1; // 0x10009b52
            while (v6 != 0) {
                // 0x10009b50
                v5 = v8;
                v6 = *(char *)v5;
                v7 = (int32_t)v6 | v7 & -256;
                g4 = v7;
                v8 = v5 + 1;
            }
            int32_t v9 = v8 - v4 - 1; // 0x10009b59
            g4 = v9;
            int32_t v10; // 0x10009b81
            int32_t v11; // 0x10009b8612
            if (v9 != 0) {
                int32_t v12 = v4; // 0x10009b62
                int32_t v13 = v9; // 0x10009b74
                while (true) {
                    unsigned char v14 = *(char *)(v13 + a1); // 0x10009b62
                    int32_t v15 = (int32_t)v14 | v12 & -256; // 0x10009b62
                    if (v14 == 46) {
                        v11 = v15;
                        v10 = v13;
                        // break -> 0x10009b77
                        break;
                    }
                    if (v14 == 92) {
                        v11 = v15;
                        v10 = v13;
                        // break -> 0x10009b77
                        break;
                    }
                    if (v14 == 47) {
                        v11 = v15;
                        v10 = v13;
                        // break -> 0x10009b77
                        break;
                    }
                    int32_t v16 = v13 - 1; // 0x10009b74
                    if (v16 == 0) {
                        v11 = v15;
                        v10 = v16;
                        // break -> 0x10009b77
                        break;
                    }
                    v12 = v15;
                    v13 = v16;
                }
            } else {
                v11 = v4;
                v10 = 0;
            }
            // 0x10009b77
            if (*(char *)(v10 + a1) == 46) {
                // 0x10009b81
                v2 = v10 - 1;
            } else {
                v2 = v9;
            }
            // 0x10009b82
            if (v9 < 0) {
                v3 = 0;
                goto lab_0x10009b98;
            } else {
                int32_t v17 = v11; // 0x10009b86
                int32_t v18 = v9; // 0x10009bd5
                char * v19; // 0x10009b86
                while (true) {
                    // 0x10009b86
                    v19 = (char *)(v18 + a1);
                    unsigned char v20 = *v19; // 0x10009b86
                    if (v20 == 92) {
                        // break -> 0x10009bc4
                        break;
                    }
                    if (v20 == 47) {
                        // break -> 0x10009bc4
                        break;
                    }
                    int32_t v21 = v18 - 1; // 0x10009b93
                    g4 = v21;
                    if (v21 < 0) {
                        v3 = 0;
                        goto lab_0x10009b98;
                    }
                    v17 = (int32_t)v20 | v17 & -256;
                    v18 = v21;
                }
                if (v18 < 0) {
                    v3 = 0;
                    goto lab_0x10009b98;
                } else {
                    char v22 = *v19; // 0x10009bc8
                    if (v22 == 92) {
                        // 0x10009bd5
                        v3 = v18 + 1;
                        goto lab_0x10009b98;
                    } else {
                        if (v22 != 47) {
                            v3 = 0;
                            goto lab_0x10009b98;
                        } else {
                            // 0x10009bd5
                            v3 = v18 + 1;
                            goto lab_0x10009b98;
                        }
                    }
                }
            }
        }
    }
  lab_0x10009bd8:
    // 0x10009bd8
    *(char *)result = 0;
    g5 = v1;
    return result;
  lab_0x10009b98:
    // 0x10009b98
    g4 = v3;
    int32_t v23 = a3; // esi
    int32_t v24 = v2 - v3 + 2; // 0x10009b9e
    if (v24 < a3) {
        // 0x10009ba5
        v23 = v24;
    } else {
        v24 = a3;
    }
    int32_t v25 = v3 + a1; // 0x10009ba7
    g4 = v25;
    int32_t result2 = (int32_t)_strncpy((char *)result, (char *)v25, v24); // 0x10009baf
    if (v23 >= 1) {
        // 0x10009bbb
        *(char *)(v23 - 1 + result) = 0;
    }
    // 0x10009bc0
    g5 = v1;
    return result2;
}

// Address range: 0x10009bf0 - 0x10009c81
int32_t function_10009bf0(int32_t a1, int32_t * a2, int32_t a3) {
    int32_t v1 = g5; // bp-16
    int32_t v2 = a1; // 0x10009c02
    unsigned char v3 = *(char *)v2; // 0x10009c00
    int32_t v4 = (int32_t)v3 | g4 & -256; // 0x10009c00
    g4 = v4;
    int32_t v5 = v2 + 1; // 0x10009c02
    while (v3 != 0) {
        // 0x10009c00
        v2 = v5;
        v3 = *(char *)v2;
        v4 = (int32_t)v3 | v4 & -256;
        g4 = v4;
        v5 = v2 + 1;
    }
    int32_t v6 = (int32_t)a2;
    int32_t v7 = v5 - (a1 + 1) - 1; // 0x10009c0c
    int32_t result = v7; // eax
    int32_t result2; // 0x10009c4711
    if (v7 >= 1) {
        int32_t v8 = v4; // 0x10009c11
        int32_t v9 = v7; // 0x10009c64
        char * v10; // 0x10009c11
        int32_t v11; // 0x10009c11
        while (true) {
            // 0x10009c11
            v10 = (char *)(v9 + a1);
            unsigned char v12 = *v10; // 0x10009c11
            v11 = v8 & -256;
            int32_t v13 = (int32_t)v12 | v11; // 0x10009c11
            g4 = v13;
            if (v12 == 46) {
                // break -> 0x10009c48
                break;
            }
            if (v12 == 92) {
                // break -> 0x10009c48
                break;
            }
            if (v12 == 47) {
                // break -> 0x10009c48
                break;
            }
            int32_t v14 = v9 - 1; // 0x10009c23
            result = v14;
            if (v14 >= 0 != v14 != 0) {
                result2 = v14;
                goto lab_0x10009c28;
            }
            v8 = v13;
            v9 = v14;
        }
        if (v9 >= 1) {
            unsigned char v15 = *v10; // 0x10009c4c
            g4 = (int32_t)v15 | v11;
            if (v15 != 92) {
                if (v15 != 47) {
                    if (v9 < a3) {
                        int32_t v16 = a3 - 1; // 0x10009c5d
                        int32_t v17;
                        int32_t v18; // 0x10009c6d
                        if (v9 < v16) {
                            v17 = v9;
                            v18 = v9;
                        } else {
                            v17 = v16;
                            v18 = v16;
                        }
                        // 0x10009c66
                        int32_t v19; // 0x10009c78
                        if (v6 != a1) {
                            // 0x10009c6d
                            result = _memcpy2();
                            v19 = v17;
                        } else {
                            v19 = v18;
                        }
                        // 0x10009c78
                        *(char *)(v19 + v6) = 0;
                        g5 = v1;
                        return result;
                    }
                    result2 = v9;
                } else {
                    result2 = v9;
                }
            } else {
                result2 = v9;
            }
        } else {
            result2 = v9;
        }
    } else {
        result2 = v7;
    }
  lab_0x10009c28:
    // 0x10009c28
    if (v6 == a1) {
        // 0x10009c43
        g5 = v1;
        return result2;
    }
    int32_t result3 = (int32_t)_strncpy((char *)a2, (char *)a1, a3); // 0x10009c32
    if (a3 < 1) {
        // 0x10009c43
        g5 = v1;
        return result3;
    }
    // 0x10009c3e
    *(char *)(a3 - 1 + v6) = 0;
    // 0x10009c43
    g5 = v1;
    return result3;
}

// Address range: 0x10009c90 - 0x10009d3a
int32_t function_10009c90(int32_t a1, int32_t a2) {
    int32_t v1 = g7; // bp-8
    g7 = a1;
    if (*(char *)a1 == 0) {
        // 0x10009d04
        g7 = v1;
        return g1 & -256;
    }
    int32_t v2 = function_100094b0((int32_t *)a1, "./"); // 0x10009ca2
    g1 = v2;
    if (v2 == 0) {
        // 0x10009d04
        g7 = v1;
        return g1 & -256;
    }
    int32_t v3 = function_100094b0((int32_t *)g7, ".\\"); // 0x10009cb4
    g1 = v3;
    if (v3 == 0) {
      lab_0x10009d04:
        // 0x10009d04
        g7 = v1;
        return g1 & -256;
    }
    int32_t v4 = g7; // 0x10009cc0
    int32_t v5 = v4 + 1; // 0x10009cc2
    int32_t v6 = v4; // 0x10009cc7
    unsigned char v7 = *(char *)v6; // 0x10009cc5
    int32_t v8 = g4 & -256; // 0x10009cc5
    int32_t v9 = (int32_t)v7 | v8; // 0x10009cc5
    g4 = v9;
    int32_t v10 = v6 + 1; // 0x10009cc7
    while (v7 != 0) {
        // 0x10009cc5
        v6 = v10;
        v7 = *(char *)v6;
        v8 = v9 & -256;
        v9 = (int32_t)v7 | v8;
        g4 = v9;
        v10 = v6 + 1;
    }
    int32_t v11 = v10 - v5; // 0x10009ccc
    int32_t v12 = v11 - 1; // 0x10009cce
    unsigned char v13 = *(char *)(v12 + v4); // 0x10009cce
    int32_t v14 = (int32_t)v13 | v8; // 0x10009cce
    g4 = v14;
    int32_t v15; // 0x10009cdf
    if (v13 == 92) {
        v15 = v12;
        goto lab_0x10009cdd;
    } else {
        if (v13 != 47) {
            v15 = v11;
            goto lab_0x10009cdd;
        } else {
            v15 = v12;
            goto lab_0x10009cdd;
        }
    }
  lab_0x10009cdd:;
    int32_t v16 = v5 & -256; // 0x10009cdd
    g6 = v16;
    int32_t v17; // 0x10009d1816
    bool v18; // 0x10009d1f
    if (v15 < 1) {
        v17 = v15;
        v18 = v15 == 0;
        goto lab_0x10009d1f;
      lab_0x10009d1f:
        if (v18) {
            // 0x10009d21
            g7 = v1;
            return function_10009a90((int32_t *)v4, a2, ".%c") & -256 | 1;
        }
        // 0x10009d18
        g7 = v1;
        return v17 & -256 | 1;
    }
    int32_t v19 = v15; // 0x10009d0c
    while (true) {
        unsigned char v20 = *(char *)(v4 - 1 + v19); // 0x10009ce3
        int32_t v21 = (int32_t)v20 | v14 & -256; // 0x10009ce3
        g4 = v21;
        if (v20 == 92) {
            // break -> 0x10009d09
            break;
        }
        if (v20 == 47) {
            // break -> 0x10009d09
            break;
        }
        int32_t v22; // 0x10009cf6
        if (v20 == 58) {
            // 0x10009cf6
            v22 = v16 & -256 | 1;
            g6 = v22;
        } else {
            v22 = v16;
        }
        int32_t v23 = v19 - 1; // 0x10009cf8
        g1 = v23;
        if (v23 >= 0 != v23 != 0) {
            if ((char)v22 == 0) {
                v17 = v23;
                v18 = v23 == 0;
                goto lab_0x10009d1f;
            } else {
                // 0x10009d01
                *(char *)v4 = 0;
                goto lab_0x10009d04;
            }
        }
        v16 = v22;
        v14 = v21;
        v19 = v23;
    }
    // 0x10009d09
    *(char *)(v19 + v4) = 0;
    // 0x10009d18
    g7 = v1;
    return function_10009740((int32_t)(char *)v4, 92) & -256 | 1;
}

// Address range: 0x10009d40 - 0x10009e37
int32_t function_10009d40(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = a4; // ebx
    _strncpy((char *)a3, (char *)a1, a4);
    uint32_t v2 = v1; // 0x10009d5a
    if (v2 >= 1) {
        // 0x10009d5e
        *(char *)(v2 - 1 + a3) = 0;
    }
    int32_t v3 = a3; // eax
    int32_t v4; // 0x10009d7c
    int32_t v5; // 0x10009d7f
    int32_t v6; // 0x10009db2
    char * v7; // 0x10009d70
    if (*(char *)a3 != 0) {
        v4 = a3;
        while (true) {
          lab_0x10009d70:
            // 0x10009d70
            v7 = (char *)v4;
            unsigned char v8 = *v7; // 0x10009d70
            g4 = g4 & -256 | (int32_t)v8;
            if (v8 == 47) {
                goto lab_0x10009d7c;
            } else {
                if (v8 != 92) {
                    v5 = v4;
                    goto lab_0x10009d7f;
                } else {
                    goto lab_0x10009d7c;
                }
            }
        }
      lab_0x10009d85:
        // 0x10009d85
        v6 = a3;
    } else {
        v6 = a3;
    }
    int32_t v9 = v6; // 0x10009d92
    unsigned char v10 = *(char *)v9; // 0x10009d90
    int32_t v11 = (int32_t)v10 | g4 & -256; // 0x10009d90
    g4 = v11;
    int32_t v12 = v9 + 1; // 0x10009d92
    while (v10 != 0) {
        // 0x10009d90
        v9 = v12;
        v10 = *(char *)v9;
        v11 = (int32_t)v10 | v11 & -256;
        g4 = v11;
        v12 = v9 + 1;
    }
    int32_t v13 = v12 - (v6 + 1); // 0x10009d97
    int32_t v14; // 0x10009e01
    int32_t v15;
    if (v13 >= 1) {
        unsigned char v16 = *(char *)(v6 - 1 + v13); // 0x10009d9f
        if (v16 != 92) {
            if (v16 != 47) {
                int32_t v17 = v13 + 1; // 0x10009dab
                g4 = v17;
                int32_t v18; // 0x10009dc1
                if (v17 >= v1) {
                    // 0x10009db2
                    Error();
                    v18 = a3;
                } else {
                    v18 = v6;
                }
                // 0x10009dc1
                *(int16_t *)(v18 + v13) = 92;
                v15 = g4;
                v14 = a3;
            } else {
                v15 = v11;
                v14 = v6;
            }
        } else {
            v15 = v11;
            v14 = v6;
        }
    } else {
        v15 = v11;
        v14 = v6;
    }
    int32_t v19 = v14; // 0x10009dd2
    unsigned char v20 = *(char *)v19; // 0x10009dd0
    int32_t v21 = (int32_t)v20 | v15 & -256; // 0x10009dd0
    g4 = v21;
    int32_t v22 = v19 + 1; // 0x10009dd2
    while (v20 != 0) {
        // 0x10009dd0
        v19 = v22;
        v20 = *(char *)v19;
        v21 = (int32_t)v20 | v21 & -256;
        g4 = v21;
        v22 = v19 + 1;
    }
    // 0x10009dd7
    v1 = a2;
    int32_t v23 = v22 - (v14 + 1); // 0x10009dda
    int32_t v24 = a2; // 0x10009de5
    unsigned char v25 = *(char *)v24; // 0x10009de3
    int32_t v26 = (int32_t)v25 | v21 & -256; // 0x10009de3
    g4 = v26;
    int32_t v27 = v24 + 1; // 0x10009de5
    while (v25 != 0) {
        // 0x10009de3
        v24 = v27;
        v25 = *(char *)v24;
        v26 = (int32_t)v25 | v26 & -256;
        g4 = v26;
        v27 = v24 + 1;
    }
    int32_t v28 = v27 - (a2 + 1); // 0x10009dea
    int32_t v29 = v28 + v23; // 0x10009def
    g4 = v29;
    int32_t v30; // 0x10009dff
    if (v29 >= a4) {
        // 0x10009df6
        v30 = a4 - v23 - 1;
    } else {
        v30 = v28;
    }
    int32_t result; // 0x10009e12
    if (v30 != 0) {
        int32_t v31 = (int32_t)_strncat((char *)v14, (char *)a2, v30); // 0x10009e02
        *(char *)(v31 - 1 + a4) = 0;
        result = a3;
    } else {
        result = v14;
    }
    // 0x10009e0f
    v3 = result;
    if (*(char *)result == 0) {
        // 0x10009e35
        return result;
    }
    int32_t v32 = result; // 0x10009e2c
    int32_t v33; // 0x10009e2f
    char * v34; // 0x10009e20
    while (true) {
      lab_0x10009e20:
        // 0x10009e20
        v34 = (char *)v32;
        unsigned char v35 = *v34; // 0x10009e20
        g4 = g4 & -256 | (int32_t)v35;
        if (v35 == 47) {
            goto lab_0x10009e2c;
        } else {
            if (v35 != 92) {
                v33 = v32;
                goto lab_0x10009e2f;
            } else {
                goto lab_0x10009e2c;
            }
        }
    }
  lab_0x10009e35:;
    // 0x10009e35
    int32_t result2; // 0x10009e2f
    return result2;
  lab_0x10009e2c:
    // 0x10009e2c
    *v34 = 92;
    v33 = v3;
    goto lab_0x10009e2f;
  lab_0x10009e2f:
    // 0x10009e2f
    result2 = v33 + 1;
    v3 = result2;
    if (*(char *)result2 == 0) {
        // break -> 0x10009e35
        goto lab_0x10009e35;
    }
    v32 = result2;
    goto lab_0x10009e20;
  lab_0x10009d7c:
    // 0x10009d7c
    *v7 = 92;
    v5 = v3;
    goto lab_0x10009d7f;
  lab_0x10009d7f:;
    int32_t v36 = v5 + 1; // 0x10009d7f
    v3 = v36;
    if (*(char *)v36 == 0) {
        // break -> 0x10009d85
        goto lab_0x10009d85;
    }
    v4 = v36;
    goto lab_0x10009d70;
}

// Address range: 0x10009e40 - 0x10009feb
int32_t function_10009e40(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x10009e40
    g4 = a3;
    char * v1 = (char *)a3; // 0x10009e46
    unsigned char v2 = *v1; // 0x10009e46
    int32_t v3 = g5; // bp-12
    g6 = g6 & -256 | 58;
    if (v2 == 0) {
        goto lab_0x10009e55;
    } else {
        // 0x10009e50
        if (*(char *)(a3 + 1) == 58) {
            goto lab_0x10009e5d;
        } else {
            goto lab_0x10009e55;
        }
    }
  lab_0x10009fe0:;
    // 0x10009fe0
    char * v4; // 0x10009fd4
    *v4 = 92;
    int32_t v5; // eax
    int32_t v6 = v5; // 0x10009fe3
    goto lab_0x10009fe3;
  lab_0x10009fe3:;
    int32_t result2 = v6 + 1; // 0x10009fe3
    v5 = result2;
    if (*(char *)result2 == 0) {
        // break -> 0x10009fe9
        goto lab_0x10009fe9;
    }
    goto lab_0x10009fd4;
  lab_0x10009e55:;
    char * v8; // 0x10009e88
    unsigned char v9; // 0x10009e88
    if (v2 == 47) {
        goto lab_0x10009e5d;
    } else {
        if (v2 != 92) {
            // 0x10009e80
            g5 = a4;
            if (a4 == 0) {
                goto lab_0x10009eb7;
            } else {
                // 0x10009e88
                v8 = (char *)a4;
                v9 = *v8;
                if (v9 == 0) {
                    goto lab_0x10009e93;
                } else {
                    // 0x10009e8e
                    if (*(char *)(a4 + 1) == 58) {
                        goto lab_0x10009e9b;
                    } else {
                        goto lab_0x10009e93;
                    }
                }
            }
        } else {
            goto lab_0x10009e5d;
        }
    }
  lab_0x10009e5d:
    // 0x10009e5d
    g5 = a2;
    g7 = a1;
    _strncpy((char *)a1, v1, a2);
    int32_t v10; // 0x10009fae
    if (a2 >= 1) {
        // 0x10009e76
        *(char *)(a2 - 1 + g7) = 0;
        v10 = g8;
    } else {
        v10 = &v3;
    }
    goto lab_0x10009fae;
  lab_0x10009fae:
    // 0x10009fae
    *(int32_t *)(v10 - 4) = 92;
    *(int32_t *)(v10 - 8) = g7;
    int32_t v11 = function_100097c0((int32_t)&g169, (int32_t)&g169); // 0x10009fb1
    int32_t v12; // 0x10009fce
    if ((char)v11 == 0) {
        // 0x10009fbd
        *(int32_t *)(g8 + 4) = (int32_t)"V_MakeAbsolutePath: tried to \"..\" past the root.";
        Error();
        v12 = g8 + 4;
    } else {
        v12 = g8 + 8;
    }
    int32_t result = g7; // 0x10009fcb
    g5 = *(int32_t *)v12;
    v5 = result;
    g7 = *(int32_t *)(v12 + 4);
    if (*(char *)result == 0) {
        // 0x10009fe9
        g2 = *(int32_t *)(v12 + 8);
        return result;
    }
    result2 = result;
    while (true) {
      lab_0x10009fd4:
        // 0x10009fd4
        v4 = (char *)result2;
        unsigned char v7 = *v4; // 0x10009fd4
        g4 = g4 & -256 | (int32_t)v7;
        if (v7 == 47) {
            goto lab_0x10009fe0;
        } else {
            if (v7 != 92) {
                v6 = result2;
                goto lab_0x10009fe3;
            } else {
                goto lab_0x10009fe0;
            }
        }
    }
  lab_0x10009fe9:
    // 0x10009fe9
    g2 = *(int32_t *)g8;
    return result2;
  lab_0x10009eb7:;
    int32_t v13 = a2; // ebx
    g7 = a1;
    if (__getcwd((char *)a1, a2) == NULL) {
        // 0x10009ecb
        Error();
    }
    if (a4 != 0) {
        // 0x10009edd
        function_10009910((int32_t *)g7, v13);
        int32_t v14 = g7; // 0x10009ee4
        int32_t v15 = v14; // 0x10009ef2
        unsigned char v16 = *(char *)v15; // 0x10009ef0
        int32_t v17 = (int32_t)v16 | g4 & -256; // 0x10009ef0
        g4 = v17;
        int32_t v18 = v15 + 1; // 0x10009ef2
        while (v16 != 0) {
            // 0x10009ef0
            v15 = v18;
            v16 = *(char *)v15;
            v17 = (int32_t)v16 | v17 & -256;
            g4 = v17;
            v18 = v15 + 1;
        }
        int32_t v19 = v18 - (v14 + 1); // 0x10009ef7
        int32_t v20 = a4; // 0x10009f02
        unsigned char v21 = *(char *)v20; // 0x10009f00
        int32_t v22 = (int32_t)v21 | v17 & -256; // 0x10009f00
        g4 = v22;
        int32_t v23 = v20 + 1; // 0x10009f02
        while (v21 != 0) {
            // 0x10009f00
            v20 = v23;
            v21 = *(char *)v20;
            v22 = (int32_t)v21 | v22 & -256;
            g4 = v22;
            v23 = v20 + 1;
        }
        int32_t v24 = v23 - (a4 + 1); // 0x10009f07
        int32_t v25 = v24 + v19; // 0x10009f09
        g4 = v25;
        int32_t v26; // 0x10009f1c
        if (v25 >= v13) {
            // 0x10009f10
            v26 = v13 - v19 - 1;
        } else {
            v26 = v24;
        }
        if (v26 != 0) {
            int32_t v27 = (int32_t)_strncat((char *)v14, (char *)a4, v26); // 0x10009f1f
            *(char *)(v27 - 1 + v13) = 0;
        }
    }
    goto lab_0x10009f2c;
  lab_0x10009f2c:;
    int32_t v28 = g7; // 0x10009f2c
    int32_t v29 = v28; // 0x10009f33
    unsigned char v30 = *(char *)v29; // 0x10009f31
    int32_t v31 = (int32_t)v30 | g4 & -256; // 0x10009f31
    g4 = v31;
    int32_t v32 = v29 + 1; // 0x10009f33
    while (v30 != 0) {
        // 0x10009f31
        v29 = v32;
        v30 = *(char *)v29;
        v31 = (int32_t)v30 | v31 & -256;
        g4 = v31;
        v32 = v29 + 1;
    }
    int32_t v33 = v32 - (v28 + 1); // 0x10009f38
    int32_t v34; // 0x10009f68
    int32_t v35;
    if (v33 >= 1) {
        unsigned char v36 = *(char *)(v28 - 1 + v33); // 0x10009f40
        if (v36 != 92) {
            if (v36 != 47) {
                // 0x10009f4c
                int32_t v37; // 0x10009f62
                if (v33 + 1 >= v13) {
                    // 0x10009f53
                    *(int32_t *)(g8 - 4) = v28;
                    *(int32_t *)(g8 - 8) = (int32_t)"V_AppendSlash: ran out of space on %s.";
                    Error();
                    v37 = g7;
                } else {
                    v37 = v28;
                }
                // 0x10009f62
                *(int16_t *)(v37 + v33) = 92;
                v35 = g4;
                v34 = g7;
            } else {
                v35 = v31;
                v34 = v28;
            }
        } else {
            v35 = v31;
            v34 = v28;
        }
    } else {
        v35 = v31;
        v34 = v28;
    }
    int32_t v38 = v34; // 0x10009f72
    unsigned char v39 = *(char *)v38; // 0x10009f70
    int32_t v40 = (int32_t)v39 | v35 & -256; // 0x10009f70
    g4 = v40;
    int32_t v41 = v38 + 1; // 0x10009f72
    while (v39 != 0) {
        // 0x10009f70
        v38 = v41;
        v39 = *(char *)v38;
        v40 = (int32_t)v39 | v40 & -256;
        g4 = v40;
        v41 = v38 + 1;
    }
    int32_t v42 = v41 - (v34 + 1); // 0x10009f77
    g6 = v42;
    int32_t v43 = a3 + 1; // 0x10009f7e
    g5 = v43;
    int32_t v44 = a3; // 0x10009f83
    unsigned char v45 = *(char *)v44; // 0x10009f81
    int32_t v46 = (int32_t)v45 | v40 & -256; // 0x10009f81
    g4 = v46;
    int32_t v47 = v44 + 1; // 0x10009f83
    while (v45 != 0) {
        // 0x10009f81
        v44 = v47;
        v45 = *(char *)v44;
        v46 = (int32_t)v45 | v46 & -256;
        g4 = v46;
        v47 = v44 + 1;
    }
    int32_t v48 = v47 - v43; // 0x10009f88
    int32_t v49 = v48 + v42; // 0x10009f8a
    g4 = v49;
    int32_t v50; // 0x10009f9d
    if (v49 >= v13) {
        // 0x10009f91
        v50 = v13 - v42 - 1;
    } else {
        v50 = v48;
    }
    if (v50 != 0) {
        // 0x10009f9a
        g6 = a3;
        *(int32_t *)(g8 - 4) = v50;
        *(int32_t *)(g8 - 8) = g6;
        *(int32_t *)(g8 - 12) = g7;
        char * v51 = _strncat((char *)&g169, (char *)&g169, (int32_t)&g169); // 0x10009fa0
        *(char *)((int32_t)v51 - 1 + v13) = 0;
    }
    // 0x10009fad
    g3 = *(int32_t *)g8;
    v10 = g8 + 4;
    goto lab_0x10009fae;
  lab_0x10009e93:
    if (v9 == 47) {
        goto lab_0x10009e9b;
    } else {
        if (v9 != 92) {
            goto lab_0x10009eb7;
        } else {
            goto lab_0x10009e9b;
        }
    }
  lab_0x10009e9b:
    // 0x10009e9b
    v13 = a2;
    g7 = a1;
    _strncpy((char *)a1, v8, a2);
    if (a2 >= 1) {
        // 0x10009eb0
        *(char *)(a2 - 1 + g7) = 0;
    }
    goto lab_0x10009f2c;
}

// Address range: 0x10009ff0 - 0x1000a055
int32_t function_10009ff0(int32_t a1, uint32_t a2, int32_t * a3, uint32_t a4) {
    int32_t v1 = g7; // 0x10009ff3
    int32_t v2 = g5; // bp-12
    g5 = a1;
    int32_t v3 = a1 + 1; // 0x10009ffa
    g6 = v3;
    int32_t v4 = a1; // 0x1000a002
    unsigned char v5 = *(char *)v4; // 0x1000a000
    int32_t v6 = (int32_t)v5 | g4 & -256; // 0x1000a000
    g4 = v6;
    int32_t v7 = v4 + 1; // 0x1000a002
    while (v5 != 0) {
        // 0x1000a000
        v4 = v7;
        v5 = *(char *)v4;
        v6 = (int32_t)v5 | v6 & -256;
        g4 = v6;
        v7 = v4 + 1;
    }
    int32_t v8 = (int32_t)a3;
    g4 = a2;
    if (v7 - v3 <= a2) {
        int32_t result = (int32_t)_strncpy((char *)a3, (char *)a1, a4); // 0x1000a019
        if (a4 < 1) {
            // 0x1000a051
            g5 = v2;
            g7 = v1;
            return result;
        }
        // 0x1000a025
        *(char *)(a4 - 1 + v8) = 0;
        g5 = v2;
        g7 = v1;
        return result;
    }
    // 0x1000a02e
    g7 = v3;
    int32_t v9 = v3; // 0x1000a033
    int32_t v10 = a1; // 0x1000a035
    unsigned char v11 = *(char *)v10; // 0x1000a033
    int32_t v12 = v10 + 1; // 0x1000a035
    while (v11 != 0) {
        // 0x1000a033
        v9 = (int32_t)v11 | v9 & -256;
        v10 = v12;
        v11 = *(char *)v10;
        v12 = v10 + 1;
    }
    // 0x1000a03a
    g6 = v8;
    int32_t v13 = v12 - v3; // 0x1000a042
    g1 = v13;
    int32_t v14 = -a2; // 0x1000a045
    g4 = v14;
    // 0x1000a051
    g5 = v2;
    g7 = v1;
    return function_10009990(a1, v14, v13, v8, a4);
}

// Address range: 0x1000a060 - 0x1000a0f1
int32_t function_1000a060(char a1) {
    int32_t v1 = g4; // esi
    g4 = a1;
    int32_t v2 = g5; // bp-16
    int32_t v3 = &v2; // 0x1000a076
    Warning();
    int32_t v4 = 0; // edi
    int32_t v5; // 0x1000a0e0
    if (*(int32_t *)(v1 + 264) > 0) {
        int32_t v6 = v3; // 0x1000a0e010
        int32_t v7 = 0; // 0x1000a096
        int32_t v8 = v1; // 0x1000a096
        while (true) {
            // 0x1000a090
            int32_t v9; // 0x1000a0d7
            int32_t v10; // 0x1000a0e09
            if (*(int32_t *)(4 * v7 + v8) != -1) {
                int32_t v11 = *(int32_t *)(v8 + 260); // 0x1000a096
                int32_t v12 = KeyValuesSystem(); // eax
                int32_t v13 = *(int32_t *)(4 * v4 + v1); // 0x1000a0a4
                g4 = v13;
                *(int32_t *)(g8 - 4) = v13;
                g4 = v12;
                *(int32_t *)(g8 - 8) = v12;
                int32_t v14 = v7 < v11 ? (int32_t)"%s, " : (int32_t)"(*%s*), ";
                *(int32_t *)(g8 - 12) = v14;
                Warning();
                v10 = g8 + 8;
                v9 = v4;
            } else {
                v10 = v6;
                v1 = v8;
                v9 = v7;
            }
            int32_t v15 = v9 + 1; // 0x1000a0d7
            v4 = v15;
            if (v15 >= *(int32_t *)(v1 + 264)) {
                v5 = v10;
                // break -> 0x1000a0e0
                break;
            }
            v6 = v10;
            v7 = v15;
            v8 = v1;
        }
    } else {
        v5 = v3;
    }
    // 0x1000a0e0
    *(int32_t *)(v5 - 4) = (int32_t)&g19;
    int32_t result = Warning(); // 0x1000a0e5
    g5 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g3 = *(int32_t *)(g8 + 12);
    g2 = *(int32_t *)(g8 + 16);
    return result;
}

// Address range: 0x1000a100 - 0x1000a11c
int32_t function_1000a100(int32_t a1, int32_t a2) {
    int32_t result = KeyValuesSystem(); // 0x1000a103
    g4 = result;
    return result;
}

// Address range: 0x1000a120 - 0x1000a138
int32_t function_1000a120(int32_t a1) {
    int32_t result = KeyValuesSystem(); // 0x1000a123
    g4 = result;
    return result;
}

// Address range: 0x1000a140 - 0x1000a1de
int32_t function_1000a140(void) {
    int32_t v1 = g4; // 0x1000a143
    g3 = *(int32_t *)0x10022220;
    int32_t v2 = g5; // bp-20
    int32_t v3 = v1; // edi
    int32_t v4 = *(int32_t *)(v1 + 24); // 0x1000a14f
    int32_t v5; // 0x1000a17a
    if (v4 != 0) {
        int32_t * v6 = (int32_t *)(v4 + 20); // 0x1000a160
        int32_t v7 = *v6; // 0x1000a160
        g5 = v7;
        g4 = v4;
        *v6 = 0;
        function_1000a140();
        g4 = KeyValuesSystem();
        v5 = g8 - 4;
        *(int32_t *)v5 = g7;
        while (v7 != 0) {
            // 0x1000a160
            v4 = v7;
            v6 = (int32_t *)(v4 + 20);
            v7 = *v6;
            g5 = v7;
            g4 = v4;
            *v6 = 0;
            function_1000a140();
            g4 = KeyValuesSystem();
            v5 = g8 - 4;
            *(int32_t *)v5 = g7;
        }
        // 0x1000a183
        v3 = v1;
    } else {
        v5 = &v2;
    }
    int32_t v8 = *(int32_t *)(v1 + 20); // 0x1000a186
    int32_t v9; // 0x1000a1bd
    if (v8 != 0) {
        int32_t v10 = v5; // 0x1000a1bd8
        while (true) {
            if (v8 == v1) {
                v9 = v10;
                // break -> 0x1000a1ba
                break;
            }
            int32_t * v11 = (int32_t *)(v8 + 20); // 0x1000a194
            int32_t v12 = *v11; // 0x1000a194
            g5 = v12;
            g4 = v8;
            *v11 = 0;
            function_1000a140();
            g4 = KeyValuesSystem();
            int32_t v13 = g8 - 4; // 0x1000a1ae
            *(int32_t *)v13 = g7;
            v3 = v1;
            if (v12 == 0) {
                v9 = v13;
                // break -> 0x1000a1ba
                break;
            }
            v10 = v13;
            v8 = v12;
        }
    } else {
        v9 = v5;
    }
    int32_t v14 = *(int32_t *)(v1 + 4); // 0x1000a1ba
    g4 = v14;
    *(int32_t *)(v9 - 4) = v14;
    _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
    int32_t v15 = 0; // esi
    *(int32_t *)(g8 - 4) = *(int32_t *)(v3 + 8);
    *(int32_t *)(v3 + 4) = v15;
    int32_t result = _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169); // 0x1000a1cc
    *(int32_t *)(v3 + 8) = v15;
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x1000a1e0 - 0x1000a37e
int32_t function_1000a1e0(int32_t a1, int32_t * a2, int32_t * a3) {
    int32_t v1 = (int32_t)a3;
    g1 = v1;
    g3 = a1;
    g5 = (int32_t)a2;
    *(char *)a2 = 0;
    *(char *)g1 = 0;
    int32_t v2 = g3; // 0x1000a1f5
    g7 = g4;
    int32_t v3; // eax
    char v4;
    char v5;
    char v6;
    unsigned char v7; // 0x1000a2e6
    int32_t v8; // 0x1000a296
    if (*(char *)(v2 + 20) == 0) {
        // 0x1000a1fd
        g4 = v2;
        g1 = function_1000c210();
        int32_t v9 = g3; // 0x1000a204
        if (*(char *)(v9 + 20) == 0) {
            while (true) {
                // 0x1000a210
                g4 = v9;
                int32_t v10 = function_1000ca20(); // 0x1000a212
                g1 = v10;
                g4 = g3;
                if ((char)v10 == 0) {
                    // break -> 0x1000a231
                    break;
                }
                // 0x1000a21d
                g1 = function_1000c210();
                int32_t v11 = g3; // 0x1000a222
                if (*(char *)(v11 + 20) != 0) {
                    goto lab_0x1000a228;
                }
                v9 = v11;
            }
            int32_t v12 = 1; // bp-24
            int32_t v13 = function_1000bff0(1, 0); // 0x1000a235
            if (v13 != 0) {
                unsigned char v14 = *(char *)v13; // 0x1000a23e
                if (v14 == 34) {
                    // 0x1000a244
                    *(char *)g5 = 1;
                    int32_t v15;
                    if (*(char *)(g7 + 17) == 0) {
                        // 0x1000a254
                        v15 = function_1000bde0();
                    } else {
                        // 0x1000a24d
                        v15 = function_1000bdd0();
                    }
                    // 0x1000a259
                    g1 = v15;
                    g4 = g3;
                    function_1000cc50(v15, (int32_t *)&g124, 1024);
                    g5 = v15;
                    g7 = (int32_t)&g124;
                    g3 = 1024;
                    g2 = v12;
                    return (int32_t)&g124;
                }
                if (v14 != 123) {
                    if (v14 != 125) {
                        // 0x1000a287
                        g7 = 0;
                        g4 = g3;
                        v8 = function_1000bff0(1, 0);
                        v3 = v8;
                        if (v8 != 0) {
                            v6 = 0;
                            v4 = 0;
                            while (true) {
                              lab_0x1000a2a3:;
                                unsigned char v16 = *(char *)v8; // 0x1000a2a3
                                int32_t v17 = g4 & -256 | (int32_t)v16; // 0x1000a2a3
                                g4 = v17;
                                if (v16 == 0) {
                                    // break -> 0x1000a348
                                    break;
                                }
                                if (v16 == 34) {
                                    // break -> 0x1000a348
                                    break;
                                }
                                if (v16 == 123) {
                                    // break -> 0x1000a348
                                    break;
                                }
                                if (v16 == 125) {
                                    // break -> 0x1000a348
                                    break;
                                }
                                char v18 = v16 != 91 ? v4 : 1;
                                int32_t v19; // 0x1000a2e6
                                int32_t v20; // 0x1000a2e6
                                if (v16 == 93) {
                                    if (v18 != 0) {
                                        // 0x1000a2dc
                                        g4 = v1;
                                        *(char *)a3 = 1;
                                        v20 = g4;
                                        v19 = v3;
                                        v5 = 0;
                                    } else {
                                        v20 = v17;
                                        v19 = v8;
                                        v5 = 0;
                                    }
                                } else {
                                    v20 = v17;
                                    v19 = v8;
                                    v5 = v18;
                                }
                                // 0x1000a2e6
                                v7 = *(char *)v19;
                                int32_t v21 = (int32_t)v7 | v20 & -256; // 0x1000a2e6
                                g4 = v21;
                                if (v21 < 9) {
                                    goto lab_0x1000a300;
                                } else {
                                    if (v21 > 13) {
                                        if (v21 != 32) {
                                            goto lab_0x1000a300;
                                        } else {
                                            goto lab_0x1000a2fa;
                                        }
                                    } else {
                                        goto lab_0x1000a2fa;
                                    }
                                }
                            }
                        }
                      lab_0x1000a348_2:
                        // 0x1000a348
                        g5 = *(int32_t *)g8;
                        *(char *)(g7 + (int32_t)&g124) = 0;
                        g7 = *(int32_t *)g8;
                        g3 = *(int32_t *)(g8 + 4);
                        g2 = *(int32_t *)(g8 + 8);
                        return (int32_t)&g124;
                    }
                }
                // 0x1000a35b
                g4 = g3;
                *(char *)&g124 = v14;
                *(char *)&g125 = 0;
                function_1000c030(1, 1);
                g5 = 1;
                g7 = 1;
                g3 = v12;
                g2 = 0;
                return (int32_t)&g124;
            }
        }
    }
  lab_0x1000a228:
    // 0x1000a228
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return 0;
  lab_0x1000a300:;
    int32_t v22 = g7; // 0x1000a300
    char v23;
    if (v22 < 1023) {
        // 0x1000a308
        *(char *)(v22 + (int32_t)&g124) = v7;
        g7++;
        v23 = v6;
    } else {
        if (v6 == 0) {
            // 0x1000a317
            *(int32_t *)(g8 - 4) = (int32_t)" ReadToken overflow";
            g4 = &g50;
            function_1000a060(1);
            v23 = 1;
        } else {
            v23 = v6;
        }
    }
    // 0x1000a32a
    *(int32_t *)(g8 - 4) = 1;
    *(int32_t *)(g8 - 8) = 1;
    g4 = g3;
    function_1000c030((int32_t)&g169, (int32_t)&g169);
    *(int32_t *)(g8 - 4) = 0;
    *(int32_t *)(g8 - 8) = 1;
    g4 = g3;
    int32_t v24 = function_1000bff0((int32_t)&g169, (int32_t)&g169); // 0x1000a33b
    v3 = v24;
    if (v24 == 0) {
        // break -> 0x1000a348
        goto lab_0x1000a348_2;
    }
    v8 = v24;
    v6 = v23;
    v4 = v5;
    goto lab_0x1000a2a3;
  lab_0x1000a2fa:
    if (v5 == 0) {
        // break -> 0x1000a348
        goto lab_0x1000a348_2;
    }
    goto lab_0x1000a300;
}

// Address range: 0x1000a380 - 0x1000a3d3
int32_t function_1000a380(int32_t a1) {
    int32_t v1 = g2; // bp-4
    if (a1 == 0) {
        // 0x1000a3cf
        return g1;
    }
    int32_t * v2 = (int32_t *)(g4 + 24); // 0x1000a38a
    int32_t v3 = *v2; // 0x1000a38a
    g1 = v3;
    if (v3 == a1) {
        int32_t * v4 = (int32_t *)(a1 + 20); // 0x1000a391
        int32_t result = *v4; // 0x1000a391
        *v2 = result;
        *v4 = 0;
        g2 = v1;
        return result;
    }
    int32_t v5 = *(int32_t *)(v3 + 20); // 0x1000a3a2
    int32_t * v6;
    if (v5 == 0) {
        // 0x1000a3a2
        v6 = (int32_t *)(a1 + 20);
    } else {
        while (true) {
            // 0x1000a3a8
            g4 = v5;
            if (v5 == a1) {
                // break -> 0x1000a3c2
                break;
            }
            // 0x1000a3af
            g1 = v5;
            int32_t v7 = *(int32_t *)(v5 + 20); // 0x1000a3b1
            if (v7 == 0) {
                // 0x1000a3b7
                *(int32_t *)(a1 + 20) = 0;
                g2 = v1;
                return g1;
            }
            v3 = v5;
            v5 = v7;
        }
        int32_t * v8 = (int32_t *)(a1 + 20); // 0x1000a3c2
        int32_t v9 = *v8; // 0x1000a3c2
        g4 = v9;
        *(int32_t *)(v3 + 20) = v9;
        v6 = v8;
    }
    // 0x1000a3c8
    *v6 = 0;
    // 0x1000a3cf
    g2 = v1;
    return g1;
}

// Address range: 0x1000a3e0 - 0x1000a438
int32_t function_1000a3e0(int32_t a1) {
    int32_t v1 = g4; // 0x1000a3e5
    _3f__3f_3_40_YAXPAX_40_Z(*(int32_t *)(v1 + 4));
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x1000a3f1
    g4 = v2;
    _3f__3f_3_40_YAXPAX_40_Z(v2);
    *(int32_t *)(v1 + 8) = 0;
    int32_t v3; // 0x1000a410
    if (a1 == 0) {
        // 0x1000a40b
        v3 = &g14;
    } else {
        v3 = a1;
    }
    int32_t v4 = function_10009450(v3); // 0x1000a411
    *(int32_t *)(v1 + 4) = __malloc_crt(v4 + 1);
    int32_t result = function_10009a40(); // eax
    *(char *)(v1 + 16) = 1;
    return result;
}

// Address range: 0x1000a440 - 0x1000a47c
int32_t function_1000a440(int32_t a1, int32_t a2) {
    // 0x1000a440
    g1 = a2;
    int32_t v1; // bp-5
    g6 = &v1;
    g4 = &g128;
    v1 = 0;
    int32_t v2 = function_1000f850(&v1, a1, a2, 0); // 0x1000a45b
    int32_t v3; // 0x1000a473
    if ((char)v2 == 0) {
        // 0x1000a464
        g4 = &g50;
        v3 = function_1000a060((char)"KV Conditional Evaluation Error");
    } else {
        v3 = v2;
    }
    // 0x1000a473
    return v1 & 255 | v3 & -256;
}

// Address range: 0x1000a480 - 0x1000a498
int32_t function_1000a480(int32_t a1) {
    int32_t result = KeyValuesSystem(); // 0x1000a483
    g4 = result;
    g2 = a1;
    return result;
}

// Address range: 0x1000a4a0 - 0x1000a509
int32_t function_1000a4a0(int32_t a1) {
    int32_t result = g4; // 0x1000a4a3
    int32_t v1 = 0; // eax
    *(int32_t *)result = result & -0x1000000;
    g4 = 0;
    *(char *)(result + 3) = (char)v1;
    *(int32_t *)(result + 24) = v1;
    *(int32_t *)(result + 20) = v1;
    *(int32_t *)(result + 28) = v1;
    *(int32_t *)(result + 4) = v1;
    *(int32_t *)(result + 8) = v1;
    *(int32_t *)(result + 12) = v1;
    *(int32_t *)(result + 16) = g4;
    int32_t v2 = -1; // bp-8
    int32_t v3 = KeyValuesSystem(); // 0x1000a4d0
    v1 = v3;
    g4 = a1;
    g6 = *(int32_t *)(*(int32_t *)v3 + 36);
    g4 = (v2 ^ v3) & 0xffffff;
    *(int32_t *)result = 0;
    *(char *)(result + 3) = (char)v1;
    *(int16_t *)(result + 18) = (int16_t)(v1 / 256);
    g7 = &v2;
    return result;
}

// Address range: 0x1000a510 - 0x1000a65a
int32_t function_1000a510(char * a1, int32_t a2) {
    int32_t v1 = g2; // 0x1000a510
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3; // bp-264
    int32_t v4 = &v3; // 0x1000a513
    int32_t result = g4; // 0x1000a519
    if (result == 0) {
        // 0x1000a522
        g2 = v1;
        return result;
    }
    int32_t v5 = g7; // bp-268
    int32_t v6 = (int32_t)a1; // 0x1000a529
    g7 = v6;
    if (a1 == NULL || *a1 == 0) {
        // 0x1000a648
        g7 = *(int32_t *)(int32_t)&v5;
        g2 = v1;
        return result;
    }
    // 0x1000a53d
    v3 = 0;
    int32_t v7; // bp-263
    _memset(&v7, 0, 255);
    char * v8 = _strchr(a1, 47); // 0x1000a55b
    int32_t v9 = (int32_t)v8; // 0x1000a55b
    g3 = v6;
    if (v8 != NULL) {
        int32_t v10 = v9 - v6 + 1; // 0x1000a56e
        int32_t v11; // 0x1000a57b
        if (v10 >= 256) {
            v11 = 256;
        } else {
            v11 = v10;
        }
        // 0x1000a57b
        g4 = v4;
        function_10009a60(&v3, v6, v11);
        g3 = v4;
    }
    int32_t v12 = KeyValuesSystem(); // 0x1000a592
    g4 = a2;
    g6 = *(int32_t *)(*(int32_t *)v12 + 12);
    g4 = v12;
    if (v12 == -1) {
        // 0x1000a5ad
        g7 = a2;
        g2 = v2;
        return 0;
    }
    int32_t * v13 = (int32_t *)(result + 24); // 0x1000a5ba
    int32_t v14 = *v13; // 0x1000a5ba
    int32_t v15 = v14; // eax
    g5 = 0;
    int32_t v16; // 0x1000a5eb18
    if (v14 == 0) {
        v16 = 0;
        goto lab_0x1000a5d9_2;
    } else {
        while (true) {
            int32_t v17 = *(int32_t *)v14 & 0xffffff; // 0x1000a5c6
            g6 = v17;
            g5 = v14;
            if (v17 == v12) {
                // break -> 0x1000a632
                break;
            }
            int32_t v18 = *(int32_t *)(v14 + 20); // 0x1000a5d2
            v15 = v18;
            if (v18 == 0) {
                v16 = v18;
                goto lab_0x1000a5d9_2;
            }
            v14 = v18;
        }
        goto lab_0x1000a632;
    }
  lab_0x1000a5d9_2:
    // 0x1000a5d9
    g4 = result;
    int32_t v19 = *(int32_t *)(result + 28); // 0x1000a5dc
    g4 = v19;
    int32_t v20; // 0x1000a5e6
    if (v19 != 0) {
        // 0x1000a5e3
        v20 = function_1000a510(a1, 0);
        v15 = v20;
    } else {
        v20 = v16;
    }
    if (v20 == 0) {
        if ((char)a2 == (char)v20) {
            // 0x1000a64f
            g5 = *(int32_t *)g8;
            g3 = *(int32_t *)(g8 + 4);
            g7 = *(int32_t *)(g8 + 8);
            g2 = v2;
            return 0;
        }
        int32_t v21 = KeyValuesSystem(); // 0x1000a5f4
        g4 = v21;
        int32_t v22 = *(int32_t *)(*(int32_t *)v21 + 4); // 0x1000a5fe
        *(int32_t *)(g8 - 4) = 36;
        int32_t v23; // 0x1000a621
        if (v22 == 0) {
            v23 = 0;
        } else {
            // 0x1000a609
            *(int32_t *)(g8 - 8) = g3;
            g4 = v22;
            v23 = function_1000a4a0((int32_t)&g169);
        }
        // 0x1000a615
        v15 = v23;
        int32_t v24 = g5; // 0x1000a615
        if (v24 == 0) {
            // 0x1000a61e
            g4 = result;
            *v13 = v23;
        } else {
            // 0x1000a619
            *(int32_t *)(v24 + 20) = v23;
        }
        // 0x1000a624
        g6 = result;
        *(int32_t *)(v15 + 20) = 0;
        *(char *)(g6 + 16) = 0;
    }
    goto lab_0x1000a632;
  lab_0x1000a632:
    // 0x1000a632
    g4 = v9;
    int32_t result2;
    if (v8 == NULL) {
        // 0x1000a632
        result2 = v15;
    } else {
        // 0x1000a639
        g6 = a2;
        g4 = v9 + 1;
        *(int32_t *)(g8 - 4) = a2;
        *(int32_t *)(g8 - 8) = g4;
        g4 = v15;
        result2 = function_1000a510((char *)&g169, (int32_t)&g169);
    }
    // 0x1000a646
    g5 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    // 0x1000a648
    g7 = *(int32_t *)(g8 + 8);
    g2 = v2;
    return result2;
}

// Address range: 0x1000a660 - 0x1000a6c0
int32_t function_1000a660(int32_t a1, int32_t result) {
    int32_t v1 = function_1000a510((char *)a1, 0); // 0x1000a669
    if (v1 == 0) {
        // 0x1000a6b9
        g2 = a1;
        return result;
    }
    int32_t v2 = (int32_t)*(char *)(v1 + 16); // 0x1000a672
    int32_t v3 = v2 - 1; // 0x1000a676
    g4 = v3;
    g166 = v3;
    switch (v2) {
        case 1: {
            int32_t v4 = *(int32_t *)(v1 + 4); // 0x1000a683
            g4 = v4;
            g2 = a1;
            return function_100128e0(v4);
        }
        case 3: {
            // 0x1000a6a3
            g2 = a1;
            return __asm_cvttss2si(*(int32_t *)(v1 + 12));
        }
        case 5: {
            // 0x1000a693
            g2 = a1;
            return function_10012c91(*(int32_t *)(v1 + 8));
        }
        case 7: {
            // 0x1000a6ac
            g2 = a1;
            return 0;
        }
    }
    // 0x1000a6b2
    g2 = a1;
    return *(int32_t *)(v1 + 12);
}

// Address range: 0x1000a6e0 - 0x1000a701
int32_t function_1000a6e0(int32_t a1, int32_t * a2) {
    int32_t v1 = function_1000a510((char *)a1, 1); // 0x1000a6e9
    int32_t result; // 0x1000a6fe
    if (v1 != 0) {
        // 0x1000a6f2
        g4 = v1;
        result = function_1000a3e0((int32_t)a2);
    } else {
        result = 0;
    }
    // 0x1000a6fd
    return result;
}

// Address range: 0x1000a710 - 0x1000a87a
int32_t function_1000a710(void) {
    int32_t v1 = g4; // 0x1000a719
    g7 = v1;
    int32_t v2 = KeyValuesSystem(); // 0x1000a71b
    g4 = v2;
    int32_t v3 = *(int32_t *)(*(int32_t *)v2 + 4); // 0x1000a721
    int32_t v4; // 0x1000a76d
    if (v3 == 0) {
        // 0x1000a768
        g5 = 0;
        v4 = 0;
    } else {
        if (v1 == 0) {
            // 0x1000a757
            g4 = v3;
            int32_t v5 = function_1000a4a0((int32_t)&g14); // 0x1000a75f
            g5 = v5;
            v4 = v5;
        } else {
            int32_t v6 = KeyValuesSystem(); // 0x1000a732
            g4 = (int32_t)*(int16_t *)(v1 + 18);
            g4 = v3;
            int32_t v7 = function_1000a4a0(v6); // 0x1000a74e
            g5 = v7;
            v4 = v7;
        }
    }
    char * v8 = (char *)(v1 + 16); // 0x1000a76a
    *(char *)(v4 + 16) = *v8;
    int32_t v9 = (int32_t)*v8; // 0x1000a770
    g168 = v9 - 1;
    int32_t v10; // eax
    int32_t v11; // 0x1000a7f8
    switch (v9) {
        case 1: {
            int32_t * v12 = (int32_t *)(v1 + 4); // 0x1000a785
            int32_t v13 = *v12; // 0x1000a785
            if (v13 != 0) {
                // 0x1000a790
                *(int32_t *)(g8 - 4) = v13;
                int32_t v14 = function_10009450((int32_t)&g169) + 1; // 0x1000a796
                *(int32_t *)(g8 - 4) = v14;
                int32_t v15 = __malloc_crt((int32_t)&g169); // 0x1000a79a
                *(int32_t *)(g5 + 4) = v15;
                g4 = *v12;
                *(int32_t *)(g8 - 4) = v14;
                *(int32_t *)(g8 - 8) = g4;
                *(int32_t *)(g8 - 12) = v15;
                function_10009a40();
            }
            goto lab_0x1000a848;
        }
        case 2: {
            // 0x1000a7fb
            *(int32_t *)(g5 + 12) = *(int32_t *)(v1 + 12);
            goto lab_0x1000a848;
        }
        case 3: {
            // 0x1000a803
            *(int32_t *)(g5 + 12) = *(int32_t *)(v1 + 12);
            goto lab_0x1000a848;
        }
        case 4: {
            int32_t v16 = *(int32_t *)(v1 + 12); // 0x1000a80b
            g4 = v16;
            *(int32_t *)(g5 + 12) = v16;
            goto lab_0x1000a848;
        }
        case 5: {
            int32_t * v17 = (int32_t *)(v1 + 8); // 0x1000a7b5
            int32_t v18 = *v17; // 0x1000a7b5
            if (v18 == 0) {
                goto lab_0x1000a848;
            } else {
                int32_t v19 = v18; // 0x1000a7c6
                uint16_t v20 = *(int16_t *)v19; // 0x1000a7c3
                int32_t v21 = (int32_t)v20 | g4 & -0x10000; // 0x1000a7c3
                g4 = v21;
                int32_t v22 = v19 + 2; // 0x1000a7c6
                while (v20 != 0) {
                    // 0x1000a7c3
                    v19 = v22;
                    v20 = *(int16_t *)v19;
                    v21 = (int32_t)v20 | v21 & -0x10000;
                    g4 = v21;
                    v22 = v19 + 2;
                }
                // 0x1000a7ce
                g4 = -1;
                *(int32_t *)(g8 - 4) = -1;
                int32_t v23 = __malloc_crt((int32_t)&g169); // 0x1000a7e8
                v10 = v23;
                g4 = 2 * (v22 - (v18 + 2)) / 2 + 2;
                *(int32_t *)(g5 + 8) = v23;
                *(int32_t *)(g8 - 4) = g4;
                v11 = g8 - 8;
                *(int32_t *)v11 = *v17;
                goto lab_0x1000a83f;
            }
        }
        case 6: {
            // 0x1000a813
            *(char *)(g5 + 12) = *(char *)(v1 + 12);
            *(char *)(g5 + 13) = *(char *)(v1 + 13);
            unsigned char v24 = *(char *)(v1 + 14); // 0x1000a820
            g4 = g4 & -256 | (int32_t)v24;
            *(char *)(g5 + 14) = v24;
            *(char *)(g5 + 15) = *(char *)(v1 + 15);
            goto lab_0x1000a848;
        }
        case 7: {
            // 0x1000a82f
            *(int32_t *)(g8 - 4) = 8;
            int32_t v25 = __malloc_crt((int32_t)&g169); // 0x1000a831
            v10 = v25;
            *(int32_t *)(g5 + 4) = v25;
            g4 = *(int32_t *)(v1 + 4);
            *(int32_t *)(g8 - 4) = 8;
            int32_t v26 = g8 - 8; // 0x1000a83e
            *(int32_t *)v26 = g4;
            v11 = v26;
            goto lab_0x1000a83f;
        }
        default: {
            goto lab_0x1000a848;
        }
    }
  lab_0x1000a848:;
    int32_t v27 = *(int32_t *)(v1 + 24); // 0x1000a848
    int32_t v28 = v27; // esi
    g3 = 0;
    if (v27 != 0) {
        while (true) {
            // 0x1000a851
            g4 = v27;
            int32_t v29 = function_1000a710(); // 0x1000a853
            v10 = v29;
            int32_t v30 = g3; // 0x1000a858
            if (v30 == 0) {
                // 0x1000a861
                *(int32_t *)(g5 + 24) = v29;
            } else {
                // 0x1000a85c
                *(int32_t *)(v30 + 20) = v29;
            }
            // 0x1000a864
            *(int32_t *)(v10 + 20) = 0;
            int32_t v31 = *(int32_t *)(v28 + 20); // 0x1000a86b
            v28 = v31;
            g3 = v10;
            if (v31 == 0) {
                // break -> 0x1000a874
                break;
            }
            v27 = v31;
        }
    }
    int32_t result = g5; // 0x1000a874
    g5 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 8);
    return result;
  lab_0x1000a83f:
    // 0x1000a83f
    *(int32_t *)(v11 - 4) = v10;
    function_10009a40();
    goto lab_0x1000a848;
}

// Address range: 0x1000a8a0 - 0x1000a8be
int32_t function_1000a8a0(void) {
    int32_t v1 = g7; // bp-4
    int32_t v2 = g4; // 0x1000a8a1
    int32_t * v3;
    int32_t result; // 0x1000a8bd
    if (v2 == 0) {
        // 0x1000a8a0
        result = g1;
        v3 = &v1;
    } else {
        // 0x1000a8a7
        function_1000a140();
        int32_t v4 = KeyValuesSystem(); // 0x1000a8ac
        g4 = v4;
        result = *(int32_t *)(*(int32_t *)v4 + 8);
        v3 = &v2;
    }
    // 0x1000a8bc
    g7 = *v3;
    return result;
}

// Address range: 0x1000a8c0 - 0x1000a996
int32_t function_1000a8c0(int32_t result) {
    int32_t v1 = g2; // 0x1000a8c0
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g4; // 0x1000a8c3
    int32_t v4 = g5; // bp-16
    int32_t v5 = *(int32_t *)(result + 24); // 0x1000a8c9
    g5 = v5;
    g3 = v3;
    if (v5 == 0) {
        // 0x1000a98e
        g5 = *(int32_t *)(int32_t)&v4;
        g2 = v1;
        return result;
    }
    int32_t v6 = v3; // 0x1000a8e0
    int32_t result2; // eax
    int32_t v7; // 0x1000a94a
    while (true) {
      lab_0x1000a8e0:;
        int32_t v8 = *(int32_t *)(v6 + 24); // 0x1000a8e0
        g7 = v8;
        if (v8 == 0) {
            v7 = v5;
            goto lab_0x1000a94a;
        } else {
            while (true) {
                // 0x1000a8e7
                result2 = KeyValuesSystem();
                int32_t v9 = g7; // 0x1000a8ed
                int32_t v10 = (int32_t)*(int16_t *)(v9 + 18); // 0x1000a8ed
                g4 = v10;
                unsigned char v11 = *(char *)(v9 + 3); // 0x1000a8f1
                int32_t v12 = g8 - 4; // 0x1000a8ff
                *(int32_t *)v12 = (int32_t)v11 | 256 * v10;
                int32_t v13 = result2; // 0x1000a900
                g4 = v13;
                if (g5 == 0) {
                    // 0x1000a92a
                    g1 = &g14;
                } else {
                    // 0x1000a90b
                    g1 = KeyValuesSystem();
                    int32_t v14 = g5; // 0x1000a911
                    int32_t v15 = (int32_t)*(int16_t *)(v14 + 18); // 0x1000a911
                    g4 = v15;
                    unsigned char v16 = *(char *)(v14 + 3); // 0x1000a915
                    int32_t v17 = g8 - 4; // 0x1000a923
                    *(int32_t *)v17 = (int32_t)v16 | 256 * v15;
                    g4 = g1;
                    v12 = v17;
                }
                // 0x1000a92f
                g4 = v13;
                *(int32_t *)(v12 - 4) = v13;
                *(int32_t *)(v12 - 8) = g1;
                if (function_10009470((int32_t)&g169, (int32_t)&g169) == 0) {
                    // break -> 0x1000a95d
                    break;
                }
                int32_t v18 = *(int32_t *)(g7 + 20); // 0x1000a940
                g7 = v18;
                if (v18 == 0) {
                    // 0x1000a947
                    g3 = v3;
                    v7 = g5;
                    goto lab_0x1000a94a;
                }
            }
            // 0x1000a95d
            *(int32_t *)(g8 + 4) = g5;
            g4 = g7;
            result2 = function_1000a8c0((int32_t)&g169);
            g3 = v3;
            goto lab_0x1000a982;
        }
    }
  lab_0x1000a98d:
    // 0x1000a98e
    g5 = *(int32_t *)(g8 + 4);
    g2 = v2;
    return result2;
  lab_0x1000a94a:
    // 0x1000a94a
    g4 = v7;
    int32_t v19 = function_1000a710(); // 0x1000a94c
    result2 = v19;
    int32_t * v20 = (int32_t *)(g3 + 24); // 0x1000a951
    int32_t v21 = *v20; // 0x1000a951
    g4 = v21;
    if (v21 != 0) {
        int32_t * v22 = (int32_t *)(v21 + 20); // 0x1000a97423
        int32_t v23 = *v22; // 0x1000a97424
        int32_t * v24; // 0x1000a974
        if (v23 != 0) {
            g4 = v23;
            v24 = (int32_t *)(v23 + 20);
            int32_t v25 = *v24; // 0x1000a974
            while (v25 != 0) {
                // 0x1000a97b
                v23 = v25;
                g4 = v23;
                v24 = (int32_t *)(v23 + 20);
                v25 = *v24;
            }
        } else {
            v24 = v22;
        }
        // 0x1000a97f
        *v24 = v19;
    } else {
        // 0x1000a958
        *v20 = v19;
    }
    goto lab_0x1000a982;
  lab_0x1000a982:;
    int32_t v26 = *(int32_t *)(g5 + 20); // 0x1000a982
    g5 = v26;
    if (v26 == 0) {
        // break -> 0x1000a98d
        goto lab_0x1000a98d;
    }
    // 0x1000a982
    v5 = v26;
    v6 = g3;
    goto lab_0x1000a8e0;
}

// Address range: 0x1000a9a0 - 0x1000a9fa
int32_t function_1000a9a0(int32_t a1) {
    // 0x1000a9a0
    g7 = g4;
    int32_t v1 = KeyValuesSystem(); // 0x1000a9a6
    g4 = v1;
    int32_t v2 = *(int32_t *)(*(int32_t *)v1 + 4); // 0x1000a9b0
    int32_t result;
    if (v2 == 0) {
        result = 0;
    } else {
        // 0x1000a9bb
        g4 = v2;
        result = function_1000a4a0(a1);
    }
    // 0x1000a9ca
    *(char *)(result + 17) = (char)(*(char *)(g7 + 17) != 0);
    int32_t * v3 = (int32_t *)(g7 + 24); // 0x1000a9d4
    int32_t v4 = *v3; // 0x1000a9d4
    g4 = v4;
    if (v4 == 0) {
        // 0x1000a9db
        *v3 = result;
        g7 = *(int32_t *)g8;
        g2 = *(int32_t *)(g8 + 4);
        return result;
    }
    int32_t * v5 = (int32_t *)(v4 + 20); // 0x1000a9e714
    int32_t v6 = *v5; // 0x1000a9e715
    int32_t * v7; // 0x1000a9e7
    if (v6 != 0) {
        g4 = v6;
        v7 = (int32_t *)(v6 + 20);
        int32_t v8 = *v7; // 0x1000a9e7
        while (v8 != 0) {
            // 0x1000a9ee
            v6 = v8;
            g4 = v6;
            v7 = (int32_t *)(v6 + 20);
            v8 = *v7;
        }
    } else {
        v7 = v5;
    }
    // 0x1000a9f2
    *v7 = result;
    g7 = *(int32_t *)g8;
    g2 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x1000aa00 - 0x1000abef
int32_t function_1000aa00(char * a1, int32_t result) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g5; // 0x1000aa0b
    g5 = (int32_t)a1;
    g7 = g4;
    int32_t v3 = function_1000a510(a1, 0); // 0x1000aa14
    g3 = v3;
    int32_t v4; // bp-68
    if (v3 == 0) {
        goto lab_0x1000abe3;
    } else {
        int32_t v5 = (int32_t)*(char *)(v3 + 16); // 0x1000aa23
        g167 = v5 - 1;
        switch (v5) {
            case 1: {
                goto lab_0x1000abd7;
            }
            case 2: {
                goto lab_0x1000aabb;
            }
            case 3: {
                int128_t v6 = __asm_cvtps2pd(__asm_movss_11(*(int32_t *)(v3 + 12))); // 0x1000aa40
                g170 = v6;
                __asm_movsd(v6);
                int32_t v7 = &v4; // 0x1000aa4d
                function_10009a90(&v4, 64, "%f");
                int32_t v8 = g5; // 0x1000aa5d
                g4 = g7;
                int32_t v9 = function_1000a510((char *)v8, 1); // 0x1000aa60
                if (v9 != 0) {
                    int32_t * v10 = (int32_t *)(v9 + 4); // 0x1000aa6f
                    int32_t v11 = *v10; // 0x1000aa6f
                    g4 = v11;
                    _3f__3f_3_40_YAXPAX_40_Z(v11);
                    int32_t * v12 = (int32_t *)(v9 + 8); // 0x1000aa78
                    _3f__3f_3_40_YAXPAX_40_Z(*v12);
                    *v12 = 0;
                    int32_t v13 = __malloc_crt(function_10009450(v7) + 1); // 0x1000aa95
                    g4 = v7;
                    *v10 = v13;
                    function_10009a40();
                    g5 = v8;
                    *(char *)(v9 + 16) = 1;
                    g7 = 1;
                    g3 = (int32_t)a1;
                    g2 = v1;
                    return *(int32_t *)(v3 + 4);
                }
                goto lab_0x1000abd7;
            }
            case 4: {
                goto lab_0x1000aabb;
            }
            case 5: {
                int32_t v14 = *(int32_t *)(v3 + 8); // 0x1000abab
                g4 = v14;
                int32_t v15; // bp-580
                if (V_UnicodeToUTF8(v14, &v15, 512) == 0) {
                    goto lab_0x1000abe3;
                } else {
                    // 0x1000abc8
                    g4 = g7;
                    function_1000a6e0(g5, &v15);
                    goto lab_0x1000abd7;
                }
            }
            case 7: {
                int32_t v16 = &v4; // 0x1000ab41
                g4 = v16;
                function_10009a90(&v4, 64, "%lld");
                int32_t v17 = g5; // 0x1000ab51
                g4 = g7;
                int32_t v18 = function_1000a510((char *)v17, 1); // 0x1000ab54
                if (v18 != 0) {
                    int32_t * v19 = (int32_t *)(v18 + 4); // 0x1000ab5f
                    _3f__3f_3_40_YAXPAX_40_Z(*v19);
                    int32_t * v20 = (int32_t *)(v18 + 8); // 0x1000ab68
                    _3f__3f_3_40_YAXPAX_40_Z(*v20);
                    g4 = v16;
                    *v20 = 0;
                    *v19 = __malloc_crt(function_10009450(v16) + 1);
                    function_10009a40();
                    g5 = v17;
                    *(char *)(v18 + 16) = 1;
                    g7 = 1;
                    g3 = (int32_t)a1;
                    g2 = v1;
                    return *(int32_t *)(v3 + 4);
                }
                goto lab_0x1000abd7;
            }
            default: {
                goto lab_0x1000abe3;
            }
        }
    }
  lab_0x1000abe3:
    // 0x1000abe3
    g5 = (int32_t)a1;
    g7 = 0;
    g3 = v2;
    g2 = v1;
    return result;
  lab_0x1000abd7:
    // 0x1000abd7
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = v1;
    return *(int32_t *)(v3 + 4);
  lab_0x1000aabb:;
    int32_t v21 = &v4; // 0x1000aac4
    function_10009a90(&v4, 64, "%d");
    int32_t v22 = g5; // 0x1000aad4
    g4 = g7;
    int32_t v23 = function_1000a510((char *)v22, 1); // 0x1000aad7
    if (v23 != 0) {
        int32_t * v24 = (int32_t *)(v23 + 4); // 0x1000aae6
        int32_t v25 = *v24; // 0x1000aae6
        g4 = v25;
        _3f__3f_3_40_YAXPAX_40_Z(v25);
        int32_t * v26 = (int32_t *)(v23 + 8); // 0x1000aaef
        _3f__3f_3_40_YAXPAX_40_Z(*v26);
        *v26 = 0;
        int32_t v27 = __malloc_crt(function_10009450(v21) + 1); // 0x1000ab0c
        g4 = v21;
        *v24 = v27;
        function_10009a40();
        g5 = v22;
        *(char *)(v23 + 16) = 1;
        g7 = 1;
        g3 = (int32_t)a1;
        g2 = v1;
        return *(int32_t *)(v3 + 4);
    }
    goto lab_0x1000abd7;
}

// Address range: 0x1000ac10 - 0x1000ad09
int32_t function_1000ac10(int32_t a1) {
    int32_t v1 = g2; // 0x1000ac10
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g4; // 0x1000ac1a
    g3 = v3;
    int32_t result = *(int32_t *)(a1 + 12); // 0x1000ac1c
    g4 = result;
    if (result < 1) {
        // 0x1000ad02
        g2 = v1;
        return 0;
    }
    int32_t v4 = 0; // 0x1000acf4
    int32_t v5; // 0x1000acb1
    int32_t v6; // 0x1000ac3c
    while (true) {
        int32_t v7 = *(int32_t *)a1; // 0x1000ac37
        v6 = *(int32_t *)(*(int32_t *)(v7 + 4 * v4) + 24);
        g5 = v6;
        if (v6 != 0) {
            while (true) {
              lab_0x1000ac47:;
                int32_t v8 = *(int32_t *)(g3 + 24); // 0x1000ac47
                g7 = v8;
                if (v8 == 0) {
                    v5 = v6;
                    goto lab_0x1000acb1;
                } else {
                    while (true) {
                        int32_t v9 = KeyValuesSystem(); // eax
                        int32_t v10 = g7; // 0x1000ac54
                        int32_t v11 = (int32_t)*(int16_t *)(v10 + 18); // 0x1000ac54
                        g4 = v11;
                        unsigned char v12 = *(char *)(v10 + 3); // 0x1000ac58
                        int32_t v13 = g8 - 4; // 0x1000ac66
                        *(int32_t *)v13 = (int32_t)v12 | 256 * v11;
                        g4 = v9;
                        if (g5 == 0) {
                            // 0x1000ac91
                            g1 = &g14;
                        } else {
                            // 0x1000ac72
                            g1 = KeyValuesSystem();
                            int32_t v14 = g5; // 0x1000ac78
                            int32_t v15 = (int32_t)*(int16_t *)(v14 + 18); // 0x1000ac78
                            g4 = v15;
                            unsigned char v16 = *(char *)(v14 + 3); // 0x1000ac7c
                            int32_t v17 = g8 - 4; // 0x1000ac8a
                            *(int32_t *)v17 = (int32_t)v16 | 256 * v15;
                            g4 = g1;
                            v13 = v17;
                        }
                        // 0x1000ac96
                        g4 = v9;
                        *(int32_t *)(v13 - 4) = v9;
                        *(int32_t *)(v13 - 8) = g1;
                        if (function_10009470((int32_t)&g169, (int32_t)&g169) == 0) {
                            // break -> 0x1000acc4
                            break;
                        }
                        int32_t v18 = *(int32_t *)(g7 + 20); // 0x1000aca7
                        g7 = v18;
                        if (v18 == 0) {
                            // 0x1000acae
                            g3 = v3;
                            v5 = g5;
                            goto lab_0x1000acb1;
                        }
                    }
                    // 0x1000acc4
                    *(int32_t *)(g8 + 4) = g5;
                    g4 = g7;
                    function_1000a8c0((int32_t)&g169);
                    g3 = v3;
                    goto lab_0x1000ace3;
                }
            }
          lab_0x1000acee:
            // 0x1000acee
            g4 = result;
        }
        int32_t v19 = v4 + 1; // 0x1000acf4
        if (v19 == result) {
            // break -> 0x1000ad00
            break;
        }
        v4 = v19;
    }
    // 0x1000ad00
    g7 = *(int32_t *)(g8 + 4);
    // 0x1000ad02
    g2 = v2;
    return result;
  lab_0x1000acb1:
    // 0x1000acb1
    g4 = v5;
    int32_t v20 = function_1000a710(); // 0x1000acb3
    int32_t * v21 = (int32_t *)(g3 + 24); // 0x1000acb8
    int32_t v22 = *v21; // 0x1000acb8
    g4 = v22;
    if (v22 != 0) {
        int32_t * v23 = (int32_t *)(v22 + 20); // 0x1000acd530
        int32_t v24 = *v23; // 0x1000acd531
        int32_t * v25; // 0x1000acd5
        if (v24 != 0) {
            g4 = v24;
            v25 = (int32_t *)(v24 + 20);
            int32_t v26 = *v25; // 0x1000acd5
            while (v26 != 0) {
                // 0x1000acdc
                v24 = v26;
                g4 = v24;
                v25 = (int32_t *)(v24 + 20);
                v26 = *v25;
            }
        } else {
            v25 = v23;
        }
        // 0x1000ace0
        *v25 = v20;
    } else {
        // 0x1000acbf
        *v21 = v20;
    }
    goto lab_0x1000ace3;
  lab_0x1000ace3:;
    int32_t v27 = *(int32_t *)(g5 + 20); // 0x1000ace3
    g5 = v27;
    if (v27 == 0) {
        // break -> 0x1000acee
        goto lab_0x1000acee;
    }
    v6 = v27;
    goto lab_0x1000ac47;
}

// Address range: 0x1000ad10 - 0x1000b14d
int32_t function_1000ad10(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g4; // 0x1000ad17
    int32_t v2; // 0x1000ad3e
    if (v1 == 0) {
        v2 = -1;
    } else {
        int32_t v3 = (int32_t)*(int16_t *)(v1 + 18); // 0x1000ad22
        g4 = v3;
        int32_t v4 = 256 * v3; // 0x1000ad2a
        g4 = v4;
        v2 = (int32_t)*(char *)(v1 + 3) | v4;
    }
    // 0x1000ad34
    g4 = v2;
    int32_t v5 = g52; // 0x1000ad34
    int32_t v6; // 0x1000ad5b
    if (v5 < 64) {
        // 0x1000ad3e
        *(int32_t *)(4 * v5 + (int32_t)&g50) = v2;
        v6 = g52;
    } else {
        v6 = v5;
    }
    int32_t v7 = v6 + 1; // 0x1000ad4a
    g4 = v6;
    g52 = v7;
    int32_t v8 = g53; // 0x1000ad53
    int32_t v9; // 0x1000ad8215
    if (v8 <= v6) {
        // 0x1000ad5b
        g53 = v6;
        v9 = v6;
    } else {
        v9 = v8;
    }
    int32_t v10; // 0x1000ad82
    int32_t v11; // 0x1000ad8a
    if (v7 < 64) {
        // 0x1000ad66
        *(int32_t *)(4 * v7 + (int32_t)&g50) = -1;
        v10 = g53;
        v11 = g52;
    } else {
        v10 = v9;
        v11 = v7;
    }
    // 0x1000ad76
    g52 = v11 + 1;
    if (v10 <= v11) {
        // 0x1000ad8a
        g53 = v11;
    }
    // 0x1000ad90
    char v12; // bp-5
    int32_t v13 = &v12; // 0x1000ad93
    char v14; // bp-6
    int32_t v15 = &v14; // 0x1000ad97
    g6 = v15;
    g4 = v1;
    char v16 = 1; // bp-7
    int32_t v17 = function_1000a1e0(a2, (int32_t *)&v14, (int32_t *)&v12); // 0x1000ada2
    int32_t v18; // bp-44
    int32_t result; // 0x1000b14a
    int32_t v19; // 0x1000add0
    int32_t v20; // 0x1000aee4
    int32_t v21; // 0x1000ae6f
    if (v17 == 0) {
      lab_0x1000b112:
        // 0x1000b112
        *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got EOF instead of keyname";
    } else {
        // 0x1000adb4
        v20 = &v18;
        int32_t v22 = &v16; // 0x1000ae24
        while (true) {
          lab_0x1000adb4:;
            unsigned char v23 = *(char *)v17; // 0x1000adb4
            g4 = g4 & -256 | (int32_t)v23;
            if (v23 == 0) {
                // break -> 0x1000b119
                break;
            }
            if (v23 == 125) {
                // 0x1000adc3
                if (v14 == 0) {
                    result = v17;
                    goto lab_0x1000b13d;
                }
            }
            // 0x1000adcd
            *(int32_t *)(g8 - 4) = v17;
            g4 = g3;
            v19 = function_1000a9a0((int32_t)&g169);
            g5 = v19;
            int32_t v24;
            if (v19 == 0) {
                v24 = -1;
            } else {
                int32_t v25 = (int32_t)*(char *)(v19 + 3); // 0x1000ade2
                g4 = v25;
                v24 = v25 | 256 * (int32_t)*(int16_t *)(v19 + 18);
            }
            // 0x1000adf0
            g4 = a2;
            g6 = v13;
            *(int32_t *)(4 * g7 + (int32_t)&g50) = v24;
            *(int32_t *)(g8 - 4) = v13;
            *(int32_t *)(g8 - 8) = v15;
            *(int32_t *)(g8 - 12) = g4;
            g4 = g3;
            int32_t v26 = function_1000a1e0(v19, &g169, &g169); // 0x1000ae05
            g7 = v26;
            if (v12 != 0) {
                if (v26 == 0) {
                    // 0x1000b120
                    *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got NULL key";
                    goto lab_0x1000b133;
                }
                // 0x1000ae1d
                g6 = a3;
                *(int32_t *)(g8 - 4) = 0;
                *(int32_t *)(g8 - 8) = g6;
                *(int32_t *)(g8 - 12) = g7;
                g1 = v22;
                *(int32_t *)(g8 - 16) = v22;
                g4 = &g128;
                v16 = 0;
                int32_t v27 = function_1000f850((int32_t *)v26, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000ae31
                if ((char)v27 == 0) {
                    // 0x1000ae3a
                    *(int32_t *)(g8 - 4) = (int32_t)"KV Conditional Evaluation Error";
                    g4 = &g50;
                    function_1000a060((char)&g169);
                }
                // 0x1000ae49
                g4 = g4 & -256 | (int32_t)v16;
                g6 = v13;
                *(int32_t *)(g8 - 4) = v13;
                int32_t v28 = g4; // 0x1000ae50
                v16 = v28;
                g4 = a2;
                *(int32_t *)(g8 - 8) = v15;
                *(int32_t *)(g8 - 12) = g4;
                g4 = g3;
                int32_t v29 = function_1000a1e0(0x1000000 * v28 / 0x1000000, &g169, &g169); // 0x1000ae5d
                g7 = v29;
                v21 = v29;
            } else {
                v21 = v26;
            }
            if (v21 == 0) {
                // 0x1000b120
                *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got NULL key";
                goto lab_0x1000b133;
            }
            unsigned char v30 = *(char *)v21; // 0x1000ae6f
            unsigned char v31 = v14; // 0x1000ae71
            g4 = g4 & -256 | (int32_t)v31;
            if (v30 == 125) {
                if (v31 == 0) {
                    // 0x1000b127
                    *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got } in key";
                    goto lab_0x1000b133;
                }
            }
            if (v30 != 123) {
                goto lab_0x1000aeae;
            } else {
                if (v31 != 0) {
                    goto lab_0x1000aeae;
                } else {
                    // 0x1000ae88
                    g4 = a2;
                    *(int32_t *)(g8 - 4) = a3;
                    *(int32_t *)(4 * v11 + (int32_t)&g50) = -1;
                    *(int32_t *)(g8 - 4) = g4;
                    *(int32_t *)(g8 - 8) = a1;
                    g4 = g5;
                    g1 = function_1000ad10(v21, (int32_t)&g169, (int32_t)&g169);
                    goto lab_0x1000b0ca;
                }
            }
        }
        // 0x1000b119
        *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got empty keyname";
    }
    goto lab_0x1000b133;
  lab_0x1000aeae:
    // 0x1000aeae
    if (v12 != 0) {
        // 0x1000b12e
        *(int32_t *)(g8 - 4) = (int32_t)"RecursiveLoadFromBuffer:  got conditional between key and value";
        goto lab_0x1000b133;
    }
    int32_t v32 = *(int32_t *)(g5 + 4); // 0x1000aeb8
    int32_t v33; // 0x1000aecf
    if (v32 != 0) {
        // 0x1000aebf
        *(int32_t *)(g8 - 4) = v32;
        _3f__3f_3_40_YAXPAX_40_Z(v21);
        *(int32_t *)(g5 + 4) = 0;
        v33 = g7;
    } else {
        v33 = v21;
    }
    // 0x1000aecf
    *(int32_t *)(g8 - 4) = v33;
    int32_t v34 = function_10009450((int32_t)&g169); // 0x1000aed0
    *(int32_t *)(g8 - 4) = 10;
    int32_t v35; // bp-40
    *(int32_t *)(g8 - 8) = (int32_t)&v35;
    *(int32_t *)(g8 - 12) = g7;
    int32_t v36 = __strtoi64(v34); // eax
    g4 = v20;
    *(int32_t *)(g8 - 4) = v20;
    *(int32_t *)(g8 - 8) = g7;
    int32_t v37 = v36; // ebx
    int32_t v38 = function_10012c64((int32_t)&g169, (int32_t)&g169); // 0x1000aeeb
    g9++;
    if (v37 == 0x7fffffff) {
        goto lab_0x1000af06;
    } else {
        if (v37 != -0x80000000) {
            goto lab_0x1000af14;
        } else {
            goto lab_0x1000af06;
        }
    }
  lab_0x1000af06:;
    int32_t * v39 = __errno(); // 0x1000af06
    int32_t v40 = (int32_t)v39; // 0x1000af06
    char v41;
    if (*v39 == 34) {
        v41 = 1;
        goto lab_0x1000af18;
    } else {
        v38 = v40;
        goto lab_0x1000af14;
    }
  lab_0x1000af18:;
    int32_t v42 = g7; // 0x1000af18
    unsigned char v43 = *(char *)v42; // 0x1000af18
    v36 = (int32_t)v43 | v40 & -256;
    g4 = v34;
    if (v43 == 0) {
        // 0x1000b06d
        *(char *)(g5 + 16) = 1;
        goto lab_0x1000b071;
    } else {
        if (v34 != 18) {
            goto lab_0x1000b037;
        } else {
            if (v43 != 48) {
                goto lab_0x1000b037;
            } else {
                // 0x1000af36
                if (*(char *)(v42 + 1) != 120) {
                    goto lab_0x1000b037;
                } else {
                    int128_t v44 = g170; // 0x1000af43
                    int128_t v45 = __asm_xorpd(v44, v44); // 0x1000af43
                    g170 = v45;
                    int64_t v46;
                    __asm_movlpd(v46, v45);
                    int32_t v47 = v36; // 0x1000af63
                    int32_t v48 = v46; // 0x1000af86
                    float32_t v49 = 5.60519386e-45f;
                    int32_t v50 = v42 + 3;
                    int32_t v51; // 0x1000b001
                    int32_t v52; // 0x1000b005
                    int32_t v53; // 0x1000b00b
                    while (true) {
                        unsigned char v54 = *(char *)(v50 - 1); // 0x1000af63
                        int32_t v55 = v47 & -256; // 0x1000af63
                        int32_t v56; // 0x1000af77
                        if (v54 < 97) {
                            if (v54 >= 65) {
                                // 0x1000af72
                                v56 = v55 | (int32_t)(v54 - 7);
                            } else {
                                v56 = v55 | (int32_t)v54;
                            }
                        } else {
                            // 0x1000af6a
                            v56 = v55 | (int32_t)(v54 - 39);
                        }
                        int32_t v57 = v56 - 48; // 0x1000af77
                        int32_t v58;
                        int32_t v59 = 16 * v58 | v48 / 0x10000000; // 0x1000af7b
                        g4 = v57;
                        unsigned char v60 = *(char *)v50; // 0x1000af84
                        int32_t v61 = v50 & -256; // 0x1000af84
                        uint32_t v62 = v57 + 16 * v48; // 0x1000af89
                        g4 = v62;
                        int32_t v63 = (v57 >> 31) + v59 + (int32_t)(v62 < v57); // 0x1000af8d
                        int32_t v64; // 0x1000afa0
                        if (v60 < 97) {
                            if (v60 >= 65) {
                                // 0x1000af9b
                                v64 = (int32_t)(v60 - 7) | v61;
                            } else {
                                v64 = (int32_t)v60 | v61;
                            }
                        } else {
                            // 0x1000af93
                            v64 = (int32_t)(v60 - 39) | v61;
                        }
                        int32_t v65 = v64 - 48; // 0x1000afa0
                        int32_t v66 = 16 * v63 | v62 / 0x10000000; // 0x1000afa4
                        uint32_t v67 = v65 + 16 * v62; // 0x1000afad
                        g4 = v50;
                        unsigned char v68 = *(char *)(v50 + 1); // 0x1000afb2
                        int32_t v69 = v65 & -256; // 0x1000afb2
                        int32_t v70 = (v65 >> 31) + v66 + (int32_t)(v67 < v65); // 0x1000afb7
                        int32_t v71; // 0x1000afca
                        if (v68 < 97) {
                            if (v68 >= 65) {
                                // 0x1000afc5
                                v71 = (int32_t)(v68 - 7) | v69;
                            } else {
                                v71 = (int32_t)v68 | v69;
                            }
                        } else {
                            // 0x1000afbd
                            v71 = (int32_t)(v68 - 39) | v69;
                        }
                        int32_t v72 = v71 - 48; // 0x1000afca
                        int32_t v73 = 16 * v70 | v67 / 0x10000000; // 0x1000afce
                        g4 = v72;
                        unsigned char v74 = *(char *)(v50 + 2); // 0x1000afd9
                        int32_t v75 = v72 & -256; // 0x1000afd9
                        uint32_t v76 = v72 + 16 * v67; // 0x1000afdf
                        g4 = v76;
                        int32_t v77 = (v72 >> 31) + v73 + (int32_t)(v76 < v72); // 0x1000afe1
                        int32_t v78; // 0x1000aff4
                        if (v74 < 97) {
                            if (v74 >= 65) {
                                // 0x1000afef
                                v78 = (int32_t)(v74 - 7) | v75;
                            } else {
                                v78 = (int32_t)v74 | v75;
                            }
                        } else {
                            // 0x1000afe7
                            v78 = (int32_t)(v74 - 39) | v75;
                        }
                        int32_t v79 = v78 - 48; // 0x1000aff4
                        int32_t v80 = 16 * v77 | v76 / 0x10000000; // 0x1000aff8
                        int32_t v81 = 16 * v76; // 0x1000affc
                        g4 = v81;
                        v51 = v79 + v81;
                        v52 = (v79 >> 31) + v80 + (int32_t)(v51 < v79);
                        int32_t v82 = v50 + 4; // 0x1000b007
                        v53 = (int32_t)v49 - 1;
                        if (v53 == 0) {
                            // break -> 0x1000b014
                            break;
                        }
                        v47 = v79;
                        v48 = v51;
                        v58 = v52;
                        v49 = v53;
                        v50 = v82;
                    }
                    // 0x1000b014
                    *(int32_t *)(g8 - 4) = 8;
                    int32_t v83 = __malloc_crt(v53); // 0x1000b016
                    v36 = v83;
                    g4 = v19;
                    *(int32_t *)(v19 + 4) = v83;
                    *(int32_t *)v36 = v51;
                    g7 = v21;
                    *(int32_t *)(v36 + 4) = v52;
                    *(char *)(g4 + 16) = 7;
                    g5 = g4;
                    g4 = v34;
                    goto lab_0x1000b071;
                }
            }
        }
    }
  lab_0x1000af14:
    v40 = v38;
    v41 = 0;
    goto lab_0x1000af18;
  lab_0x1000b0ca:
    // 0x1000b0ca
    if (v16 == 0) {
        // 0x1000b0d0
        *(int32_t *)(g8 - 4) = g5;
        g4 = g3;
        function_1000a380((int32_t)&g169);
        int32_t v84 = g5; // 0x1000b0d8
        if (v84 != 0) {
            // 0x1000b0dc
            g4 = v84;
            function_1000a140();
            g4 = KeyValuesSystem();
            *(int32_t *)(g8 - 4) = g5;
        }
    }
    // 0x1000b0f3
    *(int32_t *)(g8 - 4) = v13;
    g6 = v15;
    *(int32_t *)(g8 - 8) = v15;
    *(int32_t *)(g8 - 12) = a2;
    g4 = g3;
    v16 = 1;
    int32_t v85 = function_1000a1e0(1, &g169, &g169); // 0x1000b105
    if (v85 == 0) {
        goto lab_0x1000b112;
    }
    // 0x1000adb1
    g7 = v11;
    v17 = v85;
    goto lab_0x1000adb4;
  lab_0x1000b071:;
    // 0x1000b071
    int32_t v86; // 0x1000b097
    if (*(char *)(g5 + 16) != 1) {
        // 0x1000b071
        v86 = g8;
    } else {
        int32_t v87 = g4 + 1; // 0x1000b077
        *(int32_t *)(g8 - 4) = v87;
        v36 = __malloc_crt((int32_t)&g169);
        *(int32_t *)(g8 - 4) = v87;
        *(int32_t *)(g8 - 8) = g7;
        *(int32_t *)(g8 - 12) = v36;
        *(int32_t *)(g5 + 4) = v36;
        function_10009a40();
        v86 = g8 + 16;
    }
    // 0x1000b08e
    *(int32_t *)(v86 - 4) = v13;
    *(int32_t *)(v86 - 8) = v15;
    g4 = v1;
    *(int32_t *)(v86 - 12) = a2;
    int32_t v88 = function_1000a1e0((int32_t)&g169, &g169, &g169); // 0x1000b0a0
    if (v12 == 0) {
        // 0x1000b0bd
        *(int32_t *)(g8 - 4) = g7;
        *(int32_t *)(g8 - 8) = 0;
        g4 = g3;
        g1 = function_1000c030((int32_t)&g169, (int32_t)&g169);
    } else {
        // 0x1000b0ab
        g4 = v1;
        *(int32_t *)(g8 - 4) = a3;
        *(int32_t *)(g8 - 8) = v88;
        int32_t v89 = function_1000a440((int32_t)&g169, (int32_t)&g169); // 0x1000b0b3
        g1 = v89;
        v16 = v89;
    }
    // 0x1000b0c7
    g3 = v1;
    goto lab_0x1000b0ca;
  lab_0x1000b037:
    g6 = v18;
    int32_t v90 = v42 + v34;
    if (v18 > v35) {
        // 0x1000b03f
        if (v18 != v90) {
            goto lab_0x1000b056;
        } else {
            int128_t v91 = __asm_movss_11((int32_t)(float32_t)g163); // 0x1000b046
            g170 = v91;
            *(int32_t *)(g5 + 12) = __asm_movss(v91);
            *(char *)(g5 + 16) = 3;
            goto lab_0x1000b071;
        }
    } else {
        goto lab_0x1000b056;
    }
  lab_0x1000b056:
    // 0x1000b056
    if (v35 != v90) {
        // 0x1000b06d
        *(char *)(g5 + 16) = 1;
        goto lab_0x1000b071;
    } else {
        if (v41 != 0) {
            // 0x1000b06d
            *(char *)(g5 + 16) = 1;
            goto lab_0x1000b071;
        } else {
            // 0x1000b064
            *(int32_t *)(g5 + 12) = v37;
            *(char *)(g5 + 16) = 2;
            goto lab_0x1000b071;
        }
    }
  lab_0x1000b133:
    // 0x1000b133
    g4 = &g50;
    result = function_1000a060((char)&g169);
  lab_0x1000b13d:
    // 0x1000b13d
    g52 -= 2;
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x1000b150 - 0x1000b184
int32_t function_1000b150(int32_t * a1) {
    int32_t result2 = (int32_t)a1;
    int32_t v1 = g7; // 0x1000b153
    int32_t v2 = 1; // bp-12
    g7 = g4;
    int32_t result = function_1000bf20(1); // 0x1000b158
    if ((char)result == 0) {
        // 0x1000b179
        g4 = result2;
        *(char *)a1 = 0;
        g7 = v2;
        g2 = v1;
        return result;
    }
    int32_t v3 = *(int32_t *)(g7 + 12) - *(int32_t *)(g7 + 32); // 0x1000b164
    unsigned char v4 = *(char *)(g4 + v3); // 0x1000b169
    g6 = g6 & -256 | (int32_t)v4;
    *(char *)a1 = v4;
    int32_t * v5 = (int32_t *)(g7 + 12); // 0x1000b171
    *v5 = *v5 + 1;
    g7 = v2;
    g2 = v1;
    return result2;
}

// Address range: 0x1000b190 - 0x1000b2e4
int32_t function_1000b190(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x1000b190
    int32_t v1; // bp-68
    int32_t v2 = &v1; // 0x1000b193
    g5 = a1;
    int32_t * v3 = (int32_t *)a1; // 0x1000b19f
    int32_t v4 = *v3; // 0x1000b19f
    int32_t v5 = g4; // 0x1000b1a4
    g4 = a1;
    if (v4 == 0) {
        // 0x1000b1be
        g5 = a2;
        g3 = a3;
        return v4 & -256;
    }
    int32_t v6 = *v3; // 0x1000b1c9
    *(int32_t *)&g49 = a2;
    int32_t v7 = v6 + 2; // 0x1000b1de
    g4 = &v7;
    int32_t v8 = a1 - 4; // 0x1000b1e9
    int32_t * v9 = (int32_t *)v8; // 0x1000b1e9
    g4 = v8;
    if ((char)*v9 == 0) {
        // 0x1000b211
        g4 = v7;
    } else {
        // 0x1000b1fd
        int32_t v10;
        int32_t v11 = -v10;
        g4 = v11;
        int32_t v12 = v6 + 1 + v10 & v11; // 0x1000b20a
        v7 = v12;
        v7 = v12;
    }
    int32_t v13 = *(int32_t *)(*v9 + 344); // 0x1000b21f
    g4 = v6;
    g7 = v13;
    g4 = v4;
    g4 = a1;
    int32_t v14;
    if (v7 != 0) {
        // 0x1000b261
        g1 = v6;
        g4 = v2;
        *(int16_t *)(v13 + v6) = 0;
        function_1000c7c0(0, 0, 0);
        int32_t v15 = function_10009450(g7); // 0x1000b279
        int32_t v16 = v7; // 0x1000b284
        g1 = v16;
        g4 = v2;
        function_1000c900(g7, v16, v15, 9);
        g4 = v5;
        int32_t v17 = function_1000b450(g3, &v1, g5, a3, a4); // 0x1000b2a4
        int32_t v18;
        if (v18 >= 0) {
            // 0x1000b2b2
            if (v1 != 0) {
                // 0x1000b2b9
                g4 = *(int32_t *)*(int32_t *)0x100221e8;
                v14 = v17;
            } else {
                v14 = v17;
            }
        } else {
            v14 = v17;
        }
    } else {
        v14 = v7 != 0;
    }
    int32_t * v19 = (int32_t *)(g8 - 4); // 0x1000b2d2
    *v19 = g7;
    g4 = g5 - 4;
    int32_t result = *(int32_t *)(*(int32_t *)(g5 - 4) + 348) & -256 | v14 & 255; // 0x1000b2d8
    g5 = *v19;
    g3 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x1000b2f0 - 0x1000b448
int32_t function_1000b2f0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = g2; // 0x1000b2f0
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3; // bp-516
    int32_t v4 = &v3; // 0x1000b2f3
    int32_t v5 = g5; // bp-520
    g5 = g4;
    if (a3 == 0) {
        // 0x1000b441
        g5 = *(int32_t *)(int32_t)&v5;
        g2 = v1;
        return g1;
    }
    // 0x1000b306
    g4 = v4;
    int32_t v6 = v4; // bp-532
    int32_t v7 = &v6; // 0x1000b315
    function_10009a60(&v3, a1, 512);
    int32_t v8 = function_10009450(v4); // 0x1000b322
    int32_t v9 = v8; // eax
    if (v8 >= 1) {
        while (true) {
            char * v10 = (char *)(v8 - 513 + g2); // 0x1000b334
            unsigned char v11 = *v10; // 0x1000b334
            g4 = g4 & -256 | (int32_t)v11;
            if (v11 == 92) {
                // break -> 0x1000b350
                break;
            }
            if (v11 == 47) {
                // break -> 0x1000b350
                break;
            }
            // 0x1000b345
            *v10 = 0;
            int32_t v12 = v9 - 1; // 0x1000b34d
            v9 = v12;
            if (v12 < 1) {
                // break -> 0x1000b350
                break;
            }
            v8 = v12;
        }
    }
    // 0x1000b350
    v6 = -1;
    g4 = v4;
    function_10009650(v4, (int32_t *)a2, 512, -1);
    g7 = *(int32_t *)0x10022220;
    int32_t v13 = KeyValuesSystem(); // 0x1000b372
    int32_t v14 = *(int32_t *)v13; // 0x1000b374
    g6 = v14;
    g4 = v13;
    int32_t v15 = *(int32_t *)(v14 + 4); // 0x1000b378
    v6 = 36;
    int32_t v16;
    if (v15 == 0) {
        v16 = 0;
    } else {
        // 0x1000b383
        g4 = v15;
        v7 = g8;
        v16 = function_1000a4a0(v4);
    }
    // 0x1000b397
    g4 = a4;
    *(int32_t *)(v7 - 4) = a6;
    *(int32_t *)(v7 - 8) = g4;
    int32_t v17 = g6 & -256 | (int32_t)(*(char *)(g5 + 17) != 0); // 0x1000b3a9
    *(char *)(v16 + 17) = (char)v17;
    *(int32_t *)(g8 - 4) = v4;
    *(int32_t *)(g8 - 8) = a3;
    g4 = v16;
    int32_t v18 = function_1000b190((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000b3b6
    int32_t v19; // 0x1000b43c
    if ((char)v18 == 0) {
        // 0x1000b417
        *(int32_t *)(g8 - 4) = v4;
        *(int32_t *)(g8 - 8) = (int32_t)"KeyValues::ParseIncludedKeys: Couldn't load included keyvalue file %s\n";
        _3f_DevMsg_40__40_YAXPBDZZ();
        g4 = g3;
        function_1000a140();
        int32_t v20 = KeyValuesSystem(); // 0x1000b433
        g4 = v20;
        g1 = *(int32_t *)(*(int32_t *)v20 + 8);
        v19 = g8 - 4;
        *(int32_t *)v19 = g3;
    } else {
        // 0x1000b3bf
        g7 = a5;
        int32_t v21 = *(int32_t *)(a5 + 12); // 0x1000b3c2
        g5 = v21;
        int32_t v22 = *(int32_t *)(a5 + 4); // 0x1000b3c5
        g1 = v22;
        int32_t v23 = v21 + 1; // 0x1000b3c8
        g4 = v23;
        int32_t v24; // 0x1000b3dc
        if (v23 > v22) {
            // 0x1000b3cf
            *(int32_t *)(g8 - 4) = v21 - v22 + 1;
            g4 = g7;
            function_1000d920((int32_t)&g169);
            v24 = g7;
        } else {
            v24 = a5;
        }
        int32_t * v25 = (int32_t *)(v24 + 12); // 0x1000b3dc
        *v25 = *v25 + 1;
        int32_t v26 = *(int32_t *)g7; // 0x1000b3e2
        g4 = v26;
        int32_t v27 = *(int32_t *)(g7 + 12) - g5 - 1; // 0x1000b3e6
        *(int32_t *)(g7 + 16) = v26;
        int32_t v28;
        if (v27 < 1) {
            // 0x1000b3dc
            v28 = g8;
        } else {
            // 0x1000b3ee
            g4 += 4 * g5;
            *(int32_t *)(g8 - 4) = 4 * v27;
            *(int32_t *)(g8 - 8) = g4;
            int32_t v29 = g4 + 4; // 0x1000b3f7
            g4 = v29;
            *(int32_t *)(g8 - 12) = v29;
            _memcpy(&g169, &g169, (int32_t)&g169);
            v28 = g8 + 12;
        }
        int32_t v30 = *(int32_t *)g7; // 0x1000b403
        g4 = v30;
        int32_t v31 = 4 * g5 + v30; // 0x1000b405
        g1 = v31;
        if (v31 != 0) {
            // 0x1000b40c
            *(int32_t *)v31 = g3;
            g3 = *(int32_t *)g8;
            g5 = *(int32_t *)(g8 + 4);
            g2 = v2;
            return g1;
        }
        v19 = v28;
    }
    // 0x1000b43f
    g3 = *(int32_t *)(v19 + 4);
    // 0x1000b441
    g5 = *(int32_t *)(v19 + 8);
    g2 = v2;
    return g1;
}

// Address range: 0x1000b450 - 0x1000b89c
int32_t function_1000b450(int32_t a1, int32_t * a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = (int32_t)a2;
    int32_t v2 = g2; // bp-4
    g2 = &v2;
    int32_t v3; // bp-60
    int32_t v4 = &v3; // 0x1000b453
    int32_t v5 = g4; // 0x1000b458
    g3 = v5;
    int32_t threadId = GetCurrentThreadId(); // 0x1000b45e
    g4 = threadId;
    int32_t v6 = g126; // 0x1000b466
    int32_t v7; // 0x1000b49e
    if (threadId == v6) {
        goto lab_0x1000b480;
    } else {
        // 0x1000b46f
        g126 = v6 == 0 ? threadId : v6;
        if (v6 != 0) {
            // 0x1000b48a
            __asm_pause();
            g5 = 0;
            int32_t v8 = g4; // 0x1000b48f
            g4 = &g126;
            _3f_Lock_40_CThreadFastMutex_40__40_ACEXII_40_Z(v8, 0);
            v7 = g5;
            goto lab_0x1000b49b;
        } else {
            goto lab_0x1000b480;
        }
    }
  lab_0x1000b55c:
    // 0x1000b55c
    *(int32_t *)(g8 - 4) = (int32_t)"#include is NULL ";
    g4 = &g50;
    function_1000a060((char)&g169);
    int32_t v9;
    int32_t v10 = v9;
    goto lab_0x1000b713;
  lab_0x1000b6c0:
    // 0x1000b6c0
    *(int32_t *)(g8 - 4) = (int32_t)"LoadFromBuffer: missing {";
    g4 = &g50;
    function_1000a060((char)&g169);
    goto lab_0x1000b6cf;
  lab_0x1000b5bf:
    // 0x1000b5bf
    *(int32_t *)(g8 - 4) = (int32_t)"#base is NULL ";
    g4 = &g50;
    function_1000a060((char)&g169);
    v10 = v9;
    goto lab_0x1000b713;
  lab_0x1000b713:
    // 0x1000b713
    g4 = v1;
    char * v11; // 0x1000b4ea
    if (*v11 != 0) {
        // break -> 0x1000b720
        goto lab_0x1000b720;
    }
    v9 = v10;
    goto lab_0x1000b4d0;
  lab_0x1000b6cf:;
    // 0x1000b6cf
    char v34;
    if (v34 != 0) {
        // 0x1000b70e
        v10 = g7;
    } else {
        // 0x1000b6d5
        if (v9 != 0) {
            // 0x1000b6dc
            *(int32_t *)(v9 + 20) = 0;
        }
        int32_t v38 = g7; // 0x1000b6e3
        int32_t v39 = *(int32_t *)(v38 + 24); // 0x1000b6e3
        g5 = v39;
        int32_t v40; // 0x1000b701
        if (v39 != 0) {
            // 0x1000b6ea
            g4 = v39;
            function_1000a140();
            g4 = KeyValuesSystem();
            *(int32_t *)(g8 - 4) = v39;
            v40 = g7;
        } else {
            v40 = v38;
        }
        // 0x1000b701
        *(int32_t *)(v40 + 24) = 0;
        *(char *)(g7 + 16) = 0;
        v10 = v9;
    }
    goto lab_0x1000b713;
  lab_0x1000b480:
    // 0x1000b480
    g127++;
    g5 = 0;
    v7 = 0;
    goto lab_0x1000b49b;
  lab_0x1000b49b:;
    int32_t v41 = v7; // bp-40
    v3 = v7;
    *(int32_t *)&g51 = a1;
    g53 = v7;
    char v28; // bp-6
    int32_t v12 = &v28; // 0x1000b4d3
    char v15; // bp-5
    int32_t v13 = &v15; // 0x1000b4d7
    v11 = (char *)(v1 + 20);
    int32_t v16; // bp-16
    int32_t v18 = &v16; // 0x1000b625
    int32_t v30; // bp-7
    int32_t v29 = &v30; // 0x1000b664
    int32_t v37 = &v41; // 0x1000b542
    v9 = v7;
    int32_t v17; // eax
    while (true) {
      lab_0x1000b4d0:
        // 0x1000b4d0
        *(int32_t *)(g8 - 4) = v12;
        g6 = v13;
        *(int32_t *)(g8 - 8) = v13;
        *(int32_t *)(g8 - 12) = v1;
        g4 = g3;
        int32_t v14 = function_1000a1e0(1, &g169, &g169); // 0x1000b4e2
        g4 = v1;
        g5 = v14;
        if (*v11 != 0) {
            // break -> 0x1000b720
            break;
        }
        if (v14 == 0) {
            // break -> 0x1000b720
            break;
        }
        // 0x1000b4fe
        if (v15 == 0) {
            // 0x1000b504
            if (*(char *)v14 == 0) {
                // break -> 0x1000b720
                break;
            }
        }
        // 0x1000b50d
        *(int32_t *)(g8 - 4) = (int32_t)"#include";
        *(int32_t *)(g8 - 8) = v14;
        if (function_100094b0(&g169, (char *)&g169) != 0) {
            // 0x1000b570
            *(int32_t *)(g8 + 4) = (int32_t)"#base";
            *(int32_t *)g8 = v14;
            if (function_100094b0(&g169, (char *)&g169) != 0) {
                // 0x1000b5d3
                if (g7 != 0) {
                    // 0x1000b610
                    v16 = -1;
                    v17 = KeyValuesSystem();
                    *(int32_t *)(g8 - 4) = 1;
                    *(int32_t *)(g8 - 8) = v14;
                    *(int32_t *)(g8 - 12) = v18;
                    g4 = v17;
                    int32_t * v19 = (int32_t *)g7; // 0x1000b62d
                    int32_t v20 = (v16 ^ *v19) & 0xffffff; // 0x1000b632
                    g4 = v20;
                    *v19 = *v19 ^ v20;
                    *(char *)(g7 + 3) = (char)v17;
                    *(int16_t *)(g7 + 18) = (int16_t)(v17 / 256);
                } else {
                    int32_t v21 = KeyValuesSystem(); // 0x1000b5d7
                    g4 = v21;
                    int32_t v22 = *(int32_t *)(*(int32_t *)v21 + 4); // 0x1000b5e1
                    *(int32_t *)(g8 - 4) = 36;
                    int32_t v23;
                    if (v22 == 0) {
                        v23 = 0;
                    } else {
                        // 0x1000b5ec
                        *(int32_t *)(g8 - 8) = v14;
                        g4 = v22;
                        v23 = function_1000a4a0((int32_t)&g169);
                    }
                    int32_t v24 = v23; // esi
                    char v25 = *(char *)(g3 + 17); // 0x1000b5fa
                    g4 = g4 & -256 | (int32_t)(v25 != 0);
                    *(char *)(v23 + 17) = (char)(v25 != 0);
                    if (v9 != 0) {
                        // 0x1000b60b
                        *(int32_t *)(v9 + 20) = v24;
                    }
                }
                // 0x1000b644
                g5 = v1;
                g6 = v12;
                *(int32_t *)(g8 - 4) = v12;
                *(int32_t *)(g8 - 8) = v13;
                *(int32_t *)(g8 - 12) = g5;
                g4 = g3;
                int32_t v26 = function_1000a1e0((int32_t)&g169, &g169, &g169); // 0x1000b652
                g1 = v26;
                int32_t v27; // 0x1000b6a3
                if (v28 != 0) {
                    // 0x1000b65d
                    g4 = a5;
                    *(int32_t *)(g8 - 4) = 0;
                    *(int32_t *)(g8 - 8) = g4;
                    *(int32_t *)(g8 - 12) = g1;
                    g6 = v29;
                    *(int32_t *)(g8 - 16) = v29;
                    g4 = &g128;
                    v30 = 0;
                    int32_t v31 = function_1000f850(NULL, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000b671
                    int32_t v32; // 0x1000b689
                    if ((char)v31 == 0) {
                        // 0x1000b67a
                        *(int32_t *)(g8 - 4) = (int32_t)"KV Conditional Evaluation Error";
                        g4 = &g50;
                        v32 = function_1000a060((char)&g169);
                    } else {
                        v32 = v31;
                    }
                    // 0x1000b689
                    *(int32_t *)(g8 - 4) = v12;
                    g6 = v13;
                    *(int32_t *)(g8 - 8) = v13;
                    *(int32_t *)(g8 - 12) = g5;
                    g4 = g3;
                    int32_t v33 = v30 & 255 | v32 & -256; // 0x1000b697
                    v27 = function_1000a1e0(0x1000000 * v33 / 0x1000000, &g169, &g169);
                    v34 = v33;
                } else {
                    v27 = v26;
                    v34 = 1;
                }
                if (v27 == 0) {
                    goto lab_0x1000b6c0;
                } else {
                    // 0x1000b6a3
                    if (*(char *)v27 != 123) {
                        goto lab_0x1000b6c0;
                    } else {
                        // 0x1000b6a8
                        if (v15 != 0) {
                            goto lab_0x1000b6c0;
                        } else {
                            // 0x1000b6ae
                            g4 = a1;
                            *(int32_t *)(g8 - 4) = a5;
                            *(int32_t *)(g8 - 8) = g5;
                            *(int32_t *)(g8 - 12) = g4;
                            g4 = g7;
                            function_1000ad10((int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                            goto lab_0x1000b6cf;
                        }
                    }
                }
            } else {
                // 0x1000b582
                g6 = v1;
                *(int32_t *)(g8 + 4) = v12;
                *(int32_t *)g8 = v13;
                *(int32_t *)(g8 - 4) = g6;
                g4 = g3;
                int32_t v35 = function_1000a1e0((int32_t)&g169, &g169, &g169); // 0x1000b590
                if (v35 == 0) {
                    goto lab_0x1000b5bf;
                } else {
                    // 0x1000b599
                    if (*(char *)v35 == 0) {
                        goto lab_0x1000b5bf;
                    } else {
                        // 0x1000b59e
                        *(int32_t *)(g8 - 4) = a5;
                        g4 = a4;
                        *(int32_t *)(g8 - 8) = v4;
                        *(int32_t *)(g8 - 12) = g4;
                        *(int32_t *)(g8 - 16) = a3;
                        *(int32_t *)(g8 - 20) = v35;
                        g1 = a1;
                        *(int32_t *)(g8 - 24) = a1;
                        g4 = g3;
                        function_1000b2f0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                        v10 = v9;
                        goto lab_0x1000b713;
                    }
                }
            }
        } else {
            // 0x1000b51f
            g4 = v1;
            g6 = v12;
            *(int32_t *)(g8 + 4) = v12;
            *(int32_t *)g8 = v13;
            *(int32_t *)(g8 - 4) = g4;
            g4 = g3;
            int32_t v36 = function_1000a1e0((int32_t)&g169, &g169, &g169); // 0x1000b52d
            g1 = v36;
            if (v36 == 0) {
                goto lab_0x1000b55c;
            } else {
                // 0x1000b536
                if (*(char *)v36 == 0) {
                    goto lab_0x1000b55c;
                } else {
                    // 0x1000b53b
                    *(int32_t *)(g8 - 4) = a5;
                    *(int32_t *)(g8 - 8) = v37;
                    g4 = a3;
                    *(int32_t *)(g8 - 12) = a4;
                    *(int32_t *)(g8 - 16) = g4;
                    *(int32_t *)(g8 - 20) = v36;
                    *(int32_t *)(g8 - 24) = a1;
                    g4 = g3;
                    function_1000b2f0((int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169);
                    v10 = v9;
                    goto lab_0x1000b713;
                }
            }
        }
    }
  lab_0x1000b720:
    // 0x1000b720
    g3 = v7;
    if (v7 < 1) {
        // 0x1000b759
        g7 = v41;
    } else {
        int32_t v42 = 0; // 0x1000b74f
        while (true) {
            int32_t v43 = v41; // 0x1000b730
            g7 = v43;
            int32_t * v44;
            while (true) {
                // 0x1000b740
                v44 = (int32_t *)(v5 + 20);
                if (v5 == 0) {
                    // break -> 0x1000b74f
                    break;
                }
                int32_t v45 = *v44; // 0x1000b744
                g4 = v45;
                if (v45 == 0) {
                    // break -> 0x1000b74f
                    break;
                }
                v5 = v45;
            }
            // 0x1000b74f
            *v44 = *(int32_t *)(4 * v42 + v43);
            int32_t v46 = v42 + 1; // 0x1000b753
            if (v46 >= v7) {
                // break -> 0x1000b75c
                break;
            }
            v42 = v46;
        }
    }
    int32_t v47 = v7 - 1; // 0x1000b75c
    g5 = v47;
    if (v47 >= 1) {
        int32_t v48 = v47; // 0x1000b763
        int32_t v49 = g7; // 0x1000b763
        while (true) {
            int32_t v50 = *(int32_t *)(4 * v48 + v49); // 0x1000b763
            int32_t v51; // 0x1000b784
            if (v50 != 0) {
                // 0x1000b76a
                g4 = v50;
                function_1000a140();
                g4 = KeyValuesSystem();
                *(int32_t *)(g8 - 4) = v50;
                v51 = g5;
            } else {
                v51 = v48;
            }
            int32_t v52 = v41; // 0x1000b781
            g7 = v52;
            int32_t v53 = v51 - 1; // 0x1000b784
            g5 = v53;
            if (v53 >= 0 != v53 != 0) {
                // break -> 0x1000b789
                break;
            }
            v48 = v53;
            v49 = v52;
        }
    }
    // 0x1000b789
    *(int32_t *)(g8 - 4) = v4;
    g4 = v5;
    function_1000ac10((int32_t)&g169);
    g5 = v47;
    int32_t v54 = v3; // 0x1000b799
    g3 = v54;
    if (v47 >= 0) {
        while (true) {
            int32_t v55 = *(int32_t *)(4 * v47 + v54); // 0x1000b7a0
            int32_t v56; // 0x1000b7be
            if (v55 != 0) {
                // 0x1000b7a7
                g4 = v55;
                function_1000a140();
                g4 = KeyValuesSystem();
                *(int32_t *)(g8 - 4) = v55;
                v56 = g5;
            } else {
                v56 = v47;
            }
            int32_t v57 = v56 - 1; // 0x1000b7be
            g5 = v57;
            if (v57 < 0) {
                // break -> 0x1000b7c1
                break;
            }
            // 0x1000b7be
            v47 = v57;
            v54 = g3;
        }
        // 0x1000b7c1
        g7 = v41;
    }
    // 0x1000b7c4
    v17 = 0;
    *(int32_t *)&g51 = (int32_t)&g14;
    g53 = 0;
    if (v7 >= 0) {
        int32_t v58 = g3; // 0x1000b7df
        if (v58 != 0) {
            int32_t v59 = *(int32_t *)0x100221e8; // 0x1000b7e3
            g4 = v59;
            g4 = *(int32_t *)v59;
            *(int32_t *)(g8 - 4) = v58;
            g3 = 0;
            v3 = 0;
        }
        // 0x1000b7f8
        v17 = 0;
    }
    if (v7 >= 0) {
        int32_t v60 = g3; // 0x1000b804
        if (v60 != 0) {
            int32_t v61 = *(int32_t *)0x100221e8; // 0x1000b808
            g4 = v61;
            g4 = *(int32_t *)v61;
            *(int32_t *)(g8 - 4) = v60;
            v3 = 0;
        }
        // 0x1000b81f
        v17 = 0;
    }
    // 0x1000b824
    if (v7 >= 0) {
        int32_t v62 = g7; // 0x1000b82e
        if (v62 != 0) {
            int32_t v63 = *(int32_t *)0x100221e8; // 0x1000b832
            g4 = v63;
            g4 = *(int32_t *)v63;
            *(int32_t *)(g8 - 4) = v62;
            v41 = 0;
            g7 = 0;
        }
        // 0x1000b84c
        v17 = 0;
    }
    if (v7 >= 0) {
        int32_t v64 = g7; // 0x1000b858
        if (v64 != 0) {
            int32_t v65 = *(int32_t *)0x100221e8; // 0x1000b85c
            g4 = v65;
            int32_t v66 = *(int32_t *)v65; // 0x1000b862
            g4 = v66;
            v17 = *(int32_t *)(*(int32_t *)v66 + 20);
            *(int32_t *)(g8 - 4) = v64;
            v41 = 0;
        }
    }
    int32_t v67 = g127 - 1; // 0x1000b87a
    g127 = v67;
    g4 = v67;
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    int32_t v68; // 0x1000b894
    if (v67 != 0) {
        // 0x1000b87a
        v68 = v17;
    } else {
        // 0x1000b88b
        g126 = 0;
        v68 = &g126;
    }
    // 0x1000b894
    g2 = v2;
    return v68 & -256 | 1;
}

// Address range: 0x1000b8a0 - 0x1000b95a
int32_t function_1000b8a0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    // 0x1000b8a0
    int32_t v1; // bp-56
    int32_t v2 = &v1; // 0x1000b8a3
    int32_t v3 = g5; // 0x1000b8a6
    g5 = a2;
    int32_t v4 = g4; // 0x1000b8aa
    if (a2 == 0) {
        // 0x1000b8b1
        g5 = v3;
        return g1 & -256 | 1;
    }
    int32_t v5 = function_10009450(a2); // 0x1000b8bd
    g7 = v5;
    g4 = v2;
    function_1000c880(a2, v5, 9);
    if (g7 > 2) {
        // 0x1000b8d8
        if (*(char *)a2 == -1) {
            // 0x1000b8dd
            if (*(char *)(a2 + 1) == -2) {
                int32_t v6 = a2 + 2; // 0x1000b8e5
                g5 = v6;
                int32_t v7 = V_UnicodeToUTF8(v6, NULL, 0); // 0x1000b8eb
                int32_t v8 = __malloc_crt(v7); // 0x1000b8f4
                g1 = V_UnicodeToUTF8(g5, (int32_t *)v8, v7);
                g4 = v2;
                function_1000c990(v8, v7, v7, 9);
            }
        }
    }
    // 0x1000b914
    g4 = a4;
    *(int32_t *)(g8 - 4) = a5;
    *(int32_t *)(g8 - 8) = g4;
    g4 = a1;
    *(int32_t *)(g8 - 12) = a3;
    *(int32_t *)(g8 - 16) = v2;
    *(int32_t *)(g8 - 20) = g4;
    g4 = v4;
    int32_t v9 = function_1000b450((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000b92b
    int32_t v10 = g3 & -256 | v9 & 255; // 0x1000b934
    int32_t v11;
    int32_t v12; // 0x1000b950
    if (v11 >= 0) {
        if (v1 != 0) {
            int32_t v13 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000b945
            g4 = v13;
            *(int32_t *)(g8 - 4) = v1;
            v12 = *(int32_t *)(*(int32_t *)v13 + 20);
        } else {
            v12 = 0;
        }
    } else {
        v12 = v9;
    }
    // 0x1000b94f
    g7 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    g5 = *(int32_t *)(g8 + 8);
    return v10 & 255 | v12 & -256;
}

// Address range: 0x1000b960 - 0x1000b9ce
int32_t function_1000b960(int32_t a1, int32_t a2) {
    int32_t v1 = g129; // esi
    if (g129 == 0) {
      lab_0x1000b9a7:
        if (a2 != 0) {
            // 0x1000b9ae
            *(int32_t *)a2 = 1;
        }
        // 0x1000b9b4
        return 0;
    }
    int32_t v2 = g6;
    int32_t v3 = g129; // 0x1000b9a0
    int32_t v4;
    int32_t v5; // 0x1000b977
    while (true) {
      lab_0x1000b972:
        // 0x1000b972
        g4 = a1;
        int32_t v6 = v2; // 0x1000b977
        uint32_t v7 = *(int32_t *)(v3 + 4); // 0x1000b997
        bool v8; // 0x1000b997
        while (true) {
            unsigned char v9 = *(char *)v7; // 0x1000b977
            int32_t v10 = v6 & -256; // 0x1000b977
            v5 = (int32_t)v9 | v10;
            unsigned char v11 = *(char *)a1; // 0x1000b979
            if (v9 != v11) {
                v8 = v9 < v11;
                // break -> 0x1000b997
                break;
            }
            if (v9 == 0) {
                goto lab_0x1000b993_2;
            }
            unsigned char v12 = *(char *)(v7 + 1); // 0x1000b981
            int32_t v13 = (int32_t)v12 | v10; // 0x1000b981
            unsigned char v14 = *(char *)(a1 + 1); // 0x1000b984
            if (v12 != v14) {
                v5 = v13;
                v8 = v12 < v14;
                // break -> 0x1000b997
                break;
            }
            int32_t v15 = v7 + 2; // 0x1000b989
            int32_t v16 = a1 + 2; // 0x1000b98c
            g4 = v16;
            if (v12 == 0) {
                v5 = v13;
                goto lab_0x1000b993_2;
            }
            a1 = v16;
            v6 = v13;
            v7 = v15;
        }
        int32_t v17 = v8; // 0x1000b997
        uint32_t v18 = v17 + v7; // 0x1000b997
        int32_t v19 = v8; // 0x1000b997
        bool v20 = v8 ? v7 < v19 - v17 | v18 != -1 : v7 < v18; // 0x1000b997
        v4 = v19 - (int32_t)!v20;
        goto lab_0x1000b99c;
    }
  lab_0x1000b9ba:;
    int32_t v21; // 0x1000b9c7
    if (a2 != 0) {
        // 0x1000b9c1
        *(int32_t *)a2 = 0;
        v21 = v1;
    } else {
        v21 = v3;
    }
    // 0x1000b9c7
    return *(int32_t *)v21;
  lab_0x1000b993_2:
    v4 = 0;
    goto lab_0x1000b99c;
  lab_0x1000b99c:
    if (v4 == 0) {
        // break -> 0x1000b9ba
        goto lab_0x1000b9ba;
    }
    int32_t v22 = *(int32_t *)(v3 + 8); // 0x1000b9a0
    v1 = v22;
    if (v22 == 0) {
        goto lab_0x1000b9a7;
    }
    v2 = v5;
    v3 = v22;
    goto lab_0x1000b972;
}

// Address range: 0x1000b9d0 - 0x1000b9d9
int32_t CreateInterface(void) {
    // 0x1000b9d0
    return function_1000b960((int32_t)&g169, (int32_t)&g169);
}

// Address range: 0x1000b9e0 - 0x1000b9fc
int32_t function_1000b9e0(int32_t a1) {
    char * lpLibFileName = (char *)*(int32_t *)a1; // 0x1000b9ed
    *(int32_t *)(a1 + 4) = (int32_t)LoadLibraryExA(lpLibFileName, NULL, 8);
    return 0;
}

// Address range: 0x1000ba00 - 0x1000bb28
int32_t function_1000ba00(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t lpLibFileName; // bp-1040
    int32_t v2 = &lpLibFileName; // 0x1000ba03
    g4 = v2;
    function_10009a60(&lpLibFileName, g1, 1024);
    g6 = v2;
    if (function_10009640() == 0) {
        // 0x1000ba33
        function_10009650(v2, (int32_t *)".dll", 1024, -1);
    }
    // 0x1000ba4e
    g4 = v2;
    function_10009740(v2, 92);
    int32_t dwMilliseconds = 0; // edi
    if (GetThreadedLoadLibraryFunc() == 0) {
        int32_t result = (int32_t)LoadLibraryExA((char *)&lpLibFileName, NULL, 8); // 0x1000ba7a
        if (result != dwMilliseconds) {
            // 0x1000ba86
            StackToolsNotify_LoadedLibrary();
        }
        // 0x1000ba96
        g5 = (int32_t)(char *)&lpLibFileName;
        g7 = 0;
        g3 = (int32_t)(char *)8;
        g2 = v1;
        return result;
    }
    // 0x1000ba9f
    g4 = v2;
    int32_t hHandle = CreateSimpleThread(0x1000b9e0, &v2, 0); // 0x1000bab8
    int32_t v3 = WaitForSingleObject((int32_t *)hHandle, dwMilliseconds); // 0x1000bacb
    if (v3 == 258) {
        *(int32_t *)(g8 - 4) = v3;
        *(int32_t *)(g8 - 8) = hHandle;
        int32_t v4 = WaitForSingleObject(&g169, (int32_t)&g169); // 0x1000bad8
        while (v4 == 258) {
            // 0x1000bad4
            *(int32_t *)(g8 - 4) = v4;
            *(int32_t *)(g8 - 8) = hHandle;
            v4 = WaitForSingleObject(&g169, (int32_t)&g169);
        }
    }
    // 0x1000bb15
    *(int32_t *)(g8 - 4) = hHandle;
    ReleaseThreadHandle();
    g4 = 0;
    g5 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g130 = 0;
    g3 = *(int32_t *)(g8 + 12);
    g2 = v1;
    return 0;
}

// Address range: 0x1000bb30 - 0x1000bbd4
int32_t function_1000bb30(void) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-264
    int32_t v3 = &v2; // 0x1000bb33
    g7 = *(int32_t *)0x100221e4;
    int32_t v4 = CommandLine(); // 0x1000bb40
    g4 = v4;
    int32_t v5;
    int32_t v6; // 0x1000bb5b
    if (*(int32_t *)(*(int32_t *)v4 + 40) == 0) {
        // 0x1000bb5b
        v6 = CommandLine();
        g4 = v6;
        if (*(int32_t *)(*(int32_t *)v6 + 40) == 0) {
            goto lab_0x1000bbc8;
        } else {
            v5 = (int32_t)"_ds";
            goto lab_0x1000bb74;
        }
    } else {
        v6 = v4;
        v5 = (int32_t)"_xlsp";
        goto lab_0x1000bb74;
    }
  lab_0x1000bb74:
    // 0x1000bb74
    g7 = v5;
    int32_t v7 = g5; // 0x1000bb7a
    int32_t v8 = v7; // 0x1000bb82
    unsigned char v9 = *(char *)v8; // 0x1000bb80
    g4 = (int32_t)v9 | v6 & -256;
    *(char *)(v8 + v3 - v7) = v9;
    int32_t v10 = v7 + 1; // 0x1000bb85
    while ((char)g4 != 0) {
        // 0x1000bb80
        v8 = v10;
        v9 = *(char *)v8;
        g4 = (int32_t)v9 | g4 & -256;
        *(char *)(v8 + v3 - v7) = v9;
        v10++;
    }
    // 0x1000bb8a
    g4 = v3;
    *(int32_t *)(g8 - 4) = 46;
    *(int32_t *)(g8 - 8) = v3;
    char * v11 = _strchr((char *)&g169, (int32_t)&g169); // 0x1000bb93
    int32_t v12; // 0x1000bba2
    if (v11 != NULL) {
        // 0x1000bb9f
        *v11 = 0;
        v12 = g8;
    } else {
        v12 = g8 + 8;
    }
    // 0x1000bba2
    *(int32_t *)(v12 - 4) = -1;
    *(int32_t *)(v12 - 8) = 260;
    g6 = v3;
    *(int32_t *)(v12 - 12) = g7;
    *(int32_t *)(v12 - 16) = v3;
    function_10009650((int32_t)&g169, &g169, (int32_t)&g169, (int32_t)&g169);
    g1 = v3;
    int32_t result = function_1000ba00(); // 0x1000bbbf
    if (result != 0) {
        // 0x1000bbcf
        g2 = v1;
        return result;
    }
    goto lab_0x1000bbc8;
  lab_0x1000bbc8:
    // 0x1000bbc8
    g1 = g5;
    int32_t result2 = function_1000ba00(); // 0x1000bbca
    // 0x1000bbcf
    g2 = v1;
    return result2;
}

// Address range: 0x1000bbe0 - 0x1000bd86
int32_t function_1000bbe0(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2; // bp-2312
    int32_t v3 = &v2; // 0x1000bbe3
    int32_t v4 = g3; // 0x1000bbe9
    g3 = a1;
    int32_t v5; // 0x1000bc00
    int32_t v6; // 0x1000bc1a
    char * v7; // 0x1000bc29
    if ((char)function_10009960(a1, g5, g7, v4) != 0) {
        goto lab_0x1000bcd7;
    } else {
        // 0x1000bc00
        int32_t v8; // bp-1028
        v5 = &v8;
        __getcwd((char *)&v8, 1024);
        int32_t v9; // bp-1027
        v6 = &v9;
        int32_t v10 = v5; // 0x1000bc22
        unsigned char v11 = *(char *)v10; // 0x1000bc20
        int32_t v12 = (int32_t)v11 | g4 & -256; // 0x1000bc20
        g4 = v12;
        int32_t v13 = v10 + 1; // 0x1000bc22
        while (v11 != 0) {
            // 0x1000bc20
            v10 = v13;
            v11 = *(char *)v10;
            v12 = (int32_t)v11 | v12 & -256;
            g4 = v12;
            v13 = v10 + 1;
        }
        // 0x1000bc27
        v7 = (char *)(v13 - v6 - 1025 + g2);
        if (*v7 == 47) {
            goto lab_0x1000bc3d;
        } else {
            // 0x1000bc33
            if (*v7 != 92) {
                v14 = v12;
            } else {
                goto lab_0x1000bc3d;
            }
        }
    }
  lab_0x1000bcd7:
    // 0x1000bcd7
    g5 = g3;
    int32_t hModule = function_1000bb30(); // 0x1000bcd9
    g7 = hModule;
    goto lab_0x1000bce0;
  lab_0x1000bc3d:
    // 0x1000bc3d
    *v7 = 0;
    int32_t v21 = g4;
    goto lab_0x1000bc45;
  lab_0x1000bce0:
    // 0x1000bce0
    if (GetProcAddress((int32_t *)hModule, "BuiltDebug") == NULL) {
        // 0x1000bd7d
        return g7;
    }
    // 0x1000bcf4
    if (g7 != 0) {
        int32_t v15 = CommandLine(); // 0x1000bcf8
        g4 = v15;
        if (*(int32_t *)(*(int32_t *)v15 + 40) == 0) {
            // 0x1000bd10
            if ((char)Plat_IsInDebugSession() == 0) {
                // 0x1000bd1a
                Error();
            }
        }
    }
    // 0x1000bd29
    *(int32_t *)(g8 - 4) = g3;
    *(int32_t *)(g8 - 8) = (int32_t)"Module %s is a debug build\n";
    _3f_DevWarning_40__40_YAXPBDZZ();
    if (g131 == 0) {
        // 0x1000bd41
        g131 = 1;
        *(int32_t *)(g8 - 4) = GetCurrentProcessId();
        int32_t v16; // bp-1288
        int32_t v17 = &v16; // 0x1000bd4f
        g4 = v17;
        *(int32_t *)(g8 - 8) = (int32_t)"VALVE-MODULE-DEBUG-%08X";
        *(int32_t *)(g8 - 12) = v17;
        _sprintf((char *)&g169, (char *)&g169);
        *(int32_t *)(g8 + 8) = v17;
        *(int32_t *)(g8 + 4) = 1024;
        *(int32_t *)g8 = 0;
        *(int32_t *)(g8 - 4) = 4;
        *(int32_t *)(g8 - 8) = 0;
        *(int32_t *)(g8 - 12) = -1;
        CreateFileMappingA(&g169, (struct _SECURITY_ATTRIBUTES *)&g169, (int32_t)&g169, (int32_t)&g169, (int32_t)&g169, (char *)&g169);
    }
    // 0x1000bd7d
    return g7;
  lab_0x1000bc45:
    // 0x1000bc45
    g6 = v6;
    int32_t v18 = v5; // 0x1000bc52
    unsigned char v19 = *(char *)v18; // 0x1000bc50
    int32_t v20 = (int32_t)v19 | v21 & -256; // 0x1000bc50
    g4 = v20;
    int32_t v22 = v18 + 1; // 0x1000bc52
    while (v19 != 0) {
        // 0x1000bc50
        v18 = v22;
        v19 = *(char *)v18;
        v20 = (int32_t)v19 | v20 & -256;
        g4 = v20;
        v22 = v18 + 1;
    }
    int32_t v23 = v22 - v6; // 0x1000bc57
    g1 = v23;
    g7 = v23;
    if (function_10012360(g3, "bin/") == g3) {
        goto lab_0x1000bca5;
    } else {
        int32_t v24 = g2; // 0x1000bc6d
        int32_t v25 = g7; // 0x1000bc6d
        int32_t v26 = v24 - 1024 + v25; // 0x1000bc75
        if (*(char *)(v24 - 1025 + v25) != 110) {
            goto lab_0x1000bc8a;
        } else {
            // 0x1000bc7e
            if (*(char *)(v26 - 2) != 105) {
                goto lab_0x1000bc8a;
            } else {
                // 0x1000bc84
                if (*(char *)(v26 - 3) == 98) {
                    goto lab_0x1000bca5;
                } else {
                    goto lab_0x1000bc8a;
                }
            }
        }
    }
  lab_0x1000bca5:;
    int32_t v27 = v3;
    char * v28 = "%s/%s"; // 0x1000bcbe
    goto lab_0x1000bcbe;
  lab_0x1000bcbe:
    // 0x1000bcbe
    g4 = v27;
    function_10009a90(&v2, 1024, v28);
    g5 = v3;
    int32_t v29 = function_1000bb30(); // 0x1000bccc
    g7 = v29;
    if (v29 != 0) {
        hModule = v29;
        goto lab_0x1000bce0;
    } else {
        goto lab_0x1000bcd7;
    }
  lab_0x1000bc8a:
    v27 = v5;
    v28 = "%s/bin/%s";
    goto lab_0x1000bcbe;
}

// Address range: 0x1000bd90 - 0x1000bda3
int32_t function_1000bd90(int32_t hLibModule) {
    int32_t v1 = g2; // bp-4
    int32_t v2; // 0x1000bda1
    int32_t result; // 0x1000bda2
    if (hLibModule != 0) {
        // 0x1000bd9a
        result = FreeLibrary((int32_t *)hLibModule);
        v2 = g8;
    } else {
        result = 0;
        v2 = &v1;
    }
    // 0x1000bda1
    g2 = *(int32_t *)v2;
    return result;
}

// Address range: 0x1000bdb0 - 0x1000bdca
int32_t function_1000bdb0(int32_t hModule) {
    if (hModule == 0) {
        // 0x1000bdba
        return hModule;
    }
    int32_t (*func)() = GetProcAddress((int32_t *)hModule, "CreateInterface"); // 0x1000bdc2
    g2 = hModule;
    return (int32_t)func;
}

// Address range: 0x1000bdd0 - 0x1000bdd6
int32_t function_1000bdd0(void) {
    // 0x1000bdd0
    return &g132;
}

// Address range: 0x1000bde0 - 0x1000bde6
int32_t function_1000bde0(void) {
    // 0x1000bde0
    return &g134;
}

// Address range: 0x1000bdf0 - 0x1000be10
// From class:    CUtlCStringConversion
// Type:          virtual member function
int32_t function_1000bdf0(int32_t a1, int32_t a2) {
    unsigned char v1 = *(char *)((int32_t)*(char *)a1 + 2328 + g4); // 0x1000bdf9
    int32_t v2 = v1 != 0; // 0x1000be07
    g4 = v2;
    *(int32_t *)a2 = v2;
    return (int32_t)v1 | a1 & -256;
}

// Address range: 0x1000be10 - 0x1000be94
// From class:    CUtlCharConversion
// Type:          constructor
int32_t function_1000be10(int32_t a1, int32_t * a2, uint32_t a3, int32_t * a4) {
    int32_t v1 = (int32_t)a4;
    int32_t v2 = (int32_t)a2;
    int32_t v3 = a3; // ebx
    int32_t result = g4; // 0x1000be1b
    *(char *)(result + 4) = (char)a1;
    *(int32_t *)result = (int32_t)&g26;
    *(int32_t *)(result + 8) = v2;
    *(int32_t *)(result + 16) = v3;
    int32_t v4 = function_10009450(v2); // 0x1000be31
    int32_t v5 = 0; // edi
    int32_t v6 = result + 280; // 0x1000be3d
    g4 = v6;
    *(int32_t *)(result + 12) = v4;
    *(int32_t *)(result + 20) = v5;
    _memset((int32_t *)v6, 0, 2048);
    int32_t v7 = v5; // 0x1000be53
    if (v3 > v7) {
        while (true) {
            // 0x1000be57
            g4 = v1;
            unsigned char v8 = *(char *)(8 * v7 + v1); // 0x1000be5a
            *(char *)(v7 + 24 + result) = v8;
            int32_t v9 = *(int32_t *)(g4 + 4 + 8 * v5); // 0x1000be64
            v3 = result + 280 + 8 * (int32_t)v8;
            *(int32_t *)(g8 - 4) = v9;
            *(int32_t *)(v3 + 4) = v9;
            int32_t v10 = function_10009450((int32_t)&g169); // 0x1000be73
            *(int32_t *)v3 = v10;
            int32_t * v11 = (int32_t *)(result + 20); // 0x1000be7d
            if (v10 > *v11) {
                // 0x1000be82
                *v11 = v10;
            }
            int32_t v12 = v5 + 1; // 0x1000be85
            v5 = v12;
            if (v12 >= a3) {
                // break -> 0x1000be8b
                break;
            }
            // 0x1000be85
            v7 = v12;
        }
    }
    // 0x1000be8b
    return result;
}

// Address range: 0x1000bea0 - 0x1000bf00
// From class:    CUtlCharConversion
// Type:          virtual member function
int32_t function_1000bea0(int32_t a1, int32_t a2) {
    // 0x1000bea0
    int32_t v1; // edi
    int32_t v2 = v1; // bp-16
    int32_t v3 = g4; // 0x1000bea6
    int32_t v4 = v3; // esi
    v1 = 0;
    char v5; // 0x1000bec0
    if (*(int32_t *)(v3 + 16) <= 0) {
      lab_0x1000bed2:
        // 0x1000bed2
        *(int32_t *)a2 = 0;
        return (int32_t)v5 & -256;
    }
    int32_t v6 = &v2; // 0x1000bebe
    int32_t v7 = 0; // 0x1000beb2
    int32_t v8; // 0x1000bee4
    while (true) {
        int32_t v9 = (int32_t)*(char *)(v7 + 24 + v3); // 0x1000beb2
        g1 = v9;
        int32_t v10 = *(int32_t *)(v3 + 284 + 8 * v9); // 0x1000beb7
        g4 = v10;
        *(int32_t *)(v6 - 4) = v10;
        *(int32_t *)(v6 - 8) = a1;
        v5 = function_10009470((int32_t)&g169, (int32_t)&g169);
        v8 = v1;
        if (v5 == 0) {
            // break -> 0x1000bee4
            break;
        }
        int32_t v11 = v8 + 1; // 0x1000becc
        v1 = v11;
        if (v11 >= *(int32_t *)(v4 + 16)) {
            goto lab_0x1000bed2;
        }
        v6 = g8 + 8;
        v7 = v11;
        v3 = v4;
    }
    unsigned char v12 = *(char *)(v8 + 24 + v4); // 0x1000bee4
    int32_t v13 = *(int32_t *)(v4 + 280 + 8 * (int32_t)v12); // 0x1000bee9
    g4 = a2;
    *(int32_t *)a2 = v13;
    unsigned char v14 = *(char *)(v1 + 24 + v4); // 0x1000bef5
    return v13 & -256 | (int32_t)v14;
}

// Address range: 0x1000bf00 - 0x1000bf12
// From class:    CUtlNoEscConversion
// Type:          virtual member function
int32_t function_1000bf00(int32_t a1) {
    // 0x1000bf00
    *(int32_t *)a1 = 0;
    return a1 & -256;
}

// Address range: 0x1000bf20 - 0x1000bf77
int32_t function_1000bf20(int32_t a1) {
    int32_t v1 = g7; // bp-8
    int32_t v2 = g4; // 0x1000bf24
    char * v3 = (char *)(v2 + 20); // 0x1000bf26
    unsigned char v4 = *v3; // 0x1000bf26
    int32_t v5 = v2 & -256; // 0x1000bf26
    g4 = (int32_t)v4 | v5;
    int32_t v6; // bp-12
    int32_t * v7;
    int32_t v8; // 0x1000bf46
    int32_t v9; // 0x1000bf54
    if ((v4 & 2) != 0) {
        v8 = g7;
        goto lab_0x1000bf44;
    } else {
        int32_t v10 = *(int32_t *)(v2 + 12); // 0x1000bf2e
        g1 = v10;
        g6 = a1;
        int32_t v11 = g5; // 0x1000bf34
        v6 = v11;
        g5 = v11;
        if (*(int32_t *)(v2 + 28) < v10 + a1) {
            unsigned char v12 = v4 | 2; // 0x1000bf3e
            g4 = (int32_t)v12 | v5;
            *v3 = v12;
            v8 = v1;
            goto lab_0x1000bf44;
        } else {
            int32_t v13 = *(int32_t *)(v2 + 32); // 0x1000bf4b
            g4 = v13;
            if (v10 < v13) {
                goto lab_0x1000bf5b;
            } else {
                // 0x1000bf52
                v9 = v10 - v13 + a1;
                if (*(int32_t *)(v2 + 4) < v9) {
                    goto lab_0x1000bf5b;
                } else {
                    v7 = &v1;
                    goto lab_0x1000bf70;
                }
            }
        }
    }
  lab_0x1000bf44:
    // 0x1000bf44
    g7 = v8;
    return g1 & -256;
  lab_0x1000bf5b:;
    int32_t result = *(int32_t *)(v2 + 36); // 0x1000bf5b
    v6 = a1;
    g4 = v2;
    if ((char)result == 0) {
        // 0x1000bf67
        *v3 = *v3 | 2;
        g7 = v6;
        g2 = v1;
        return result;
    }
    v7 = &v6;
    v9 = result;
    goto lab_0x1000bf70;
  lab_0x1000bf70:
    // 0x1000bf70
    g7 = *v7;
    g2 = *(int32_t *)((int32_t)v7 + 4);
    return v9 & -256 | 1;
}

// Address range: 0x1000bf80 - 0x1000bfec
int32_t function_1000bf80(int32_t a1, int32_t * a2) {
    int32_t v1 = (int32_t)a2;
    int32_t v2 = g2; // 0x1000bf80
    g6 = a1;
    int32_t v3 = g7; // 0x1000bf86
    int32_t v4 = g4; // 0x1000bf87
    g7 = v4;
    int32_t v5 = *(int32_t *)(v4 + 12); // 0x1000bf89
    g4 = v5;
    int32_t v6 = *(int32_t *)(v4 + 28); // 0x1000bf8c
    g1 = v6;
    uint32_t v7 = v5 + a1; // 0x1000bf90
    if (v7 >= v6) {
        // 0x1000bf97
        *a2 = 0;
        g7 = v3;
        g2 = v2;
        return v1 & -256;
    }
    // 0x1000bfa8
    g5 = v1;
    int32_t v8; // 0x1000bfc8
    if (v7 + *a2 > v6) {
        int32_t v9 = v6 - v5 - a1; // 0x1000bfb9
        g1 = v9;
        *a2 = v9;
        v8 = g7;
    } else {
        v8 = v4;
    }
    // 0x1000bfbd
    int32_t v10; // 0x1000bfd3
    if ((*(char *)(v8 + 20) & 2) == 0) {
        // 0x1000bfc3
        g4 = v8;
        function_1000bf20(g6 + *(int32_t *)g5);
        char * v11 = (char *)(g7 + 20); // 0x1000bfcf
        *v11 = *v11 & -3;
        v10 = g7;
    } else {
        v10 = v8;
    }
    int32_t v12 = *(int32_t *)(v10 + 28) - *(int32_t *)(v10 + 12); // 0x1000bfd6
    int32_t * v13 = (int32_t *)g5; // 0x1000bfd9
    if (v12 < *v13) {
        // 0x1000bfdd
        *v13 = v12;
    }
    int32_t v14 = *(int32_t *)g5; // 0x1000bfe1
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g2 = *(int32_t *)(g8 + 8);
    return v14 != 0;
}

// Address range: 0x1000bff0 - 0x1000c02b
int32_t function_1000bff0(int32_t a1, int32_t a2) {
    int32_t v1 = g7; // 0x1000bff3
    int32_t v2 = g4; // 0x1000bff4
    g7 = v2;
    int32_t v3 = g5; // bp-12
    int32_t v4; // 0x1000c013
    if ((*(char *)(v2 + 20) & 2) == 0) {
        // 0x1000bffd
        g5 = a2;
        int32_t v5 = a2 + a1; // 0x1000c003
        g1 = v5;
        int32_t v6 = function_1000bf20(v5); // eax
        char * v7 = (char *)(g7 + 20); // 0x1000c00b
        *v7 = *v7 & -3;
        if ((char)v6 != 0) {
            int32_t result = g5 + g4 + *(int32_t *)(g7 + 12) - *(int32_t *)(g7 + 32); // 0x1000c023
            g5 = v5;
            g7 = v3;
            g2 = v1;
            return result;
        }
        // 0x1000bffd
        v4 = g8;
    } else {
        v4 = &v3;
    }
    // 0x1000c013
    g5 = *(int32_t *)v4;
    g7 = *(int32_t *)(v4 + 4);
    g2 = *(int32_t *)(v4 + 8);
    return 0;
}

// Address range: 0x1000c030 - 0x1000c088
int32_t function_1000c030(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    if (a1 == 0) {
        // 0x1000c054
        *(int32_t *)(g4 + 12) = a2;
        goto lab_0x1000c057;
    } else {
        // 0x1000c03b
        if (a1 == 1) {
            int32_t * v2 = (int32_t *)(g4 + 12); // 0x1000c04c
            *v2 = *v2 + a2;
            goto lab_0x1000c057;
        } else {
            // 0x1000c03e
            if (a1 != 2) {
                goto lab_0x1000c057;
            } else {
                int32_t v3 = g4; // 0x1000c041
                // 0x1000c054
                *(int32_t *)(v3 + 12) = *(int32_t *)(v3 + 28) - a2;
                goto lab_0x1000c057;
            }
        }
    }
  lab_0x1000c057:;
    int32_t v4 = g4; // 0x1000c057
    int32_t result = *(int32_t *)(v4 + 12); // 0x1000c057
    if (result > *(int32_t *)(v4 + 28)) {
        char * v5 = (char *)(v4 + 20); // 0x1000c05f
        *v5 = *v5 | 2;
        g2 = v1;
        return result;
    }
    int32_t v6 = *(int32_t *)(v4 + 32); // edx
    char * v7 = (char *)(v4 + 20); // 0x1000c06a
    *v7 = *v7 & -3;
    if (result < v6) {
        // branch -> 0x1000c07d
    } else {
        // 0x1000c072
        if (result < *(int32_t *)(g4 + 4) + v6) {
            // 0x1000c084
            g2 = v1;
            return result;
        }
    }
    // 0x1000c084
    g2 = -1;
    return result;
}

// Address range: 0x1000c090 - 0x1000c0d6
int32_t function_1000c090(int32_t a1) {
    int32_t v1 = g7; // bp-8
    int32_t v2 = &v1; // 0x1000c093
    int32_t v3 = g4; // 0x1000c094
    char * v4 = (char *)(v3 + 20); // 0x1000c096
    int32_t v5; // 0x1000c0ca
    if ((*v4 & 1) == 0) {
        // 0x1000c09c
        if ((*(char *)(v3 + 21) & 8) == 0) {
            uint32_t v6 = *(int32_t *)(v3 + 16); // 0x1000c0a2
            uint32_t v7 = *(int32_t *)(v3 + 32); // 0x1000c0a5
            g4 = v7;
            g6 = a1;
            int32_t v8; // 0x1000c0d1
            if (v6 >= v7) {
                int32_t v9 = v6 - v7 + a1; // 0x1000c0b1
                if (*(int32_t *)(v3 + 4) >= v9) {
                    v8 = v2;
                    // 0x1000c0cf
                    g7 = *(int32_t *)v8;
                    g2 = *(int32_t *)(v8 + 4);
                    return v9 & -256 | 1;
                }
            }
            int32_t v10 = *(int32_t *)(v3 + 40); // 0x1000c0b8
            g1 = v10;
            g4 = v3;
            if ((char)v10 != 0) {
                v8 = &a1;
                // 0x1000c0cf
                g7 = *(int32_t *)v8;
                g2 = *(int32_t *)(v8 + 4);
                return v10 & -256 | 1;
            }
            // 0x1000c0c4
            *v4 = *v4 | 1;
            v5 = g8;
        } else {
            v5 = v2;
        }
    } else {
        v5 = v2;
    }
    // 0x1000c0c8
    g7 = *(int32_t *)v5;
    g2 = *(int32_t *)(v5 + 4);
    return g1 & -256;
}

// Address range: 0x1000c0e0 - 0x1000c125
int32_t function_1000c0e0(int32_t a1) {
    int32_t v1 = g7; // 0x1000c0e3
    int32_t v2 = g5; // bp-12
    int32_t v3 = a1; // edi
    int32_t v4 = g4; // 0x1000c0e8
    g7 = v4;
    int32_t v5; // 0x1000c11f
    if (*(int32_t *)(v4 + 28) < a1) {
        // 0x1000c0ef
        int32_t v6; // 0x1000c11c
        if ((*(char *)(v4 + 21) & 8) == 0) {
            // 0x1000c0f5
            if ((*(char *)(v4 + 20) & 1) == 0) {
                int32_t v7 = function_1000c090(1); // 0x1000c0fd
                g1 = v7;
                if ((char)v7 != 0) {
                    int32_t result = g4 - *(int32_t *)(g7 + 32); // 0x1000c108
                    *(char *)(v3 + result) = 0;
                    *(int32_t *)(g7 + 28) = v3;
                    g5 = 1;
                    g7 = v2;
                    g2 = v1;
                    return result;
                }
                char * v8 = (char *)(g7 + 20); // 0x1000c118
                *v8 = *v8 & -2;
                v6 = g7;
            } else {
                v6 = v4;
            }
        } else {
            v6 = v4;
        }
        // 0x1000c11c
        *(int32_t *)(v6 + 28) = a1;
        v5 = g8;
    } else {
        v5 = &v2;
    }
    // 0x1000c11f
    g5 = *(int32_t *)v5;
    g7 = *(int32_t *)(v5 + 4);
    g2 = *(int32_t *)(v5 + 8);
    return g1;
}

// Address range: 0x1000c130 - 0x1000c17f
int32_t function_1000c130(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g7; // bp-8
    int32_t v3 = g4; // 0x1000c134
    int32_t * v4 = (int32_t *)(v3 + 8); // 0x1000c136
    if (*v4 >= 0) {
        // 0x1000c17a
        return g1;
    }
    // 0x1000c13c
    g1 = a1;
    int32_t v5 = g5; // bp-12
    *v4 = a1;
    if (*(int32_t *)(v3 + 4) == 0) {
        // 0x1000c173
        *(int32_t *)v3 = 0;
        g5 = v5;
        // 0x1000c17a
        g7 = v2;
        g2 = v1;
        return g1;
    }
    int32_t v6 = *(int32_t *)0x100221e8; // 0x1000c14a
    g4 = v6;
    int32_t v7 = *(int32_t *)v6; // 0x1000c150
    g4 = v7;
    int32_t result = _memcpy2(); // eax
    *(int32_t *)v3 = *(int32_t *)(*(int32_t *)v7 + 4);
    g5 = g3;
    g7 = v5;
    g2 = v2;
    return result;
}

// Address range: 0x1000c180 - 0x1000c20c
int32_t function_1000c180(int32_t a1) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x1000c185
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x1000c187
    int32_t result; // eax
    int32_t v4; // 0x1000c1dd
    int32_t v5; // 0x1000c206
    int32_t * v6; // 0x1000c18e
    int32_t v7; // 0x1000c194
    int32_t v8; // 0x1000c1b3
    if (v3 < 0) {
        v5 = &v1;
        goto lab_0x1000c206;
    } else {
        // 0x1000c18e
        v6 = (int32_t *)(v2 + 4);
        int32_t v9 = *v6; // 0x1000c18e
        result = v9;
        v7 = v9 + a1;
        g4 = v7;
        if (v3 == 0) {
            int32_t v10;
            if (v9 == 0) {
                // 0x1000c1aa
                result = 32;
                v10 = 32;
            } else {
                v10 = v9;
            }
            if (v10 < v7) {
                v8 = 2 * v10;
                while (v8 < v7) {
                    // 0x1000c1b3
                    v8 *= 2;
                }
                goto lab_0x1000c1b9;
            } else {
                v4 = v10;
                goto lab_0x1000c1db;
            }
        } else {
            int32_t v11 = v7 - 1; // 0x1000c19a
            int32_t v12 = ((int32_t)((0x100000000 * (int64_t)(v11 >> 31) | (int64_t)v11) / (int64_t)v3) + 1) * v3; // 0x1000c1a1
            v8 = v12;
            goto lab_0x1000c1b9;
        }
    }
  lab_0x1000c206:
    // 0x1000c206
    g5 = *(int32_t *)v5;
    g7 = *(int32_t *)(v5 + 4);
    g2 = *(int32_t *)(v5 + 8);
    return g1;
  lab_0x1000c1db:
    // 0x1000c1db
    *v6 = v4;
    int32_t v13 = *(int32_t *)0x100221e8; // 0x1000c1e0
    g4 = v13;
    int32_t v14 = *(int32_t *)v13; // 0x1000c1e6
    g4 = v14;
    int32_t v15 = result; // 0x1000c1e8
    int32_t v16 = *(int32_t *)v14; // 0x1000c1fd
    if (v7 != 0) {
        // 0x1000c1ed
        g6 = *(int32_t *)(v16 + 12);
        *(int32_t *)v2 = v15;
        g5 = v7;
        g7 = v15;
        g2 = v1;
        return result;
    }
    // 0x1000c1fd
    g6 = v16;
    int32_t v17 = *(int32_t *)(v16 + 4); // 0x1000c1ff
    g1 = v17;
    *(int32_t *)v2 = v17;
    v5 = g8;
    goto lab_0x1000c206;
  lab_0x1000c1b9:
    // 0x1000c1b9
    result = v8;
    int32_t v18; // 0x1000c1d51
    if (v8 < v7) {
        if (v8 != 0) {
            v18 = v8;
            goto lab_0x1000c1d0;
        } else {
            if (v7 > -1) {
                v18 = v8;
                goto lab_0x1000c1d0;
            } else {
                // 0x1000c1c6
                result = -1;
                v4 = -1;
                goto lab_0x1000c1db;
            }
        }
    } else {
        v4 = v8;
        goto lab_0x1000c1db;
    }
  lab_0x1000c1d0:;
    int32_t v19; // 0x1000c1d5
    while (true) {
        int32_t v20 = v18 + v7; // 0x1000c1d0
        v19 = (v20 - (v20 >> 31)) / 2;
        if (v19 >= v7) {
            // break -> 0x1000c1db
            break;
        }
        v18 = v19;
    }
    // 0x1000c1db
    result = v19;
    v4 = v19;
    goto lab_0x1000c1db;
}

// Address range: 0x1000c210 - 0x1000c277
int32_t function_1000c210(void) {
    int32_t v1 = g7; // bp-4
    int32_t v2 = &v1; // 0x1000c210
    int32_t v3 = g4; // 0x1000c211
    int32_t v4 = v3; // esi
    if ((*(char *)(v3 + 21) & 1) == 0) {
        // 0x1000c275
        g7 = *(int32_t *)v2;
        return g1;
    }
    char * v5 = (char *)(v3 + 20); // 0x1000c219
    if (*v5 != 0) {
        // 0x1000c275
        g7 = *(int32_t *)v2;
        return g1;
    }
    int32_t v6 = g3 & -256 | 2; // 0x1000c220
    int32_t v7; // 0x1000c271
    int32_t v8; // 0x1000c26c
    int32_t v9; // 0x1000c271
    if ((*v5 & 2) != 0) {
        goto lab_0x1000c274_3;
    } else {
        while (true) {
          lab_0x1000c227:;
            int32_t v10 = *(int32_t *)(v3 + 12); // 0x1000c227
            g1 = v10;
            int32_t v11 = v10 + 1; // 0x1000c22a
            g4 = v11;
            if (*(int32_t *)(v3 + 28) < v11) {
                v9 = v6;
                v7 = v3;
                // break -> 0x1000c271
                break;
            }
            int32_t v12 = *(int32_t *)(v3 + 32); // 0x1000c232
            g4 = v12;
            if (v10 < v12) {
                goto lab_0x1000c241_2;
            } else {
                int32_t v13 = v10 - v12 + 1; // 0x1000c23b
                g1 = v13;
                if (*(int32_t *)(v3 + 4) < v13) {
                    goto lab_0x1000c241_2;
                } else {
                    v8 = v3;
                    goto lab_0x1000c24e;
                }
            }
        }
        goto lab_0x1000c271;
    }
  lab_0x1000c274_3:
    // 0x1000c274
    g3 = *(int32_t *)g8;
    // 0x1000c275
    g7 = *(int32_t *)(g8 + 4);
    return g1;
  lab_0x1000c241_2:
    // 0x1000c241
    g6 = *(int32_t *)(v3 + 36);
    *(int32_t *)(g8 - 4) = 1;
    g4 = v4;
    if ((char)g1 == 0) {
        // 0x1000c241
        v9 = v6;
        v7 = v4;
        goto lab_0x1000c271;
    }
    v8 = v4;
    goto lab_0x1000c24e;
  lab_0x1000c24e:;
    int32_t * v14 = (int32_t *)(v8 + 12); // 0x1000c24e
    int32_t v15 = *v14; // 0x1000c24e
    g4 = v15;
    g6 = v15;
    unsigned char v16 = *(char *)(v15 - *(int32_t *)(v8 + 32) + v15); // 0x1000c258
    g1 = v16;
    if (v16 < 9) {
        goto lab_0x1000c274_3;
    }
    if (v16 > 13) {
        if (v16 != 32) {
            goto lab_0x1000c274_3;
        }
    }
    int32_t v17 = v15 + 1; // 0x1000c26b
    g4 = v17;
    *v14 = v17;
    if ((*(char *)(v4 + 20) & (char)v6) != 0) {
        goto lab_0x1000c274_3;
    }
    v3 = v4;
    goto lab_0x1000c227;
  lab_0x1000c271:;
    char * v18 = (char *)(v7 + 20); // 0x1000c271
    *v18 = *v18 | (char)v9;
    goto lab_0x1000c274_3;
}

// Address range: 0x1000c280 - 0x1000c31e
int32_t function_1000c280(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = g7; // 0x1000c283
    int32_t v2 = g4; // 0x1000c284
    int32_t v3 = v2; // esi
    if ((*(char *)(v2 + 21) & 1) == 0) {
        // 0x1000c317
        g7 = v1;
        return 0;
    }
    char * v4 = (char *)(v2 + 20); // 0x1000c290
    if (*v4 != 0) {
        // 0x1000c317
        g7 = v1;
        return 0;
    }
    int32_t v5 = a1; // edi
    unsigned char v6 = *v4; // 0x1000c2a025
    int32_t v7 = v2 & -256; // 0x1000c2a027
    g4 = (int32_t)v6 | v7;
    int32_t v8; // eax
    int32_t v9; // 0x1000c2d333
    int32_t result; // 0x1000c30f
    int32_t v10; // 0x1000c2ab
    if ((v6 & 2) == 0) {
        v9 = a1;
        while (true) {
          lab_0x1000c2a8:;
            int32_t v11 = *(int32_t *)(v2 + 12); // 0x1000c2a8
            v10 = v9 + 1;
            if (*(int32_t *)(v2 + 28) < v10 + v11) {
                unsigned char v12 = v6 | 2; // 0x1000c2b4
                g4 = (int32_t)v12 | v7;
                *v4 = v12;
                v8 = v11 & -256;
                goto lab_0x1000c2e7;
            } else {
                int32_t v13 = *(int32_t *)(v2 + 32); // 0x1000c2be
                g4 = v13;
                if (v11 < v13) {
                    goto lab_0x1000c2d0;
                } else {
                    int32_t v14 = v10 + v11 - v13; // 0x1000c2c7
                    if (*(int32_t *)(v2 + 4) < v14) {
                        goto lab_0x1000c2d0;
                    } else {
                        // 0x1000c2e5
                        v8 = v14 & -256 | 1;
                        goto lab_0x1000c2e7;
                    }
                }
            }
        }
      lab_0x1000c2e7_2:
        // 0x1000c2e7
        result = v5;
    } else {
        result = a1;
    }
  lab_0x1000c30f_3:
    // 0x1000c30f
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    return result;
  lab_0x1000c2e7:;
    char * v15 = (char *)(v3 + 20); // 0x1000c2e7
    *v15 = *v15 & -3;
    if ((char)v8 == 0) {
        // break -> 0x1000c2e7
        goto lab_0x1000c2e7_2;
    }
    int32_t v16 = g4 - *(int32_t *)(v3 + 32); // 0x1000c2f1
    int32_t v17 = *(int32_t *)(v3 + 12); // 0x1000c2f4
    g4 = v17;
    int32_t v18 = v5; // 0x1000c2f7
    unsigned char v19 = *(char *)(v18 + v16 + v17); // 0x1000c2f9
    if (v19 < 9) {
        result = v18;
        goto lab_0x1000c30f_3;
    }
    if (v19 > 13) {
        if (v19 != 32) {
            result = v18;
            goto lab_0x1000c30f_3;
        }
    }
    int32_t v20 = v18 + 1; // 0x1000c30c
    v5 = v20;
    char * v21 = (char *)(v3 + 20); // 0x1000c2a0
    unsigned char v22 = *v21; // 0x1000c2a0
    int32_t v23 = v17 & -256; // 0x1000c2a0
    g4 = (int32_t)v22 | v23;
    if ((v22 & 2) != 0) {
        result = v20;
        goto lab_0x1000c30f_3;
    }
    v7 = v23;
    v6 = v22;
    v4 = v21;
    v9 = v20;
    v2 = v3;
    goto lab_0x1000c2a8;
  lab_0x1000c2d0:
    // 0x1000c2d0
    v8 = v10;
    *(int32_t *)(g8 - 4) = v10;
    g4 = v3;
    int32_t v24 = v8; // 0x1000c2db
    if ((char)v24 != 0) {
        // 0x1000c2e5
        v8 = v24 & -256 | 1;
        goto lab_0x1000c2e7;
    } else {
        char * v25 = (char *)(v3 + 20); // 0x1000c2df
        *v25 = *v25 | 2;
        goto lab_0x1000c2e7;
    }
}

// Address range: 0x1000c320 - 0x1000c467
int32_t function_1000c320(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g2; // 0x1000c320
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g7; // 0x1000c326
    int32_t v4 = g4; // 0x1000c327
    g7 = v4;
    if (*(char *)(v4 + 20) != 0) {
        // 0x1000c32f
        g7 = v3;
        g2 = v1;
        return 0;
    }
    int32_t v5 = g3; // bp-24
    int32_t v6 = 0; // ebx
    int32_t v7; // 0x1000c34d
    int32_t v8; // 0x1000c343
    if ((*(char *)(v4 + 21) & 1) != 0) {
        // 0x1000c342
        v8 = function_1000c280(0, g3, v3, 0, v1);
        v6 = v8;
        v7 = g8;
    } else {
        v7 = &v5;
        v8 = 0;
    }
    // 0x1000c34d
    *(int32_t *)(v7 - 4) = g5;
    int32_t v9 = v6; // 0x1000c37e
    int32_t v10 = v8;
    int32_t v11 = g7; // 0x1000c38d
    int32_t v12; // edi
    int32_t v13; // 0x1000c3d8
    int32_t v14; // 0x1000c425
    int32_t v15; // 0x1000c43f
    int32_t v16; // 0x1000c37e
    int32_t v17; // 0x1000c3c5
    while (true) {
      lab_0x1000c351_2:;
        int32_t v18 = *(int32_t *)(v11 + 12); // 0x1000c351
        int32_t v19 = *(int32_t *)(v11 + 28); // 0x1000c354
        g4 = v19;
        int32_t v20 = v18 + v9; // 0x1000c357
        g6 = v20;
        v12 = 128;
        if (v20 >= v19) {
            v15 = v9;
            // break -> 0x1000c42f
            break;
        }
        int32_t v21 = v9 + 128 + v18; // 0x1000c367
        g6 = v21;
        int32_t v22; // 0x1000c376
        if (v21 > v19) {
            // 0x1000c372
            v22 = v19 - v18 - v9;
            v12 = v22;
        } else {
            v22 = 128;
        }
        char * v23 = (char *)(v11 + 20); // 0x1000c378
        if ((*v23 & 2) != 0) {
            v14 = v9;
            v17 = v22;
            v13 = v11;
            goto lab_0x1000c3bb;
        } else {
            // 0x1000c37e
            v16 = v22 + v9;
            g6 = v16;
            if (v19 < v16 + v18) {
                // 0x1000c388
                *v23 = *v23 | 2;
                goto lab_0x1000c3b4;
            } else {
                int32_t v24 = *(int32_t *)(v11 + 32); // 0x1000c392
                g4 = v24;
                if (v18 < v24) {
                    goto lab_0x1000c3a4;
                } else {
                    // 0x1000c399
                    if (*(int32_t *)(v11 + 4) < v16 - v24 + v18) {
                        goto lab_0x1000c3a4;
                    } else {
                        goto lab_0x1000c3b4;
                    }
                }
            }
        }
    }
  lab_0x1000c42f:
    // 0x1000c42f
    g4 = v6;
    int32_t v25 = v15 - v6; // 0x1000c432
    if (v25 != 0) {
        // 0x1000c43f
        g3 = *(int32_t *)(g8 + 4);
        g7 = *(int32_t *)(g8 + 8);
        g2 = v2;
        return v25 + 1;
    }
    // 0x1000c436
    g3 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g2 = v2;
    return 0;
  lab_0x1000c3bb:;
    int32_t v26 = *(int32_t *)(v13 + 12); // 0x1000c3bb
    int32_t v27 = *(int32_t *)(v13 + 28) - v26; // 0x1000c3c1
    int32_t v28 = v27 - v17; // 0x1000c3c3
    uint32_t v29 = v28 < 0 != ((v28 ^ v27) & (v27 ^ v17)) < 0 ? v27 : v17; // 0x1000c3c5
    int32_t v30 = (int32_t)(v29 != 0) | v27 & -256; // 0x1000c3ca
    g4 = v30;
    if (v29 == 0) {
        v15 = v14;
        // break -> 0x1000c42f
        goto lab_0x1000c42f;
    }
    int32_t v31 = v26 - *(int32_t *)(v13 + 32) + v30 + v14; // 0x1000c3d6
    if ((*(char *)(v13 + 21) & 1) != 0) {
        if (v29 >= 1) {
            int32_t v32 = 0; // 0x1000c459
            while (true) {
                unsigned char v33 = *(char *)(v32 + v31); // 0x1000c407
                g4 = v33;
                if (v33 >= 9) {
                    if (v33 <= 13) {
                        goto lab_0x1000c459_2;
                    }
                    if (v33 == 32) {
                      lab_0x1000c459_2:;
                        int32_t v34 = v32 - v6; // 0x1000c459
                        g6 = v34;
                        g3 = *(int32_t *)(g8 + 4);
                        g7 = *(int32_t *)(g8 + 8);
                        g2 = v2;
                        return v14 + 1 + v34;
                    }
                }
                if (v33 == 0) {
                    goto lab_0x1000c459_2;
                }
                int32_t v35 = v32 + 1; // 0x1000c420
                if (v35 >= v29) {
                    // break -> 0x1000c425
                    break;
                }
                // 0x1000c404
                v32 = v35;
            }
        }
        goto lab_0x1000c351;
    } else {
        // 0x1000c3e1
        g4 = 0;
        if (v29 < 1) {
            goto lab_0x1000c351;
        } else {
            int32_t v36 = 0; // 0x1000c44b
            while (true) {
                // 0x1000c3e7
                if (*(char *)(v36 + v31) == 0) {
                    int32_t v37 = v36 - v6; // 0x1000c44b
                    g4 = v37;
                    g3 = *(int32_t *)(g8 + 4);
                    g7 = *(int32_t *)(g8 + 8);
                    g2 = v2;
                    return v14 + 1 + v37;
                }
                int32_t v38 = v36 + 1; // 0x1000c3ed
                g4 = v38;
                if (v38 >= v29) {
                    // break -> 0x1000c351
                    break;
                }
                v36 = v38;
            }
            goto lab_0x1000c351;
        }
    }
  lab_0x1000c3b4:;
    char * v39 = (char *)(g7 + 20); // 0x1000c3b4
    *v39 = *v39 & -3;
    v14 = v10;
    v17 = v12;
    v13 = g7;
    goto lab_0x1000c3bb;
  lab_0x1000c3a4:
    // 0x1000c3a4
    *(int32_t *)(g8 - 4) = v16;
    g4 = g7;
    if ((char)*(int32_t *)(v11 + 36) == 0) {
        char * v40 = (char *)(g7 + 20); // 0x1000c3b0
        *v40 = *v40 | 2;
    }
    goto lab_0x1000c3b4;
  lab_0x1000c351:;
    int32_t v41 = v29 + v14;
    v9 = v41;
    v10 = v41;
    v11 = v13;
    goto lab_0x1000c351_2;
}

// Address range: 0x1000c470 - 0x1000c56a
int32_t function_1000c470(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g2; // 0x1000c470
    int32_t v2 = g7; // 0x1000c476
    int32_t v3 = g4; // 0x1000c477
    int32_t v4 = v3; // esi
    if (*(char *)(v3 + 20) != 0) {
        // 0x1000c47f
        g7 = v2;
        g2 = v1;
        return 0;
    }
    int32_t v5 = 0; // 0x1000c4bc
    int32_t v6; // edi
    int32_t v7; // edx
    int32_t v8; // 0x1000c50f
    int32_t v9; // 0x1000c4bc
    int32_t v10; // 0x1000c503
    while (true) {
      lab_0x1000c48a:;
        int32_t v11 = *(int32_t *)(v3 + 12); // 0x1000c48a
        int32_t v12 = *(int32_t *)(v3 + 28); // 0x1000c48d
        g4 = v12;
        v6 = 128;
        if (v11 + v5 >= v12) {
            // break -> 0x1000c53d
            break;
        }
        int32_t v13 = v5 + 128 + v11; // 0x1000c4a3
        int32_t v14; // 0x1000c4b2
        if (v13 > v12) {
            // 0x1000c4ae
            v14 = v12 - v11 - v5;
            v6 = v14;
        } else {
            v14 = 128;
        }
        char * v15 = (char *)(v3 + 20); // 0x1000c4b4
        unsigned char v16 = *v15; // 0x1000c4b4
        v7 = (int32_t)v16 | v13 & -256;
        if ((v16 & 2) != 0) {
            v10 = v14;
            v8 = v3;
            goto lab_0x1000c4f9;
        } else {
            // 0x1000c4bc
            v9 = v14 + v5;
            v7 = v9;
            if (v12 < v9 + v11) {
                // 0x1000c4c6
                *v15 = *v15 | 2;
                goto lab_0x1000c4f2;
            } else {
                int32_t v17 = *(int32_t *)(v3 + 32); // 0x1000c4d0
                g4 = v17;
                if (v11 < v17) {
                    goto lab_0x1000c4e2;
                } else {
                    // 0x1000c4d7
                    if (*(int32_t *)(v3 + 4) < v9 - v17 + v11) {
                        goto lab_0x1000c4e2;
                    } else {
                        goto lab_0x1000c4f2;
                    }
                }
            }
        }
    }
  lab_0x1000c53d:;
    int32_t v18 = g8 + 4; // 0x1000c54a
    if (v5 != 0) {
        // 0x1000c54a
        g3 = *(int32_t *)v18;
        g7 = *(int32_t *)(g8 + 8);
        g2 = v1;
        return v5 + 1;
    }
    // 0x1000c541
    g3 = *(int32_t *)v18;
    g7 = *(int32_t *)(g8 + 8);
    g2 = v1;
    return 0;
  lab_0x1000c4f9:;
    int32_t v19 = *(int32_t *)(v8 + 12); // 0x1000c4f9
    int32_t v20 = *(int32_t *)(v8 + 28) - v19; // 0x1000c4ff
    int32_t v21 = v20 - v10; // 0x1000c501
    uint32_t v22 = v21 < 0 != ((v21 ^ v20) & (v20 ^ v10)) < 0 ? v20 : v10; // 0x1000c503
    g4 = (int32_t)(v22 != 0) | v20 & -256;
    if (v22 == 0) {
        // break -> 0x1000c53d
        goto lab_0x1000c53d;
    }
    // 0x1000c50f
    g4 = 0;
    int32_t v23 = v19 - *(int32_t *)(v8 + 32) + v5; // 0x1000c516
    if (v22 >= 1) {
        int32_t v24 = v7; // 0x1000c520
        int32_t v25 = 0; // 0x1000c560
        while (true) {
            unsigned char v26 = *(char *)(v25 + v23); // 0x1000c520
            int32_t v27 = (int32_t)v26 | v24 & -256; // 0x1000c520
            if (v26 == 10) {
                goto lab_0x1000c55f;
            }
            if (v26 == 13) {
              lab_0x1000c55f:
                // 0x1000c55f
                g3 = *(int32_t *)(g8 + 4);
                g7 = *(int32_t *)(g8 + 8);
                g2 = v1;
                return v5 + 2 + v25;
            }
            if (v26 == 0) {
                // 0x1000c554
                g3 = *(int32_t *)(g8 + 4);
                g7 = *(int32_t *)(g8 + 8);
                g2 = v1;
                return v5 + 1 + v25;
            }
            int32_t v28 = v25 + 1; // 0x1000c531
            g4 = v28;
            if (v28 >= v22) {
                // break -> 0x1000c536
                break;
            }
            v24 = v27;
            v25 = v28;
        }
    }
    // 0x1000c536
    v5 += v22;
    v3 = v8;
    goto lab_0x1000c48a;
  lab_0x1000c4f2:;
    char * v29 = (char *)(v4 + 20); // 0x1000c4f2
    *v29 = *v29 & -3;
    v10 = v6;
    v8 = v4;
    goto lab_0x1000c4f9;
  lab_0x1000c4e2:
    // 0x1000c4e2
    *(int32_t *)(g8 - 4) = v9;
    g4 = v4;
    if ((char)*(int32_t *)(v3 + 36) == 0) {
        char * v30 = (char *)(v4 + 20); // 0x1000c4ee
        *v30 = *v30 | 2;
    }
    goto lab_0x1000c4f2;
}

// Address range: 0x1000c570 - 0x1000c5c2
int32_t function_1000c570(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g3; // 0x1000c573
    int32_t v2 = g7; // 0x1000c574
    int32_t v3 = g4; // 0x1000c575
    g7 = v3;
    int32_t v4 = g5; // bp-16
    int32_t v5; // 0x1000c595
    int32_t v6; // 0x1000c597
    if ((*(char *)(v3 + 20) & 2) != 0) {
        // 0x1000c570
        v6 = g1;
        v5 = &v4;
    } else {
        // 0x1000c57e
        g5 = a1;
        int32_t v7 = a3 + a1; // 0x1000c584
        g1 = v7;
        int32_t v8 = function_1000bf20(v7); // eax
        char * v9 = (char *)(g7 + 20); // 0x1000c58d
        *v9 = *v9 & -3;
        if ((char)v8 != 0) {
            int32_t v10 = g7; // 0x1000c59e
            int32_t v11 = *(int32_t *)(v10 + 12); // 0x1000c59e
            g4 = a2;
            int32_t v12 = g5 + v11 - *(int32_t *)(v10 + 32) + a2; // 0x1000c5aa
            g1 = v12;
            int32_t v13 = function_10009540(v12, a2, a3); // 0x1000c5ae
            g5 = v7;
            g7 = v4;
            g3 = v2;
            g2 = v1;
            return v13 == 0;
        }
        // 0x1000c57e
        v6 = v8;
        v5 = g8;
    }
    // 0x1000c595
    g5 = *(int32_t *)v5;
    g7 = *(int32_t *)(v5 + 4);
    g3 = *(int32_t *)(v5 + 8);
    g2 = *(int32_t *)(v5 + 12);
    return v6 & -256;
}

// Address range: 0x1000c5d0 - 0x1000c6bf
int32_t function_1000c5d0(int32_t * a1, int32_t a2) {
    int32_t result = (int32_t)a1;
    int32_t v1 = g2; // 0x1000c5d0
    int32_t v2 = g7; // 0x1000c5d3
    int32_t v3 = g4; // 0x1000c5d4
    g7 = v3;
    if (*(char *)(v3 + 20) != 0) {
        // 0x1000c5dc
        *(char *)a1 = 0;
        g7 = v2;
        g2 = v1;
        return result;
    }
    int32_t v4 = g3; // 0x1000c5e7
    int32_t v5;
    if (a2 == 0) {
        v5 = 0x7fffffff;
    } else {
        v5 = a2;
    }
    // 0x1000c5f4
    g3 = v5;
    int32_t v6 = function_1000c470(g5, v4, v2, v1); // 0x1000c5f5
    g1 = v6;
    g5 = v6;
    int32_t result2; // 0x1000c6bc
    if (v6 != 0) {
        // 0x1000c610
        if (v6 <= g3) {
            uint32_t v7 = v6 - 1; // 0x1000c614
            if (v7 >= 1) {
                // 0x1000c61b
                g4 = g7;
                int32_t v8 = function_1000bf20(v7); // 0x1000c61e
                g1 = v8;
                if ((char)v8 != 0) {
                    // 0x1000c627
                    g1 = _memcpy2();
                    int32_t * v9 = (int32_t *)(g7 + 12); // 0x1000c63d
                    *v9 = *v9 + v7;
                }
            }
            // 0x1000c640
            g4 = result;
            *(char *)(v7 + result) = 0;
            g5 = *(int32_t *)g8;
            g3 = *(int32_t *)(g8 + 4);
            g7 = *(int32_t *)(g8 + 8);
            g2 = *(int32_t *)(g8 + 12);
            return g1;
        }
        int32_t v10 = g3 - 1; // 0x1000c64f
        g1 = v10;
        if (v10 >= 1) {
            // 0x1000c656
            g4 = g7;
            if ((char)function_1000bf20(v10) != 0) {
                // 0x1000c662
                _memcpy2();
                int32_t * v11 = (int32_t *)(g7 + 12); // 0x1000c67e
                *v11 = *v11 + g3 - 1;
            }
        }
        // 0x1000c681
        g4 = result;
        *(char *)(result - 1 + g3) = 0;
        int32_t * v12 = (int32_t *)(g7 + 12); // 0x1000c68c
        *v12 = *v12 + v6 - g3 - 1;
        int32_t v13 = *(int32_t *)(g7 + 12); // 0x1000c68f
        g1 = v13;
        if (v13 > *(int32_t *)(g7 + 28)) {
            goto lab_0x1000c605;
        } else {
            // 0x1000c69b
            g4 = *(int32_t *)(g7 + 32);
            char * v14 = (char *)(g7 + 20); // 0x1000c69e
            *v14 = *v14 & -3;
            int32_t v15 = g4; // 0x1000c6a2
            if (g1 < v15) {
                goto lab_0x1000c6af;
            } else {
                // 0x1000c6a6
                if (g1 < *(int32_t *)(g7 + 4) + v15) {
                    // 0x1000c6a6
                    result2 = g1;
                    goto lab_0x1000c6b8;
                } else {
                    goto lab_0x1000c6af;
                }
            }
        }
    } else {
        // 0x1000c600
        g4 = result;
        *(char *)a1 = (char)v6;
        goto lab_0x1000c605;
    }
  lab_0x1000c605:;
    char * v16 = (char *)(g7 + 20); // 0x1000c605
    *v16 = *v16 | 2;
    g5 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return g1;
  lab_0x1000c6af:;
    int32_t v17 = g8 - 4; // 0x1000c6b2
    *(int32_t *)v17 = -1;
    g4 = g7;
    result2 = *(int32_t *)(g7 + 36);
    g8 = v17;
    goto lab_0x1000c6b8;
  lab_0x1000c6b8:
    // 0x1000c6b8
    g5 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result2;
}

// Address range: 0x1000c6c0 - 0x1000c764
int32_t function_1000c6c0(int32_t a1, int32_t a2) {
    int32_t v1 = g7; // 0x1000c6c3
    int32_t v2 = g5; // bp-12
    int32_t v3 = &v2; // 0x1000c6c4
    int32_t v4 = g4; // 0x1000c6c8
    g7 = v4;
    int32_t v5; // 0x1000c75e
    int32_t v6; // 0x1000c716
    char * v7; // 0x1000c6d2
    int32_t * v8; // 0x1000c6e2
    int32_t * v9; // 0x1000c6e5
    if (a2 == 0) {
        v5 = v3;
        goto lab_0x1000c75e;
    } else {
        // 0x1000c6d2
        v7 = (char *)(v4 + 20);
        if ((*v7 & 1) != 0) {
            v5 = v3;
            goto lab_0x1000c75e;
        } else {
            // 0x1000c6dc
            if ((*(char *)(v4 + 21) & 8) != 0) {
                v5 = v3;
                goto lab_0x1000c75e;
            } else {
                // 0x1000c6e2
                v8 = (int32_t *)(v4 + 16);
                int32_t v10 = *v8; // 0x1000c6e2
                v9 = (int32_t *)(v4 + 32);
                int32_t v11 = *v9; // 0x1000c6e5
                g4 = v11;
                if (v10 < v11) {
                    goto lab_0x1000c6f5;
                } else {
                    // 0x1000c6ec
                    if (*(int32_t *)(v4 + 4) < v10 - v11 + a2) {
                        goto lab_0x1000c6f5;
                    } else {
                        v6 = v3;
                        goto lab_0x1000c70b;
                    }
                }
            }
        }
    }
  lab_0x1000c75e:
    // 0x1000c75e
    g5 = *(int32_t *)v5;
    g2 = *(int32_t *)(v5 + 8);
    return g1;
  lab_0x1000c6f5:;
    int32_t result = *(int32_t *)(v4 + 40); // 0x1000c6f5
    int32_t v12 = a2; // bp-16
    g4 = v4;
    if ((char)result == 0) {
        // 0x1000c701
        *v7 = *v7 | 1;
        g5 = v12;
        g2 = v1;
        return result;
    }
    v6 = &v12;
    goto lab_0x1000c70b;
  lab_0x1000c70b:
    // 0x1000c70b
    g4 = a1;
    *(int32_t *)(v6 - 4) = a2;
    *(int32_t *)(v6 - 8) = g4;
    *(int32_t *)(v6 - 12) = *v8 - *v9 + a1;
    g1 = _memcpy2();
    int32_t * v13 = (int32_t *)(g7 + 16); // 0x1000c71e
    *v13 = *v13 + a2;
    int32_t v14 = g7; // 0x1000c721
    int32_t v15 = *(int32_t *)(v14 + 16); // 0x1000c721
    int32_t v16 = v15; // edi
    if (v15 > *(int32_t *)(v14 + 28)) {
        // 0x1000c72c
        int32_t v17; // 0x1000c75b
        if ((*(char *)(v14 + 21) & 8) == 0) {
            // 0x1000c732
            if ((*(char *)(v14 + 20) & 1) == 0) {
                // 0x1000c738
                *(int32_t *)(g8 + 8) = 1;
                g4 = g7;
                int32_t v18 = function_1000c090((int32_t)&g169); // 0x1000c73c
                g1 = v18;
                if ((char)v18 != 0) {
                    int32_t result2 = g4 - *(int32_t *)(g7 + 32); // 0x1000c747
                    *(char *)(v16 + result2) = 0;
                    *(int32_t *)(g7 + 28) = v16;
                    g5 = *(int32_t *)g8;
                    g2 = *(int32_t *)(g8 + 8);
                    return result2;
                }
                char * v19 = (char *)(g7 + 20); // 0x1000c757
                *v19 = *v19 & -2;
                v17 = g7;
            } else {
                v17 = v14;
            }
        } else {
            v17 = v14;
        }
        // 0x1000c75b
        *(int32_t *)(v17 + 28) = v15;
        v5 = g8;
    } else {
        v5 = g8 + 12;
    }
    goto lab_0x1000c75e;
}

// Address range: 0x1000c770 - 0x1000c7bf
int32_t function_1000c770(int32_t a1) {
    int32_t v1; // esi
    int32_t v2 = v1; // bp-8
    int32_t v3 = g4; // 0x1000c774
    g7 = v3;
    int32_t v4; // 0x1000c790
    int32_t v5; // 0x1000c796
    if (*(int32_t *)(v3 + 8) < 0) {
        // 0x1000c77c
        if ((*(char *)(v3 + 21) & 2) == 0) {
            // 0x1000c782
            return g1 & -256;
        }
        // 0x1000c789
        function_1000c130(0, v1, g2);
        v5 = g8;
        v4 = g7;
    } else {
        v5 = &v2;
        v4 = v3;
    }
    int32_t v6 = v5 - 4; // 0x1000c796
    *(int32_t *)v6 = g5;
    g5 = a1;
    int32_t v7 = *(int32_t *)(v4 + 16) - *(int32_t *)(v4 + 32) + a1; // 0x1000c79a
    if (*(int32_t *)(g7 + 4) >= v7) {
        // 0x1000c7b7
        return v7 & -256 | 1;
    }
    g1 = v7;
    *(int32_t *)(v6 - 4) = 1;
    g4 = g7;
    int32_t v8 = function_1000c180((int32_t)&g169); // 0x1000c7a5
    g1 = v8;
    int32_t v9 = *(int32_t *)(g7 + 16); // 0x1000c7aa
    g4 = v9;
    int32_t v10 = g5 + v9 - *(int32_t *)(g7 + 32); // 0x1000c7b0
    g4 = v10;
    while (*(int32_t *)(g7 + 4) < v10) {
        // 0x1000c7a1
        *(int32_t *)(g8 - 4) = 1;
        g4 = g7;
        v8 = function_1000c180((int32_t)&g169);
        g1 = v8;
        v9 = *(int32_t *)(g7 + 16);
        g4 = v9;
        v10 = g5 + v9 - *(int32_t *)(g7 + 32);
        g4 = v10;
    }
    // 0x1000c7b7
    return v8 & -256 | 1;
}

// Address range: 0x1000c7c0 - 0x1000c876
int32_t function_1000c7c0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = 0; // ebx
    int32_t v2 = g7; // 0x1000c7c6
    int32_t v3 = g4; // 0x1000c7c7
    g7 = v3;
    *(int32_t *)(v3 + 8) = 0;
    *(int32_t *)g7 = v1;
    *(int32_t *)(g7 + 4) = v1;
    *(char *)(g7 + 20) = (char)v1;
    int32_t * v4 = (int32_t *)(g7 + 44); // 0x1000c7d4
    *v4 = *v4 & -4;
    int32_t v5 = g7; // 0x1000c7d8
    if (*(int32_t *)(v5 + 8) >= v1) {
        int32_t v6 = g4; // 0x1000c7dd
        g1 = v6;
        int32_t v7; // 0x1000c7f5
        if (v6 != v1) {
            int32_t v8 = *(int32_t *)0x100221e8; // 0x1000c7e3
            g4 = v8;
            int32_t v9 = *(int32_t *)v8; // 0x1000c7e9
            g4 = v9;
            g1 = *(int32_t *)(*(int32_t *)v9 + 20);
            *(int32_t *)v5 = v1;
            v7 = g7;
        } else {
            v7 = v5;
        }
        // 0x1000c7f5
        *(int32_t *)(v7 + 4) = v1;
    }
    // 0x1000c7f8
    g4 = a1;
    *(int32_t *)(g8 - 4) = g5;
    *(int32_t *)(g7 + 8) = g4;
    *(int32_t *)(g7 + 4) = a2;
    int32_t v10; // 0x1000c820
    if (a2 != v1) {
        int32_t v11 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000c80f
        g4 = v11;
        g1 = *(int32_t *)v11;
        *(int32_t *)(g8 - 4) = a2;
        *(int32_t *)g7 = g1;
        v10 = v1;
    } else {
        v10 = v1;
    }
    // 0x1000c81b
    g1 = g1 & -256 | a3 & 255;
    *(int32_t *)(g7 + 12) = v10;
    *(int32_t *)(g7 + 16) = v1;
    *(int32_t *)(g7 + 24) = v1;
    *(int32_t *)(g7 + 32) = v1;
    *(char *)(g7 + 21) = (char)g1;
    g5 = *(int32_t *)g8;
    if (a2 != v10) {
        // 0x1000c832
        if ((g1 & 8) == 0) {
            int32_t v12 = g7; // 0x1000c836
            *(int32_t *)(v12 + 28) = -1;
            if ((*(char *)(v12 + 20) & 1) == 0) {
                // 0x1000c843
                *(int32_t *)(g8 - 4) = 1;
                g4 = g7;
                if ((char)function_1000c090(v2) == 0) {
                    char * v13 = (char *)(g7 + 20); // 0x1000c859
                    *v13 = *v13 & -2;
                } else {
                    // 0x1000c850
                    *(char *)(g4 - *(int32_t *)(g7 + 32)) = (char)v1;
                }
            }
        }
    }
    // 0x1000c85d
    *(int32_t *)(g7 + 28) = v1;
    *(int32_t *)(g7 + 36) = 0x1000ddd0;
    *(int32_t *)(g7 + 40) = 0x1000c770;
    int32_t result = g7; // 0x1000c86e
    g7 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    g2 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x1000c880 - 0x1000c8fb
int32_t function_1000c880(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = 0; // ebx
    int32_t v2 = g4; // 0x1000c88a
    g7 = v2;
    g4 = a2;
    int32_t v3 = -1; // edx
    *(int32_t *)v2 = a1;
    g1 = a1 & -256 | a3 & 255;
    *(int32_t *)(g7 + 4) = g4;
    *(int32_t *)(g7 + 8) = v3;
    *(char *)(g7 + 20) = (char)v1;
    int32_t * v4 = (int32_t *)(g7 + 44); // 0x1000c8a0
    *v4 = *v4 & -4;
    *(int32_t *)(g7 + 12) = v1;
    *(int32_t *)(g7 + 16) = v1;
    *(int32_t *)(g7 + 24) = v1;
    *(int32_t *)(g7 + 32) = v1;
    *(char *)(g7 + 21) = (char)g1;
    if ((g1 & 8) == 0) {
        int32_t v5 = g7; // 0x1000c8bf
        *(int32_t *)(v5 + 28) = v3;
        if ((*(char *)(v5 + 20) & 1) == 0) {
            // 0x1000c8c8
            g4 = g7;
            if ((char)function_1000c090(1) == 0) {
                char * v6 = (char *)(g7 + 20); // 0x1000c8de
                *v6 = *v6 & -2;
            } else {
                int32_t v7 = g4 - *(int32_t *)(g7 + 32); // 0x1000c8d7
                g4 = v7;
                *(char *)v7 = (char)v1;
            }
        }
        // 0x1000c8e2
        *(int32_t *)(g7 + 28) = v1;
    } else {
        // 0x1000c8b7
        *(int32_t *)(g7 + 16) = g4;
        *(int32_t *)(g7 + 28) = g4;
    }
    // 0x1000c8e5
    *(int32_t *)(g7 + 36) = 0x1000ddd0;
    *(int32_t *)(g7 + 40) = 0x1000c770;
    int32_t result = g7; // 0x1000c8f3
    g7 = *(int32_t *)g8;
    g2 = *(int32_t *)(g8 + 8);
    return result;
}

// Address range: 0x1000c900 - 0x1000c98b
int32_t function_1000c900(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g4; // 0x1000c905
    g7 = v1;
    int32_t v2 = 0; // ebx
    int32_t v3; // 0x1000c936
    if (*(int32_t *)(v1 + 8) >= 0) {
        // 0x1000c90f
        g1 = v1;
        int32_t v4; // 0x1000c927
        int32_t * v5; // 0x1000c927
        if (v1 != 0) {
            int32_t v6 = *(int32_t *)0x100221e8; // 0x1000c915
            g4 = v6;
            int32_t v7 = *(int32_t *)v6; // 0x1000c91b
            g4 = v7;
            g1 = *(int32_t *)(*(int32_t *)v7 + 20);
            *(int32_t *)v1 = 0;
            v5 = (int32_t *)(g7 + 4);
            v4 = v2;
        } else {
            v5 = (int32_t *)4;
            v4 = 0;
        }
        // 0x1000c927
        *v5 = v4;
        v3 = g7;
    } else {
        v3 = v1;
    }
    g1 = g1 & -256 | a4 & 255;
    *(int32_t *)v3 = a1;
    g4 = -1;
    *(int32_t *)(g7 + 4) = a2;
    *(int32_t *)(g7 + 8) = g4;
    *(int32_t *)(g7 + 12) = v2;
    *(int32_t *)(g7 + 16) = a3;
    *(int32_t *)(g7 + 24) = v2;
    *(char *)(g7 + 20) = (char)v2;
    *(int32_t *)(g7 + 32) = v2;
    *(char *)(g7 + 21) = (char)g1;
    *(int32_t *)(g7 + 28) = g4;
    if (a3 > g4) {
        // 0x1000c95a
        if ((g1 & 8) == 0) {
            // 0x1000c95e
            *(int32_t *)(g8 - 4) = 1;
            g4 = g7;
            int32_t v8 = function_1000c090(g5); // 0x1000c962
            g1 = v8;
            if ((char)v8 != 0) {
                int32_t result = g4 - *(int32_t *)(g7 + 32); // 0x1000c96d
                *(char *)(a3 + result) = (char)v2;
                *(int32_t *)(g7 + 28) = a3;
                g5 = *(int32_t *)g8;
                g3 = *(int32_t *)(g8 + 8);
                g2 = *(int32_t *)(g8 + 12);
                return result;
            }
            char * v9 = (char *)(g7 + 20); // 0x1000c97d
            *v9 = *v9 & -2;
        }
        // 0x1000c981
        *(int32_t *)(g7 + 28) = a3;
    }
    // 0x1000c984
    g5 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return g1;
}

// Address range: 0x1000c990 - 0x1000ca1a
int32_t function_1000c990(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g4; // 0x1000c995
    g7 = v1;
    int32_t v2 = 0; // ebx
    int32_t v3; // 0x1000c9c6
    if (*(int32_t *)(v1 + 8) >= 0) {
        // 0x1000c99f
        g1 = v1;
        int32_t v4; // 0x1000c9b7
        int32_t * v5; // 0x1000c9b7
        if (v1 != 0) {
            int32_t v6 = *(int32_t *)0x100221e8; // 0x1000c9a5
            g4 = v6;
            int32_t v7 = *(int32_t *)v6; // 0x1000c9ab
            g4 = v7;
            g1 = *(int32_t *)(*(int32_t *)v7 + 20);
            *(int32_t *)v1 = 0;
            v5 = (int32_t *)(g7 + 4);
            v4 = v2;
        } else {
            v5 = (int32_t *)4;
            v4 = 0;
        }
        // 0x1000c9b7
        *v5 = v4;
        v3 = g7;
    } else {
        v3 = v1;
    }
    g4 = a1;
    g1 = g1 & -256 | a4 & 255;
    *(int32_t *)v3 = a1;
    *(int32_t *)(g7 + 4) = a2;
    *(int32_t *)(g7 + 12) = v2;
    *(int32_t *)(g7 + 16) = a3;
    *(int32_t *)(g7 + 24) = v2;
    *(char *)(g7 + 20) = (char)v2;
    *(int32_t *)(g7 + 32) = v2;
    *(char *)(g7 + 21) = (char)g1;
    *(int32_t *)(g7 + 28) = -1;
    if (a3 > -1) {
        // 0x1000c9e9
        if ((g1 & 8) == 0) {
            // 0x1000c9ed
            *(int32_t *)(g8 - 4) = 1;
            g4 = g7;
            int32_t v8 = function_1000c090(g5); // 0x1000c9f1
            g1 = v8;
            if ((char)v8 != 0) {
                int32_t result = g4 - *(int32_t *)(g7 + 32); // 0x1000c9fc
                *(char *)(a3 + result) = (char)v2;
                *(int32_t *)(g7 + 28) = a3;
                g5 = *(int32_t *)g8;
                g2 = *(int32_t *)(g8 + 12);
                return result;
            }
            char * v9 = (char *)(g7 + 20); // 0x1000ca0c
            *v9 = *v9 & -2;
        }
        // 0x1000ca10
        *(int32_t *)(g7 + 28) = a3;
    }
    // 0x1000ca13
    g5 = *(int32_t *)g8;
    g2 = *(int32_t *)(g8 + 12);
    return g1;
}

// Address range: 0x1000ca20 - 0x1000ca99
int32_t function_1000ca20(void) {
    int32_t v1 = g4; // 0x1000ca23
    g7 = v1;
    if ((*(char *)(v1 + 21) & 1) == 0 || *(char *)(v1 + 20) != 0) {
        // 0x1000ca92
        g7 = *(int32_t *)g8;
        return g1 & -256;
    }
    // 0x1000ca33
    g1 = function_1000bf20(2);
    char * v2 = (char *)(g7 + 20); // 0x1000ca3a
    *v2 = *v2 & -3;
    if ((char)g1 == 0) {
        // 0x1000ca92
        g7 = *(int32_t *)g8;
        return g1 & -256;
    }
    int32_t v3 = g7; // 0x1000ca42
    int32_t * v4 = (int32_t *)(v3 + 12); // 0x1000ca42
    int32_t v5 = *v4; // 0x1000ca42
    g4 = v5;
    int32_t v6 = v5 - *(int32_t *)(v3 + 32) + v5; // 0x1000ca4a
    g1 = v6;
    if (v6 == 0 || *(char *)v6 != 47 || *(char *)(v6 + 1) != 47) {
        // 0x1000ca92
        g7 = *(int32_t *)g8;
        return g1 & -256;
    }
    // 0x1000ca59
    int32_t v7; // bp-5
    int32_t v8 = &v7; // 0x1000ca5c
    g1 = v8;
    *v4 = v5 + 2;
    g4 = g7;
    int32_t v9 = v7 & 255 | function_1000b150(&v7) & -256; // 0x1000ca6e
    g1 = v9;
    if (*(char *)(g7 + 20) != 0) {
        // 0x1000ca8b
        g7 = *(int32_t *)g8;
        return v9 & -256 | 1;
    }
    int32_t v10; // 0x1000ca8b
    while (true) {
        if ((char)v9 == 10) {
            v10 = v9;
            // break -> 0x1000ca8b
            break;
        }
        // 0x1000ca77
        *(int32_t *)(g8 - 4) = v8;
        g4 = g7;
        int32_t v11 = v7 & 255 | function_1000b150(&g169) & -256; // 0x1000ca86
        g1 = v11;
        if (*(char *)(g7 + 20) != 0) {
            v10 = v11;
            // break -> 0x1000ca8b
            break;
        }
        v9 = v11;
    }
    // 0x1000ca8b
    g7 = *(int32_t *)g8;
    return v10 & -256 | 1;
}

// Address range: 0x1000caa0 - 0x1000cbaa
int32_t function_1000caa0(int32_t result, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = g7; // 0x1000caa3
    int32_t v2 = g4; // 0x1000caa4
    g7 = v2;
    if (*(char *)(v2 + 20) != 0) {
        // 0x1000caac
        *(char *)result = 0;
        return result;
    }
    int32_t v3 = g3; // 0x1000cab7
    int32_t v4;
    if (a2 == 0) {
        v4 = 0x7fffffff;
    } else {
        v4 = a2;
    }
    // 0x1000cac4
    g3 = v4;
    int32_t v5 = function_1000c320(g5, v3, v1, g2); // 0x1000cac5
    g1 = v5;
    int32_t v6 = g7; // 0x1000caca
    g5 = v5;
    if ((*(char *)(v6 + 21) & 1) != 0) {
        // 0x1000cad2
        g4 = v6;
        g1 = function_1000c210();
    }
    if (v5 == 0) {
        // 0x1000cadd
        g4 = result;
        *(char *)result = 0;
        char * v7 = (char *)(g7 + 20); // 0x1000cae4
        *v7 = *v7 | 2;
        return g1;
    }
    // 0x1000caee
    int32_t v8;
    if (v5 > g3) {
        int32_t v9 = g3 - 1; // 0x1000cb28
        g1 = v9;
        if (v9 >= 1) {
            // 0x1000cb2f
            g4 = g7;
            if ((char)function_1000bf20(v9) != 0) {
                int32_t v10 = g7; // 0x1000cb3b
                g6 = g4 + *(int32_t *)(v10 + 12) - *(int32_t *)(v10 + 32);
                _memcpy2();
                int32_t * v11 = (int32_t *)(g7 + 12); // 0x1000cb57
                *v11 = *v11 + g3 - 1;
            }
        }
        // 0x1000cb5a
        g4 = result;
        *(char *)(result - 1 + g3) = 0;
        int32_t v12 = v5 - g3; // 0x1000cb62
        g5 = v12;
        int32_t * v13 = (int32_t *)(g7 + 12); // 0x1000cb64
        *v13 = *v13 + v12;
        int32_t v14 = g7; // 0x1000cb67
        int32_t v15 = *(int32_t *)(v14 + 12); // 0x1000cb67
        g1 = v15;
        if (v15 > *(int32_t *)(v14 + 28)) {
            char * v16 = (char *)(v14 + 20); // 0x1000cb6f
            *v16 = *v16 | 2;
            goto lab_0x1000cb92;
        } else {
            // 0x1000cb75
            g4 = *(int32_t *)(v14 + 32);
            char * v17 = (char *)(v14 + 20); // 0x1000cb78
            *v17 = *v17 & -3;
            int32_t v18 = g1; // 0x1000cb7c
            int32_t v19 = g4; // 0x1000cb7c
            v8 = g7;
            if (v18 < v19) {
                goto lab_0x1000cb89;
            } else {
                int32_t v20 = *(int32_t *)(v8 + 4) + v19; // 0x1000cb83
                g6 = v20;
                if (v18 < v20) {
                    goto lab_0x1000cb92;
                } else {
                    goto lab_0x1000cb89;
                }
            }
        }
    } else {
        uint32_t v21 = v5 - 1; // 0x1000caf2
        if (v21 >= 1) {
            // 0x1000caf9
            g4 = g7;
            int32_t v22 = function_1000bf20(v21); // 0x1000cafc
            g1 = v22;
            if ((char)v22 != 0) {
                int32_t v23 = g7; // 0x1000cb05
                g6 = g4 + *(int32_t *)(v23 + 12) - *(int32_t *)(v23 + 32);
                g1 = _memcpy2();
                int32_t * v24 = (int32_t *)(g7 + 12); // 0x1000cb1b
                *v24 = *v24 + v21;
            }
        }
        // 0x1000cb1e
        g4 = result;
        *(char *)(v21 + result) = 0;
        goto lab_0x1000cb92;
    }
  lab_0x1000cb92:;
    // 0x1000cb92
    int32_t result2; // 0x1000cba7
    if ((*(char *)(g7 + 21) & 1) != 0) {
        // 0x1000cb92
        result2 = g1;
    } else {
        // 0x1000cb98
        int32_t v25;
        *(int32_t *)(g8 - 4) = (int32_t)&v25;
        g4 = g7;
        result2 = function_1000b150(&g169);
    }
    // 0x1000cba3
    return result2;
  lab_0x1000cb89:
    // 0x1000cb89
    g1 = *(int32_t *)(v8 + 36);
    *(int32_t *)(g8 - 4) = -1;
    g4 = g7;
    goto lab_0x1000cb92;
}

// Address range: 0x1000cbb0 - 0x1000cc4b
int32_t function_1000cbb0(int32_t a1) {
    int32_t v1 = a1;
    int32_t v2; // bp-5
    int32_t v3 = &v2; // 0x1000cbb7
    g1 = v3;
    g7 = g4;
    int32_t v4 = function_1000b150(&v2); // 0x1000cbbd
    int32_t v5 = v2; // 0x1000cbc2
    int32_t v6 = v5 & 255; // 0x1000cbc2
    g5 = a1;
    g3 = g3 & -256 | v6;
    int32_t v7; // 0x1000cc42
    if ((char)v5 != *(char *)(a1 + 4)) {
        v7 = v6 | v4 & -256;
        goto lab_0x1000cc40;
    } else {
        int32_t v8 = &v1; // 0x1000cbd2
        v1 = *(int32_t *)(a1 + 20);
        g4 = g7;
        int32_t result = function_1000bf80(0, &v1); // 0x1000cbdd
        if ((char)result == 0) {
            // 0x1000cbe6
            g7 = v8;
            g3 = v3;
            return result;
        }
        int32_t * v9 = (int32_t *)(g7 + 12); // 0x1000cbef
        int32_t v10 = g4 + *v9 - *(int32_t *)(g7 + 32); // 0x1000cbf7
        g6 = *(int32_t *)*(int32_t *)g5;
        g4 = g5;
        g3 = g3 & -256 | v10 & 255;
        *v9 = *v9 + v1;
        int32_t v11 = *(int32_t *)(g7 + 12); // 0x1000cc0c
        if (v11 > *(int32_t *)(g7 + 28)) {
            char * v12 = (char *)(g7 + 20); // 0x1000cc14
            *v12 = *v12 | 2;
            g7 = v8;
            int32_t result2 = v11 & -256 | g3 & 255; // 0x1000cc1a
            g3 = 0;
            return result2;
        }
        // 0x1000cc23
        g4 = *(int32_t *)(g7 + 32);
        char * v13 = (char *)(g7 + 20); // 0x1000cc26
        *v13 = *v13 & -3;
        int32_t v14 = g4; // 0x1000cc2a
        if (v11 < v14) {
            goto lab_0x1000cc37;
        } else {
            int32_t v15 = *(int32_t *)(g7 + 4) + v14; // 0x1000cc31
            g6 = v15;
            if (v11 < v15) {
                v7 = v11;
                goto lab_0x1000cc40;
            } else {
                goto lab_0x1000cc37;
            }
        }
    }
  lab_0x1000cc40:
    // 0x1000cc40
    g7 = *(int32_t *)(g8 + 4);
    int32_t result3 = g3 & 255 | v7 & -256; // 0x1000cc42
    g3 = *(int32_t *)(g8 + 8);
    return result3;
  lab_0x1000cc37:
    // 0x1000cc37
    g4 = g7;
    v7 = *(int32_t *)(g7 + 36);
    goto lab_0x1000cc40;
}

// Address range: 0x1000cc50 - 0x1000cdb7
int32_t function_1000cc50(int32_t a1, int32_t * a2, int32_t a3) {
    int32_t result = (int32_t)a2;
    int32_t v1 = g2; // 0x1000cc50
    int32_t v2 = g4; // 0x1000cc53
    int32_t v3 = g3; // 0x1000cc54
    int32_t v4 = g7; // 0x1000cc55
    g7 = v2;
    if ((*(char *)(v2 + 21) & 1) == 0) {
        // 0x1000cdaf
        return function_1000caa0(result, a3, v4, v3, v2, v1);
    }
    // 0x1000cc62
    g3 = a1;
    if (a1 == 0) {
        // 0x1000cdaf
        return function_1000caa0(result, a3, v4, v3, v2, v1);
    }
    // 0x1000cc6d
    if (*(char *)(v2 + 20) != 0) {
        // 0x1000cc73
        *(char *)a2 = 0;
        return result;
    }
    int32_t v5 = a3 != 0 ? a3 : 0x7fffffff;
    function_1000c210();
    int32_t * v6 = (int32_t *)(a1 + 12); // 0x1000cc93
    int32_t v7 = *v6; // 0x1000cc93
    g1 = v7;
    int32_t * v8 = (int32_t *)(a1 + 8); // 0x1000cc96
    g4 = g7;
    int32_t result2 = function_1000c570(0, *v8, v7); // 0x1000cc9f
    if ((char)result2 == 0) {
        // 0x1000cdaf
        return result2;
    }
    int32_t * v9 = (int32_t *)(g7 + 12); // 0x1000ccaf
    *v9 = *v9 + *v6;
    int32_t v10 = g7; // 0x1000ccb2
    int32_t v11 = *(int32_t *)(v10 + 12); // 0x1000ccb2
    g1 = v11;
    int32_t v12;
    int32_t v13; // 0x1000ccdd
    if (v11 > *(int32_t *)(v10 + 28)) {
        char * v14 = (char *)(v10 + 20); // 0x1000ccba
        *v14 = *v14 | 2;
        v13 = g7;
        goto lab_0x1000ccdd;
    } else {
        // 0x1000ccc0
        g4 = *(int32_t *)(v10 + 32);
        char * v15 = (char *)(v10 + 20); // 0x1000ccc3
        *v15 = *v15 & -3;
        int32_t v16 = g1; // 0x1000ccc7
        int32_t v17 = g4; // 0x1000ccc7
        v12 = g7;
        if (v16 < v17) {
            goto lab_0x1000ccd4;
        } else {
            int32_t v18 = *(int32_t *)(v12 + 4) + v17; // 0x1000ccce
            g6 = v18;
            if (v16 < v18) {
                v13 = v12;
                goto lab_0x1000ccdd;
            } else {
                goto lab_0x1000ccd4;
            }
        }
    }
  lab_0x1000ccdd:;
    // 0x1000ccdd
    int32_t v19;
    int32_t v20; // 0x1000cd41
    if (*(char *)(v13 + 20) != 0) {
        v19 = 0;
        goto lab_0x1000cd82;
    } else {
        // 0x1000ccee
        *(int32_t *)(g8 - 4) = g5;
        int32_t v21 = g7; // 0x1000ccf0
        v20 = 0;
        int32_t v22; // 0x1000cd44
        while (true) {
            int32_t v23 = *v8; // 0x1000ccf4
            g4 = v23;
            int32_t v24 = *v6; // 0x1000ccf7
            g5 = v24;
            if ((*(char *)(v21 + 20) & 2) == 0) {
                // 0x1000ccff
                *(int32_t *)(g8 - 4) = v24;
                g4 = g7;
                int32_t v25 = function_1000bf20(v23); // eax
                char * v26 = (char *)(g7 + 20); // 0x1000cd07
                *v26 = *v26 & -3;
                if ((char)v25 != 0) {
                    int32_t v27 = g7; // 0x1000cd0f
                    g6 = v23;
                    g1 = g4 + *(int32_t *)(v27 + 12) - *(int32_t *)(v27 + 32);
                    *(int32_t *)(g8 - 4) = g5;
                    *(int32_t *)(g8 - 8) = g6;
                    *(int32_t *)(g8 - 12) = g1;
                    int32_t v28 = function_10009540((int32_t)&g169, (int32_t)&g169, (int32_t)&g169); // 0x1000cd1d
                    if (v28 == 0) {
                        int32_t * v29 = (int32_t *)(g7 + 12); // 0x1000cd53
                        *v29 = *v29 + *v6;
                        int32_t v30 = *(int32_t *)(g7 + 12); // 0x1000cd56
                        if (v30 > *(int32_t *)(g7 + 28)) {
                            char * v31 = (char *)(g7 + 20); // 0x1000cd5e
                            *v31 = *v31 | 2;
                            v19 = v20;
                            goto lab_0x1000cd82;
                        } else {
                            // 0x1000cd64
                            g4 = *(int32_t *)(g7 + 32);
                            char * v32 = (char *)(g7 + 20); // 0x1000cd67
                            *v32 = *v32 & -3;
                            int32_t v33 = g4; // 0x1000cd6b
                            if (v30 < v33) {
                                goto lab_0x1000cd78;
                            } else {
                                // 0x1000cd6f
                                if (v30 < *(int32_t *)(g7 + 4) + v33) {
                                    v19 = v20;
                                    goto lab_0x1000cd82;
                                } else {
                                    goto lab_0x1000cd78;
                                }
                            }
                        }
                    }
                }
            }
            // 0x1000cd2e
            *(int32_t *)(g8 - 4) = a1;
            g4 = g7;
            int32_t v34 = function_1000cbb0((int32_t)&g169); // 0x1000cd31
            g1 = v34;
            g4 = v20;
            if (v20 < v5) {
                // 0x1000cd3e
                g6 = result;
                *(char *)(v20 + result) = (char)v34;
                v22 = g4 + 1;
                g4 = v22;
            } else {
                v22 = v20;
            }
            int32_t v35 = g7; // 0x1000cd48
            if (*(char *)(v35 + 20) != 0) {
                // break -> 0x1000cd81
                break;
            }
            v21 = v35;
            v20 = v22;
        }
        v19 = v22;
        goto lab_0x1000cd82;
    }
  lab_0x1000ccd4:
    // 0x1000ccd4
    g1 = *(int32_t *)(v12 + 36);
    g4 = v12;
    v13 = v12;
    goto lab_0x1000ccdd;
  lab_0x1000cd82:;
    int32_t result3; // 0x1000cd8a
    if (v19 >= v5) {
        // 0x1000cd8a
        result3 = v5 - 1;
    } else {
        result3 = v5;
    }
    // 0x1000cd8e
    g4 = result;
    *(char *)(result3 + result) = 0;
    return result3;
  lab_0x1000cd78:
    // 0x1000cd78
    *(int32_t *)(g8 - 4) = -1;
    g4 = g7;
    v19 = v20;
    goto lab_0x1000cd82;
}

// Address range: 0x1000cdc0 - 0x1000cf84
int32_t function_1000cdc0(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t v1 = (int32_t)a2;
    int32_t v2 = (int32_t)a1;
    int32_t v3 = g3; // 0x1000cdc3
    int32_t v4 = g7; // 0x1000cdc4
    int32_t v5 = g5; // 0x1000cdc5
    g5 = v1;
    g7 = g4;
    *(char *)a2 = 0;
    int32_t v6 = g7; // 0x1000cdce
    int32_t result; // ebx
    int32_t v7; // 0x1000ce75
    int32_t v8; // 0x1000cea9
    if (*(char *)(v6 + 20) != 0) {
        goto lab_0x1000cdf3;
    } else {
        // 0x1000cdd4
        g3 = g3 & -256 | a4 & 255;
        while (true) {
            // 0x1000cdd7
            g4 = v6;
            g1 = function_1000c210();
            if ((char)g3 == 0) {
                // break -> 0x1000cdfd
                break;
            }
            // 0x1000cde2
            g4 = g7;
            int32_t v9 = function_1000ca20(); // 0x1000cde4
            g1 = v9;
            if ((char)v9 == 0) {
                // break -> 0x1000cdfd
                break;
            }
            int32_t v10 = g7; // 0x1000cded
            if (*(char *)(v10 + 20) != 0) {
                goto lab_0x1000cdf3;
            }
            v6 = v10;
        }
        int32_t v11 = &a5; // 0x1000cdfd
        g1 = v11;
        g4 = g7;
        int32_t v12 = function_1000b150(&a5); // 0x1000ce03
        int32_t v13 = a5; // 0x1000ce08
        int32_t v14 = v13 & 255; // 0x1000ce08
        g1 = v14 | v12 & -256;
        char v15 = v13; // 0x1000ce0b
        if (v15 == 0) {
            goto lab_0x1000cdf3;
        } else {
            // 0x1000ce0f
            if (v15 != 34) {
                // 0x1000ceca
                g4 = v2;
                *(char *)g5 = v15;
                if (*(char *)(v14 + v2) != 0) {
                    // 0x1000ced8
                    *(char *)(g5 + 1) = 0;
                    g5 = v11;
                    g7 = v5;
                    g3 = v4;
                    g2 = v3;
                    return 1;
                }
                // 0x1000cee8
                result = a3;
                g5 = 1;
                int32_t v16; // 0x1000cf2a
                if (a3 == 1) {
                    v16 = 1;
                  lab_0x1000cf27:
                    // 0x1000cf27
                    *(char *)(v1 - 1 + v16) = 0;
                    g5 = *(int32_t *)g8;
                    g7 = *(int32_t *)(g8 + 4);
                    g3 = *(int32_t *)(g8 + 8);
                    g2 = *(int32_t *)(g8 + 12);
                    return result;
                }
                while (true) {
                    // 0x1000cef4
                    g6 = v11;
                    *(int32_t *)(g8 - 4) = v11;
                    g4 = g7;
                    int32_t v17 = function_1000b150(&g169); // 0x1000cefa
                    if (*(char *)(g7 + 20) != 0) {
                        // break -> 0x1000cf74
                        break;
                    }
                    int32_t v18 = a5; // 0x1000cf05
                    int32_t v19 = v18 & 255; // 0x1000cf05
                    g1 = v19 | v17 & -256;
                    g4 = v19;
                    if (*(char *)(v19 + v2) != 0) {
                        goto lab_0x1000cf38_3;
                    }
                    unsigned char v20 = (char)v18; // 0x1000cf14
                    if (v20 == 34) {
                        goto lab_0x1000cf38_3;
                    }
                    // 0x1000cf18
                    if (v20 <= 32) {
                        goto lab_0x1000cf38_3;
                    }
                    // 0x1000cf1c
                    g4 = v1;
                    *(char *)(g5 + v1) = v20;
                    int32_t v21 = g5 + 1; // 0x1000cf22
                    g5 = v21;
                    if (v21 == result) {
                        v16 = v21;
                        goto lab_0x1000cf27;
                    }
                }
            } else {
                // 0x1000ce17
                g5 = 0;
                if (*(char *)(g7 + 20) == 0) {
                    // 0x1000ce23
                    result = a3;
                    v8 = g7;
                    while (true) {
                      lab_0x1000ce30:;
                        char * v22 = (char *)(v8 + 20); // 0x1000ce30
                        unsigned char v23 = *v22; // 0x1000ce30
                        g4 = g4 & -256 | (int32_t)v23;
                        if ((v23 & 2) != 0) {
                            // break -> 0x1000cf74
                            break;
                        }
                        int32_t v24 = *(int32_t *)(v8 + 12); // 0x1000ce3c
                        if (*(int32_t *)(v8 + 28) < v24 + 1) {
                            // 0x1000cea6
                            *v22 = v23 | 2;
                            g4 = v1;
                            *(char *)(g5 + v1) = 0;
                            int32_t result2 = g5; // 0x1000ceb3
                            g5 = *(int32_t *)g8;
                            g7 = *(int32_t *)(g8 + 4);
                            g3 = *(int32_t *)(g8 + 8);
                            g2 = *(int32_t *)(g8 + 12);
                            return result2;
                        }
                        int32_t v25 = *(int32_t *)(v8 + 32); // 0x1000ce47
                        g4 = v25;
                        int32_t v26 = v24 - v25; // 0x1000ce4a
                        if (v24 < v25) {
                            goto lab_0x1000ce56;
                        } else {
                            // 0x1000ce4e
                            if (*(int32_t *)(v8 + 4) < v26 + 1) {
                                goto lab_0x1000ce56;
                            } else {
                                v7 = v8;
                                goto lab_0x1000ce67;
                            }
                        }
                    }
                }
            }
            goto lab_0x1000cf74_3;
        }
    }
  lab_0x1000cdf3:
    // 0x1000cdf3
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return -1;
  lab_0x1000cf38_3:;
    int32_t * v27 = (int32_t *)(g7 + 12); // 0x1000cf38
    *v27 = *v27 - 1;
    int32_t v28 = *(int32_t *)(g7 + 12); // 0x1000cf3b
    if (v28 > *(int32_t *)(g7 + 28)) {
        goto lab_0x1000cf43;
    } else {
        // 0x1000cf57
        g4 = *(int32_t *)(g7 + 32);
        char * v29 = (char *)(g7 + 20); // 0x1000cf5a
        *v29 = *v29 & -3;
        int32_t v30 = g4; // 0x1000cf5e
        if (v28 < v30) {
            goto lab_0x1000cf6b;
        } else {
            // 0x1000cf62
            if (v28 < *(int32_t *)(g7 + 4) + v30) {
                goto lab_0x1000cf74_3;
            } else {
                goto lab_0x1000cf6b;
            }
        }
    }
  lab_0x1000cf43:;
    char * v31 = (char *)(g7 + 20); // 0x1000cf43
    *v31 = *v31 | 2;
    g4 = v1;
    *(char *)(g5 + v1) = 0;
    int32_t result3 = g5; // 0x1000cf4e
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result3;
  lab_0x1000ce56:
    // 0x1000ce56
    *(int32_t *)(g8 - 4) = 1;
    g4 = g7;
    if ((char)*(int32_t *)(v8 + 36) == 0) {
        goto lab_0x1000cf43;
    }
    v7 = g7;
    goto lab_0x1000ce67;
  lab_0x1000ce67:;
    int32_t * v32 = (int32_t *)(v7 + 12); // 0x1000ce67
    int32_t v33 = *v32; // 0x1000ce67
    g4 = v33;
    int32_t v34 = v33 + 1; // 0x1000ce71
    g4 = v34;
    unsigned char v35 = *(char *)(v33 - *(int32_t *)(v7 + 32) + v33); // 0x1000ce72
    *v32 = v34;
    char v36 = (int32_t)v35 | v33 & -256; // 0x1000ce78
    if (v36 == 34) {
        // break -> 0x1000cf74
        goto lab_0x1000cf74_3;
    }
    // 0x1000ce80
    if (v36 == 0) {
        // break -> 0x1000cf74
        goto lab_0x1000cf74_3;
    }
    // 0x1000ce88
    g4 = v1;
    *(char *)(g5 + v1) = v36;
    int32_t v37 = g5; // 0x1000ce8e
    int32_t v38 = v37 + 1; // 0x1000ce8e
    g5 = v38;
    if (v38 == result) {
        // 0x1000cebc
        *(char *)(g4 + v37) = 0;
        g5 = *(int32_t *)g8;
        g7 = *(int32_t *)(g8 + 4);
        g3 = *(int32_t *)(g8 + 8);
        g2 = *(int32_t *)(g8 + 12);
        return result;
    }
    // 0x1000ce93
    if (*(char *)(g7 + 20) != 0) {
        // 0x1000ce99
        *(char *)(g4 + v38) = 0;
        int32_t result4 = g5; // 0x1000ce9d
        g5 = *(int32_t *)g8;
        g7 = *(int32_t *)(g8 + 4);
        g3 = *(int32_t *)(g8 + 8);
        g2 = *(int32_t *)(g8 + 12);
        return result4;
    }
    v8 = g7;
    goto lab_0x1000ce30;
  lab_0x1000cf74_3:
    // 0x1000cf74
    g4 = v1;
    *(char *)(g5 + v1) = 0;
    int32_t result5 = g5; // 0x1000cf7b
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result5;
  lab_0x1000cf6b:
    // 0x1000cf6b
    *(int32_t *)(g8 - 4) = -1;
    g4 = g7;
    goto lab_0x1000cf74_3;
}

// Address range: 0x1000cf90 - 0x1000d05c
int32_t function_1000cf90(int32_t a1) {
    int32_t v1 = g2; // 0x1000cf90
    int32_t v2 = g3; // 0x1000cf93
    int32_t v3 = g4; // 0x1000cf94
    g3 = v3;
    unsigned char v4 = *(char *)(v3 + 21); // 0x1000cf96
    int32_t v5 = v4; // 0x1000cf96
    int32_t result3 = g1 & -256 | v5; // 0x1000cf96
    g1 = result3;
    int32_t v6 = g7; // 0x1000cf99
    int32_t v7 = v6; // bp-12
    int32_t v8 = &v7; // 0x1000cf99
    g7 = a1;
    int32_t v9; // bp-16
    if ((v4 & 1) == 0) {
        if (a1 == 0) {
            // 0x1000cfbe
            v9 = 0;
            int32_t result = function_10002e00(0, v6, v2, v1); // 0x1000cfc0
            g7 = v9;
            g3 = v7;
            g2 = v2;
            return result;
        }
        // 0x1000cfa5
        v9 = a1;
        int32_t v10 = function_10009450(a1) + 1; // 0x1000cfae
        g1 = v10;
        v9 = v10;
        int32_t v11 = g7; // 0x1000cfb0
        g4 = g3;
        int32_t result2 = function_1000c6c0(v11, v10); // 0x1000cfb3
        g7 = v11;
        g3 = v9;
        g2 = v7;
        return result2;
    }
    int32_t v12; // 0x1000d056
    if (a1 != 0) {
        int32_t v13; // 0x1000d040
        int32_t v14; // 0x1000d040
        if ((v5 & 16) == 0) {
            // 0x1000cfd7
            if (*(int32_t *)(v3 + 24) > 0) {
                int32_t v15 = *(int32_t *)(v3 + 16); // 0x1000cfdd
                int32_t v16; // 0x1000cfff
                if (v15 != 0) {
                    int32_t v17 = *(int32_t *)(v3 + 32); // 0x1000cfe4
                    if (*(char *)(v3 - 1 + v15 - v17) == 10) {
                        // 0x1000cff5
                        function_10003680();
                        v16 = g7;
                    } else {
                        v16 = a1;
                    }
                } else {
                    v16 = a1;
                }
                // 0x1000cffc
                v9 = g5;
                int32_t v18 = &v9; // 0x1000cffc
                char * v19 = _strchr((char *)v16, 10); // 0x1000d000
                int32_t v20 = (int32_t)v19; // 0x1000d000
                g1 = v20;
                int32_t v21; // 0x1000d03f
                if (v19 != NULL) {
                    // 0x1000d00e
                    g5 = v20;
                    int32_t v22 = v18; // 0x1000d015
                    while (true) {
                        // 0x1000d010
                        *(int32_t *)(v22 - 4) = v20 - g7 + 1;
                        *(int32_t *)(v22 - 8) = g7;
                        g4 = g3;
                        function_1000c6c0((int32_t)&g169, (int32_t)&g169);
                        int32_t v23 = g5 + 1; // 0x1000d01e
                        g7 = v23;
                        if (*(char *)v23 == 0) {
                            // break -> 0x1000d010
                            break;
                        }
                        // 0x1000d027
                        g4 = g3;
                        function_10003680();
                        *(int32_t *)(g8 - 4) = 10;
                        *(int32_t *)(g8 - 8) = g7;
                        char * v24 = _strchr((char *)&g169, (int32_t)&g169); // 0x1000d031
                        int32_t v25 = (int32_t)v24; // 0x1000d031
                        g1 = v25;
                        g5 = v25;
                        int32_t v26 = g8 + 8; // 0x1000d038
                        if (v24 == NULL) {
                            v21 = v26;
                            goto lab_0x1000d03f;
                        }
                        v22 = v26;
                        v20 = v25;
                    }
                    // 0x1000d010
                    v21 = g8;
                } else {
                    v21 = v18;
                }
              lab_0x1000d03f:
                // 0x1000d03f
                g5 = *(int32_t *)v21;
                v14 = v21 + 4;
                v13 = g7;
            } else {
                v14 = v8;
                v13 = a1;
            }
        } else {
            v14 = v8;
            v13 = a1;
        }
        // 0x1000d040
        *(int32_t *)(v14 - 4) = v13;
        int32_t v27 = function_10009450((int32_t)&g169); // 0x1000d041
        g1 = v27;
        if (v27 != 0) {
            // 0x1000d04d
            *(int32_t *)g8 = v27;
            *(int32_t *)(g8 - 4) = g7;
            g4 = g3;
            result3 = function_1000c6c0((int32_t)&g169, (int32_t)&g169);
            v12 = g8;
        } else {
            result3 = 0;
            v12 = g8 + 4;
        }
    } else {
        v12 = v8;
    }
    // 0x1000d056
    g7 = *(int32_t *)v12;
    g3 = *(int32_t *)(v12 + 4);
    g2 = *(int32_t *)(v12 + 8);
    return result3;
}

// Address range: 0x1000d060 - 0x1000d06c
int32_t function_1000d060(void) {
    int32_t v1 = *(int32_t *)(g4 + 12); // 0x1000d060
    if (v1 == 0) {
        // 0x1000d069
        return 0;
    }
    // 0x1000d067
    return v1 - 1;
}

// Address range: 0x1000d070 - 0x1000d07e
int32_t function_1000d070(void) {
    int32_t v1 = g4; // 0x1000d070
    int32_t v2 = *(int32_t *)(v1 + 12); // 0x1000d070
    return v2 == 0 ? (int32_t)&g14 : v1;
}

// Address range: 0x1000d080 - 0x1000d0f1
int32_t function_1000d080(uint32_t a1, int32_t a2) {
    int32_t v1 = g4; // 0x1000d089
    g7 = v1;
    int32_t v2;
    if (a1 == 0) {
        v2 = 0;
    } else {
        v2 = a2;
    }
    // 0x1000d096
    g5 = v2;
    g1 = *(int32_t *)(v1 + 4);
    *(int32_t *)(v1 + 12) = v2;
    int32_t v3 = g5; // 0x1000d09c
    int32_t v4 = g1; // 0x1000d09c
    if (v3 > v4) {
        // 0x1000d0a0
        g4 = g7;
        function_1000c180(v3 - v4);
        int32_t v5 = *(int32_t *)(g7 + 4); // 0x1000d0ac
        if (g5 > v5) {
            // 0x1000d0b3
            *(int32_t *)(g7 + 12) = v5;
        }
    }
    int32_t v6 = *(int32_t *)(g7 + 12); // 0x1000d0b6
    int32_t v7; // 0x1000d0ea
    if (v6 == 0) {
        // 0x1000d0b6
        v7 = g8;
        // 0x1000d0ea
        g7 = *(int32_t *)(v7 + 4);
        g3 = *(int32_t *)(v7 + 8);
        return 0;
    }
    int32_t v8 = g4; // 0x1000d0bd
    int32_t v9 = g5 + a1; // 0x1000d0bf
    g6 = v9;
    if (v8 < v9) {
        int32_t v10 = v8 + v6; // 0x1000d0c6
        g4 = v10;
        if (v10 > a1) {
            // 0x1000d0cd
            *(int32_t *)(g8 - 4) = v6;
            *(int32_t *)(g8 - 8) = a1;
            *(int32_t *)(g8 - 12) = v8;
            int32_t * v11 = _memcpy(&g169, &g169, (int32_t)&g169); // 0x1000d0d0
            g7 = *(int32_t *)(g8 + 16);
            g3 = *(int32_t *)(g8 + 20);
            return (int32_t)v11;
        }
    }
    // 0x1000d0df
    *(int32_t *)(g8 - 4) = v6;
    *(int32_t *)(g8 - 8) = a1;
    *(int32_t *)(g8 - 12) = v8;
    int32_t result = _memcpy2(); // 0x1000d0ee
    v7 = g8 + 12;
    // 0x1000d0ea
    g7 = *(int32_t *)(v7 + 4);
    g3 = *(int32_t *)(v7 + 8);
    return result;
}

// Address range: 0x1000d100 - 0x1000d13c
int32_t function_1000d100(char * a1) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = (int32_t)a1; // 0x1000d105
    g5 = v2;
    char * v3; // bp-16
    if (a1 == NULL) {
        // 0x1000d129
        v3 = NULL;
        function_1000d080(v2, 0);
        g5 = (int32_t)a1;
        int32_t result = g7; // 0x1000d135
        g7 = 0;
        g2 = v1;
        return result;
    }
    // 0x1000d10e
    *(int32_t *)&v3 = v2;
    int32_t v4 = function_10009450(v2) + 1; // 0x1000d117
    v3 = (char *)v4;
    function_1000d080(v2, v4);
    g5 = (int32_t)a1;
    int32_t result2 = g7; // 0x1000d122
    g7 = (int32_t)v3;
    g2 = v1;
    return result2;
}

// Address range: 0x1000d140 - 0x1000d150
int32_t function_1000d140(void) {
    int32_t result = g4; // 0x1000d140
    g4 = 0;
    *(int32_t *)result = 0;
    *(int32_t *)(result + 8) = g4;
    *(int32_t *)(result + 4) = g4;
    *(int32_t *)(result + 12) = g4;
    return result;
}

// Address range: 0x1000d150 - 0x1000d186
int32_t function_1000d150(int32_t a1) {
    int32_t v1 = 0; // eax
    int32_t v2 = g4; // 0x1000d156
    int32_t v3 = g5; // 0x1000d158
    g5 = a1;
    *(int32_t *)v2 = 0;
    *(int32_t *)(v2 + 8) = v1;
    *(int32_t *)(v2 + 4) = v1;
    *(int32_t *)(v2 + 12) = v1;
    int32_t v4 = g5; // 0x1000d167
    int32_t v5; // 0x1000d176
    int32_t v6; // 0x1000d174
    if (v4 != v1) {
        // 0x1000d16b
        v6 = function_10009450(v4) + 1;
        v5 = g5;
    } else {
        v5 = v4;
        v6 = v1;
    }
    // 0x1000d175
    g4 = v2;
    function_1000d080(v5, v6);
    g5 = v5;
    int32_t result = g7; // 0x1000d17f
    g7 = v6;
    g2 = v3;
    return result;
}

// Address range: 0x1000d190 - 0x1000d1d4
int32_t function_1000d190(int32_t a1) {
    int32_t v1 = 0; // eax
    int32_t v2 = g4; // 0x1000d196
    g4 = a1;
    *(int32_t *)v2 = 0;
    *(int32_t *)(v2 + 8) = v1;
    *(int32_t *)(v2 + 4) = v1;
    *(int32_t *)(v2 + 12) = v1;
    int32_t v3 = g5; // 0x1000d1a6
    int32_t v4 = g4; // 0x1000d1a7
    int32_t v5; // 0x1000d1b3
    if (*(int32_t *)(v4 + 12) != v1) {
        // 0x1000d1b3
        v5 = *(int32_t *)v4;
        g5 = v5;
        if (v5 == v1) {
            goto lab_0x1000d1c3;
        } else {
            goto lab_0x1000d1b9;
        }
    } else {
        // 0x1000d1ac
        g5 = &g14;
        v5 = &g14;
        goto lab_0x1000d1b9;
    }
  lab_0x1000d1c3:
    // 0x1000d1c3
    g4 = v2;
    function_1000d080(v5, v1);
    g5 = v5;
    int32_t result = g7; // 0x1000d1cd
    g7 = v1;
    g2 = v3;
    return result;
  lab_0x1000d1b9:;
    int32_t v6 = function_10009450(v5) + 1; // 0x1000d1c2
    v5 = g5;
    v1 = v6;
    goto lab_0x1000d1c3;
}

// Address range: 0x1000d1e0 - 0x1000d28c
int32_t function_1000d1e0(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    g4 = g117;
    if (g117 == 0 || g138 != 0) {
        // 0x1000d28a
        g2 = *(int32_t *)(int32_t)&v1;
        return g1;
    }
    // 0x1000d1fe
    g137 = a1;
    g138 = 1;
    g58 = *(int32_t *)(*(int32_t *)g117 + 32);
    int32_t v2;
    if (a2 == 0) {
        v2 = 0x100286b0;
    } else {
        v2 = a2;
    }
    // 0x1000d22f
    g136 = v2;
    int32_t v3 = g7; // bp-8
    int32_t v4 = g135; // esi
    int32_t v5; // 0x1000d26f
    int32_t v6; // 0x1000d289
    if (g135 != 0) {
        int32_t v7 = g5; // bp-12
        int32_t v8 = &v7; // 0x1000d24d
        int32_t v9 = *(int32_t *)(g135 + 4); // 0x1000d24a
        int32_t v10 = v8 - 4; // 0x1000d24d
        int32_t * v11 = (int32_t *)v10; // 0x1000d24d
        *v11 = a1;
        g4 = v4;
        while (v9 != 0) {
            // 0x1000d240
            v8 = v10;
            v9 += 4;
            v10 = v8 - 4;
            v11 = (int32_t *)v10;
            *v11 = g137;
            g4 = v9;
        }
        // 0x1000d261
        g5 = *v11;
        v6 = v8;
        v5 = g117;
    } else {
        v6 = &v3;
        v5 = g117;
    }
    // 0x1000d262
    g4 = v5;
    g1 = *(int32_t *)v5;
    g135 = 0;
    g7 = *(int32_t *)v6;
    // 0x1000d28a
    g2 = *(int32_t *)(v6 + 4);
    return g1;
}

// Address range: 0x1000d290 - 0x1000d2d9
int32_t function_1000d290(void) {
    // 0x1000d290
    g4 = g117;
    if (g117 == 0) {
        // 0x1000d2d8
        return g1;
    }
    // 0x1000d29a
    if (g138 != 0) {
        // 0x1000d2a3
        g4 = g117;
        g1 = g58;
        g58 = -1;
        g138 = 0;
    }
    // 0x1000d2d8
    return g1;
}

// Address range: 0x1000d2e0 - 0x1000d2e6
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d2e0(void) {
    // 0x1000d2e0
    return g58;
}

// Address range: 0x1000d2f0 - 0x1000d33d
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d2f0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = 0; // edx
    *(int32_t *)(g4 + 12) = a1;
    *(char *)(g4 + 8) = (char)v1;
    int32_t v2; // 0x1000d30a
    if (a2 == v1) {
        // 0x1000d305
        v2 = *(int32_t *)0x100286fc;
    } else {
        v2 = a2;
    }
    // 0x1000d30a
    *(int32_t *)(g4 + 16) = v2;
    int32_t v3 = a3; // eax
    *(int32_t *)(g4 + 20) = a3;
    if ((v3 & 1) != 0) {
        // 0x1000d327
        *(int32_t *)(g4 + 4) = v1;
    } else {
        int32_t v4 = g135; // 0x1000d317
        v3 = v4;
        *(int32_t *)(g4 + 4) = v4;
        g135 = g4;
    }
    // 0x1000d32a
    int32_t result; // 0x1000d33a
    if (g136 == v1) {
        // 0x1000d32a
        result = v3;
    } else {
        // 0x1000d332
        result = *(int32_t *)(g4 + 44);
    }
    // 0x1000d339
    return result;
}

// Address range: 0x1000d340 - 0x1000d344
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d340(void) {
    // 0x1000d340
    return *(int32_t *)(g4 + 12);
}

// Address range: 0x1000d350 - 0x1000d360
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d350(int32_t a1) {
    // 0x1000d350
    return (int32_t)((*(int32_t *)(g4 + 20) & a1) != 0) | a1 & -256;
}

// Address range: 0x1000d360 - 0x1000d36d
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d360(int32_t result) {
    int32_t * v1 = (int32_t *)(g4 + 20); // 0x1000d366
    *v1 = *v1 | result;
    return result;
}

// Address range: 0x1000d370 - 0x1000d37f
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d370(int32_t a1) {
    int32_t result = -1 - a1; // 0x1000d376
    int32_t * v1 = (int32_t *)(g4 + 20); // 0x1000d378
    *v1 = *v1 & result;
    return result;
}

// Address range: 0x1000d380 - 0x1000d384
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d380(void) {
    // 0x1000d380
    return *(int32_t *)(g4 + 20);
}

// Address range: 0x1000d390 - 0x1000d394
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d390(void) {
    // 0x1000d390
    return *(int32_t *)(g4 + 16);
}

// Address range: 0x1000d3a0 - 0x1000d3a4
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d3a0(void) {
    // 0x1000d3a0
    int32_t v1; // eax
    return v1 & -256 | (int32_t)*(char *)(g4 + 8);
}

// Address range: 0x1000d3b0 - 0x1000d3c3
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d3b0(int32_t a1) {
    int32_t v1 = *(int32_t *)(g4 + 28); // 0x1000d3b3
    g4 = a1;
    return (int32_t)((*(int32_t *)(v1 + 20) & a1) != 0) | v1 & -256;
}

// Address range: 0x1000d3d0 - 0x1000d3d7
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d3d0(void) {
    // 0x1000d3d0
    return *(int32_t *)(*(int32_t *)(g4 + 28) + 20);
}

// Address range: 0x1000d3e0 - 0x1000d3e7
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d3e0(void) {
    // 0x1000d3e0
    return *(int32_t *)(*(int32_t *)(g4 + 28) + 16);
}

// Address range: 0x1000d3f0 - 0x1000d400
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d3f0(int32_t a1) {
    int32_t result = *(int32_t *)(g4 + 28); // 0x1000d3f3
    g4 = a1;
    int32_t * v1 = (int32_t *)(result + 20); // 0x1000d3f9
    *v1 = *v1 | a1;
    return result;
}

// Address range: 0x1000d400 - 0x1000d407
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d400(void) {
    int32_t v1 = *(int32_t *)(g4 + 28); // 0x1000d400
    return (int32_t)*(char *)(v1 + 8) | v1 & -256;
}

// Address range: 0x1000d410 - 0x1000d417
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d410(void) {
    // 0x1000d410
    return *(int32_t *)(*(int32_t *)(g4 + 28) + 12);
}

// Address range: 0x1000d420 - 0x1000d427
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d420(void) {
    // 0x1000d420
    return *(int32_t *)(*(int32_t *)(g4 + 4) + 12);
}

// Address range: 0x1000d430 - 0x1000d433
// From class:    ConVar
// Type:          virtual member function
int32_t __wcsdup(void) {
    // 0x1000d430
    return 0;
}

// Address range: 0x1000d440 - 0x1000d443
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d440(void) {
    // 0x1000d440
    int32_t v1; // eax
    return v1 & -256;
}

// Address range: 0x1000d450 - 0x1000d463
// From class:    ConCommandBase
// Type:          virtual member function
int32_t function_1000d450(void) {
    // 0x1000d450
    int32_t result; // 0x1000d462
    if (g136 != 0) {
        // 0x1000d459
        g4 = g136;
        result = *(int32_t *)*(int32_t *)g136;
    } else {
        result = 0;
    }
    // 0x1000d462
    return result;
}

// Address range: 0x1000d470 - 0x1000d50d
int32_t function_1000d470(int32_t a1) {
    int32_t v1 = g3; // 0x1000d476
    int32_t v2 = g7; // bp-28
    int32_t v3 = g4; // esi
    g4 = a1;
    char v4; // bp-12
    int32_t v5; // bp-16
    char v6; // bp-20
    char v7; // bp-8
    int32_t v8 = _sscanf((char *)a1, "%i %i %i %i", &v6, &v5, &v4, &v7); // 0x1000d495
    if (v8 < 3) {
        // 0x1000d503
        g7 = v2;
        g3 = v1;
        return v1 & -256 & 255 | v8 & -256;
    }
    int32_t v9 = 255; // edx
    int32_t v10; // 0x1000d4a9
    if (v8 != 3) {
        // 0x1000d4a9
        v10 = v7;
        v9 = v10;
    } else {
        v10 = 255;
    }
    if (v6 > -1) {
        // 0x1000d4b7
        if (v5 < 256) {
            g4 = v4;
            if (v4 > -1) {
                if (v10 < 256) {
                    // 0x1000d4d3
                    *(char *)(v3 + 48) = v6;
                    *(char *)(v3 + 49) = (char)v5;
                    *(char *)(v3 + 50) = (char)g4;
                    *(char *)(v3 + 51) = (char)v9;
                    int128_t v11 = __asm_movd(*(int32_t *)(v3 + 48)); // 0x1000d4e2
                    *(int32_t *)(v3 + 44) = __asm_movss(__asm_cvtdq2ps(v11));
                    g7 = v2;
                    g3 = v1;
                    return v8 & -256 | 1;
                }
            }
        }
    }
    // 0x1000d4f9
    g7 = v2;
    g3 = v1;
    return v8 & -256;
}

// Address range: 0x1000d510 - 0x1000d63c
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d510(int32_t a1) {
    int32_t v1 = a1;
    int32_t v2 = g4; // 0x1000d517
    g7 = v2;
    if ((char)v2 != 0) {
        // 0x1000d529
        g4 = g117;
        if (g117 != 0) {
            int32_t * v3 = (int32_t *)g117; // 0x1000d533
            if ((char)*v3 == 0) {
                // 0x1000d541
                g4 = g117;
                return *(int32_t *)(*v3 + 152);
            }
        }
    }
    // 0x1000d55d
    g5 = a1;
    int32_t v4 = __asm_movss(__asm_movss_11(*(int32_t *)(v2 + 44))); // 0x1000d567
    int32_t v5;
    if (a1 == 0) {
        v5 = &g14;
    } else {
        v5 = a1;
    }
    // 0x1000d577
    g3 = v5;
    g4 = g7;
    int32_t v6 = function_1000d470(a1); // 0x1000d57a
    int32_t result = v6; // eax
    if ((char)v6 == 0) {
        // 0x1000d587
        function_10012dd7(a1);
        float80_t v7; // st7
        v1 = (float32_t)v7;
        int32_t v8 = (int32_t)(float32_t)v7 & 0x7f800000; // 0x1000d599
        g4 = v8;
        int32_t v9; // 0x1000d5c8
        if (v8 == 0x7f800000) {
            // 0x1000d5a7
            g4 = g7;
            Warning();
            v9 = __asm_movss(__asm_movss_11(0x7f7fffff));
            v1 = v9;
        } else {
            v9 = (float32_t)v7;
        }
        int32_t v10 = &v1; // 0x1000d5d2
        result = v10;
        g4 = g7;
        if ((char)v10 != 0) {
            int128_t v11 = __asm_movss_11(v9); // 0x1000d5de
            __asm_movsd(__asm_cvtps2pd(v11));
            int32_t v12; // bp-44
            result = function_10009a90(&v12, 32, "%f");
            g3 = &v12;
        } else {
            v1 = v9;
        }
        int128_t v13 = __asm_movss_11(v1); // 0x1000d604
        g4 = __asm_cvttss2si_12(v13);
        *(int32_t *)(g7 + 44) = __asm_movss(v13);
        *(int32_t *)(g7 + 48) = g4;
    }
    // 0x1000d615
    if ((*(int32_t *)(g7 + 20) & 0x1000) == 0) {
        int128_t v14 = __asm_movss_11(v4); // 0x1000d620
        result = *(int32_t *)(g4 + 68);
        *(int32_t *)(g8 - 4) = g4;
        *(int32_t *)g8 = __asm_movss(v14);
        *(int32_t *)(g8 - 4) = g3;
        g4 = g7;
    }
    // 0x1000d633
    return result;
}

// Address range: 0x1000d640 - 0x1000d67a
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d640(int32_t a1) {
    int32_t v1 = g4; // 0x1000d643
    char v2 = *(char *)(v1 + 52); // 0x1000d643
    int32_t v3; // 0x1000d666
    int128_t v4; // xmm0
    if (v2 == 0) {
        v3 = v1;
        goto lab_0x1000d660;
    } else {
        int128_t v5 = __asm_movss_11(*(int32_t *)(v1 + 56)); // 0x1000d64c
        v4 = v5;
        __asm_comiss(v5, *(int128_t *)a1);
        if (false || v2 == 0) {
            // 0x1000d64c
            v3 = g4;
            goto lab_0x1000d660;
        } else {
            goto lab_0x1000d656;
        }
    }
  lab_0x1000d660:;
    char v6 = *(char *)(v3 + 60); // 0x1000d660
    if (v6 == 0) {
        return a1 & -256;
    } else {
        int128_t v7 = __asm_movss_11(*(int32_t *)(v3 + 64)); // 0x1000d666
        v4 = v7;
        __asm_comiss(__asm_movss_11(*(int32_t *)a1), v7);
        if (false || v6 == 0) {
            return a1 & -256;
        } else {
            goto lab_0x1000d656;
        }
    }
    // 0x1000d674
    return a1 & -256;
  lab_0x1000d656:
    // 0x1000d656
    *(int32_t *)a1 = __asm_movss(v4);
    return a1 & -256 | 1;
}

// Address range: 0x1000d680 - 0x1000d754
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d680(int32_t a1) {
    int128_t v1 = __asm_movss_11(a1); // 0x1000d683
    int32_t v2 = g8 - 36; // 0x1000d688
    bool v3 = (llvm_ctpop_i8((char)v2) & 1) == 0; // pf
    int32_t v4; // bp-40
    int32_t v5 = &v4; // 0x1000d688
    int32_t v6 = g4; // 0x1000d68c
    g7 = v6;
    __asm_ucomiss(v1, *(int32_t *)(v6 + 44));
    int32_t v7 = (g8 & 15) > 19 ? 16 : 0; // 0x1000d692
    int32_t v8 = v2 == 0 ? 64 : 0; // 0x1000d692
    int32_t v9 = (v3 ? 4 : 0) | (int32_t)(g8 < 36) | v7 | v8; // 0x1000d692
    int32_t result; // eax
    int32_t v10 = result; // 0x1000d692
    if ((llvm_ctpop_i8((char)v9 & 68) & 1) != 0) {
        // 0x1000d74d
        return v10 & -0xff01 | 256 * (v9 | (v2 < 0 ? 128 : 0)) | 512;
    }
    // 0x1000d69c
    if ((char)g4 != 0) {
        // 0x1000d6ac
        g4 = g117;
        if (g117 != 0) {
            int32_t * v11 = (int32_t *)g117; // 0x1000d6b6
            if ((char)*v11 == 0) {
                // 0x1000d6c4
                g4 = g117;
                __asm_movss(__asm_movss_11(a1));
                return *v11;
            }
        }
    }
    // 0x1000d6e7
    g4 = g7;
    int32_t v12 = __asm_movss(__asm_movss_11(*(int32_t *)(g7 + 44))); // 0x1000d700
    int128_t v13 = __asm_movss_11(a1); // 0x1000d705
    result = __asm_cvttss2si_12(v13);
    *(int32_t *)(g7 + 44) = __asm_movss(v13);
    *(int32_t *)(g7 + 48) = result;
    if ((*(int32_t *)(g7 + 20) & 0x1000) == 0) {
        // 0x1000d718
        __asm_movsd(__asm_cvtps2pd(v13));
        g4 = v5;
        function_10009a90(&v4, 32, "%f");
        result = v5;
        __asm_movss(__asm_movss_11(v12));
        g4 = g7;
    }
    // 0x1000d74d
    return result;
}

// Address range: 0x1000d760 - 0x1000d82c
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d760(int32_t a1) {
    int32_t v1 = a1;
    g5 = a1;
    int32_t v2 = g4; // 0x1000d76b
    g7 = v2;
    int32_t result; // eax
    if (*(int32_t *)(v2 + 48) == a1) {
        // 0x1000d824
        return result;
    }
    // 0x1000d776
    int32_t v3;
    if ((char)v2 != 0) {
        // 0x1000d786
        g4 = g117;
        if (g117 != 0) {
            int32_t * v4 = (int32_t *)g117; // 0x1000d790
            if ((char)*v4 == 0) {
                // 0x1000d79e
                g4 = g117;
                return *v4;
            }
            v3 = g117;
        } else {
            v3 = 0;
        }
    } else {
        int32_t v5;
        v3 = v5;
    }
    // 0x1000d7b8
    result = v3;
    g4 = &v1;
    int128_t v6; // xmm0
    __asm_xorps(v6, v6);
    g4 = g7;
    int32_t v7 = __asm_movss(__asm_cvtsi2ss(g5)); // 0x1000d7ca
    v1 = v7;
    int128_t v8 = __asm_movss_11(v7); // 0x1000d7d1
    if ((char)result != 0) {
        // 0x1000d7da
        g5 = __asm_cvttss2si_12(v8);
    }
    int32_t v9 = __asm_movss(__asm_movss_11(*(int32_t *)(g7 + 44))); // 0x1000d7ea
    *(int32_t *)(g7 + 44) = __asm_movss(v8);
    *(int32_t *)(g7 + 48) = g5;
    if ((*(int32_t *)(g7 + 20) & 0x1000) != 0) {
        // branch -> 0x1000d824
    } else {
        // 0x1000d7f9
        int32_t v10; // bp-40
        function_10009a90(&v10, 32, "%d");
        result = &v10;
        __asm_movss(__asm_movss_11(v9));
        g4 = g7;
    }
    // 0x1000d824
    return result;
}

// Address range: 0x1000d830 - 0x1000d861
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d830(int32_t a1) {
    // 0x1000d830
    return *(int32_t *)(g4 + 56);
}

// Address range: 0x1000d870 - 0x1000d87e
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d870(void) {
    int32_t v1 = *(int32_t *)(g4 + 4); // 0x1000d873
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 48);
}

// Address range: 0x1000d880 - 0x1000d89c
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d880(int32_t a1) {
    int32_t v1 = *(int32_t *)(g4 + 4); // 0x1000d883
    g4 = v1;
    __asm_movss(__asm_movss_11(a1));
    return *(int32_t *)v1;
}

// Address range: 0x1000d8a0 - 0x1000d8ae
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d8a0(void) {
    int32_t v1 = *(int32_t *)(g4 + 4); // 0x1000d8a3
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 56);
}

// Address range: 0x1000d8b0 - 0x1000d8c5
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d8b0(int32_t a1) {
    int32_t v1 = *(int32_t *)(g4 + 4); // 0x1000d8b3
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 60);
}

// Address range: 0x1000d8d0 - 0x1000d8ea
// From class:    CDefaultAccessor
// Type:          virtual member function
int32_t function_1000d8d0(int32_t a1) {
    // 0x1000d8d0
    g4 = g117;
    return *(int32_t *)(*(int32_t *)g117 + 36) & -256 | 1;
}

// Address range: 0x1000d8f0 - 0x1000d912
// From class:    ConCommandBase
// Type:          constructor
int32_t function_1000d8f0(char a1) {
    int32_t result = g4; // 0x1000d8f8
    *(int32_t *)result = (int32_t)&g29;
    if ((a1 & 1) != 0) {
        // 0x1000d902
        _3f__3f_3_40_YAXPAX_40_Z(result);
    }
    // 0x1000d90b
    return result;
}

// Address range: 0x1000d920 - 0x1000d9b0
int32_t function_1000d920(int32_t a1) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = g4; // 0x1000d925
    int32_t v3 = *(int32_t *)(v2 + 8); // 0x1000d927
    int32_t v4; // eax
    int32_t v5; // 0x1000d97d
    int32_t v6; // 0x1000d9aa
    int32_t * v7; // 0x1000d92e
    int32_t v8; // 0x1000d934
    int32_t v9; // 0x1000d953
    if (v3 < 0) {
        v6 = &v1;
        goto lab_0x1000d9aa;
    } else {
        // 0x1000d92e
        v7 = (int32_t *)(v2 + 4);
        int32_t v10 = *v7; // 0x1000d92e
        v4 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v3 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x1000d94a
                v4 = 8;
                v11 = 8;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x1000d953
                    v9 *= 2;
                }
                goto lab_0x1000d959;
            } else {
                v5 = v11;
                goto lab_0x1000d97b;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x1000d93a
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v3) + 1) * v3; // 0x1000d941
            v9 = v13;
            goto lab_0x1000d959;
        }
    }
  lab_0x1000d9aa:
    // 0x1000d9aa
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x1000d97b:
    // 0x1000d97b
    *v7 = v5;
    int32_t v14 = *(int32_t *)0x100221e8; // 0x1000d980
    g4 = v14;
    int32_t v15 = *(int32_t *)v14; // 0x1000d986
    g4 = v15;
    int32_t result = 4 * v4; // 0x1000d98a
    if (v8 != 0) {
        // 0x1000d991
        *(int32_t *)v2 = result;
        g5 = v8;
        g7 = result;
        g2 = v1;
        return result;
    }
    int32_t v16 = *(int32_t *)(*(int32_t *)v15 + 4); // 0x1000d9a3
    g1 = v16;
    *(int32_t *)v2 = v16;
    v6 = g8;
    goto lab_0x1000d9aa;
  lab_0x1000d959:
    // 0x1000d959
    v4 = v9;
    int32_t v17; // 0x1000d9751
    if (v9 < v8) {
        if (v9 != 0) {
            v17 = v9;
            goto lab_0x1000d970;
        } else {
            if (v8 > -1) {
                v17 = v9;
                goto lab_0x1000d970;
            } else {
                // 0x1000d966
                v4 = -1;
                v5 = -1;
                goto lab_0x1000d97b;
            }
        }
    } else {
        v5 = v9;
        goto lab_0x1000d97b;
    }
  lab_0x1000d970:;
    int32_t v18; // 0x1000d975
    while (true) {
        int32_t v19 = v17 + v8; // 0x1000d970
        v18 = (v19 - (v19 >> 31)) / 2;
        if (v18 >= v8) {
            // break -> 0x1000d97b
            break;
        }
        v17 = v18;
    }
    // 0x1000d97b
    v4 = v18;
    v5 = v18;
    goto lab_0x1000d97b;
}

// Address range: 0x1000d9b0 - 0x1000da67
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000d9b0(int32_t a1, int32_t a2) {
    int32_t v1 = g4; // esi
    int32_t v2; // edi
    int32_t v3 = v2; // bp-16
    int32_t v4 = &v3; // 0x1000d9b7
    __alloca_probe_16();
    _memcpy2();
    g4 = a1;
    int32_t v5 = function_10009450(a1) + 1; // 0x1000d9dc
    v2 = v5;
    if (v5 > *(int32_t *)(v1 + 40)) {
        int32_t v6 = *(int32_t *)(v1 + 36); // 0x1000d9e7
        int32_t v7; // 0x1000d9f7
        if (v6 != 0) {
            // 0x1000d9ee
            _3f__3f_3_40_YAXPAX_40_Z(v6);
            v7 = v2;
        } else {
            v7 = v5;
        }
        // 0x1000d9f7
        *(int32_t *)(v1 + 36) = __malloc_crt(v7);
        *(int32_t *)(v1 + 40) = v2;
    }
    int32_t result = _memcpy2(); // eax
    if (*(int32_t *)(v1 + 80) > 0) {
        g4 = *(int32_t *)(v1 + 68);
        int128_t v8 = __asm_movss_11(a2); // 0x1000da21
        *(int32_t *)(g8 - 4) = g4;
        *(int32_t *)g8 = __asm_movss(v8);
        result = v1 + 24;
        *(int32_t *)(g8 - 4) = v4;
        *(int32_t *)(g8 - 8) = result;
        int32_t v9 = 1; // 0x1000da36
        while (v9 < *(int32_t *)(v1 + 80)) {
            // 0x1000da1e
            g4 = *(int32_t *)(v1 + 68);
            v8 = __asm_movss_11(a2);
            *(int32_t *)(g8 - 4) = g4;
            *(int32_t *)g8 = __asm_movss(v8);
            result = v1 + 24;
            *(int32_t *)(g8 - 4) = v4;
            *(int32_t *)(g8 - 8) = result;
            v9++;
        }
    }
    // 0x1000da3f
    g4 = g117;
    if (g117 != 0) {
        int128_t v10 = __asm_movss_11(a2); // 0x1000da49
        result = *(int32_t *)g117;
        *(int32_t *)(g8 - 4) = g117;
        *(int32_t *)g8 = __asm_movss(v10);
        *(int32_t *)(g8 - 4) = v4;
        *(int32_t *)(g8 - 8) = v1;
    }
    // 0x1000da5d
    return result;
}

// Address range: 0x1000da70 - 0x1000dad1
int32_t function_1000da70(void) {
    int32_t v1 = g4; // 0x1000da71
    *(int32_t *)(v1 + 12) = 0;
    if (*(int32_t *)(v1 + 8) >= 0) {
        // 0x1000da80
        if (g4 != 0) {
            int32_t v2 = *(int32_t *)0x100221e8; // 0x1000da86
            g4 = v2;
            g4 = *(int32_t *)v2;
            *(int32_t *)v1 = 0;
        }
        // 0x1000da9c
        *(int32_t *)(v1 + 4) = 0;
    }
    int32_t v3 = g4; // 0x1000daa7
    int32_t result = v3; // eax
    *(int32_t *)(v1 + 16) = v3;
    if (*(int32_t *)(v1 + 8) < 0) {
        // 0x1000dacf
        g7 = *(int32_t *)g8;
        return result;
    }
    int32_t v4 = result; // 0x1000daae
    if (v4 != 0) {
        int32_t v5 = *(int32_t *)0x100221e8; // 0x1000dab2
        g4 = v5;
        int32_t v6 = *(int32_t *)v5; // 0x1000dab8
        g4 = v6;
        *(int32_t *)(g8 - 4) = v4;
        result = *(int32_t *)(*(int32_t *)v6 + 20);
        *(int32_t *)v1 = 0;
    }
    // 0x1000dac8
    *(int32_t *)(v1 + 4) = 0;
    // 0x1000dacf
    g7 = *(int32_t *)g8;
    return result;
}

// Address range: 0x1000dae0 - 0x1000dae8
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000dae0(void) {
    // 0x1000dae0
    g4 -= 24;
    return function_1000d3b0((int32_t)&g169);
}

// Address range: 0x1000daf0 - 0x1000daf8
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000daf0(void) {
    // 0x1000daf0
    g4 -= 24;
    return function_1000d410();
}

// Address range: 0x1000db00 - 0x1000dc74
// From class:    ConVar
// Type:          virtual member function
int32_t function_1000db00(int32_t a1, int32_t result, int32_t a3, int32_t a4, unsigned char a5, int32_t a6, unsigned char a7, int32_t a8, int32_t a9) {
    int32_t v1 = g4; // 0x1000db07
    g7 = v1;
    *(int32_t *)(v1 + 28) = v1;
    if (result == 0) {
        // 0x1000db10
        result = *(int32_t *)0x10028750;
    }
    int128_t v2 = __asm_movss_11(a6); // 0x1000db19
    g4 = g4 & -256 | (int32_t)a7;
    *(int32_t *)(g7 + 32) = result;
    *(int32_t *)(g7 + 56) = __asm_movss(v2);
    int128_t v3 = __asm_movss_11(a8); // 0x1000db2c
    *(char *)(g7 + 52) = (char)(result & -256 | (int32_t)a5);
    *(char *)(g7 + 60) = (char)g4;
    *(int32_t *)(g7 + 64) = __asm_movss(v3);
    if (a9 != 0) {
        int32_t v4 = g7; // 0x1000db3f
        int32_t v5 = *(int32_t *)(v4 + 72); // 0x1000db3f
        g1 = v5;
        int32_t v6 = *(int32_t *)(v4 + 80); // 0x1000db43
        int32_t v7; // 0x1000db5b
        if (v6 + 1 > v5) {
            // 0x1000db4d
            g4 = v4 + 68;
            function_1000d920(v6 - v5 + 1);
            v7 = g7;
        } else {
            v7 = v4;
        }
        int32_t * v8 = (int32_t *)(v7 + 80); // 0x1000db5b
        *v8 = *v8 + 1;
        int32_t v9 = g7; // 0x1000db5e
        int32_t v10 = *(int32_t *)(v9 + 68); // 0x1000db61
        g4 = v10;
        int32_t v11 = *(int32_t *)(v9 + 80) - v6 - 1; // 0x1000db66
        *(int32_t *)(v9 + 84) = v10;
        if (v11 >= 1) {
            // 0x1000db6e
            g4 += 4 * v6;
            *(int32_t *)(g8 - 4) = 4 * v11;
            *(int32_t *)(g8 - 8) = g4;
            int32_t v12 = g4 + 4; // 0x1000db7a
            g4 = v12;
            *(int32_t *)(g8 - 12) = v12;
            _memcpy(&g169, &g169, (int32_t)&g169);
        }
        int32_t v13 = 4 * v6 + *(int32_t *)(g7 + 68); // 0x1000db89
        if (v13 != 0) {
            // 0x1000db90
            g4 = a9;
            *(int32_t *)v13 = a9;
        }
        // 0x1000db95
        g3 = *(int32_t *)g8;
    }
    int32_t v14 = *(int32_t *)(g7 + 32); // 0x1000db96
    int32_t v15 = v14; // 0x1000dba2
    unsigned char v16 = *(char *)v15; // 0x1000dba0
    int32_t v17 = (int32_t)v16 | g4 & -256; // 0x1000dba0
    g4 = v17;
    int32_t v18 = v15 + 1; // 0x1000dba2
    while (v16 != 0) {
        // 0x1000dba0
        v15 = v18;
        v16 = *(char *)v15;
        v17 = (int32_t)v16 | v17 & -256;
        g4 = v17;
        v18 = v15 + 1;
    }
    int32_t v19 = v18 - (v14 + 1) + 1; // 0x1000dba9
    *(int32_t *)(g8 - 4) = v19;
    *(int32_t *)(g7 + 40) = v19;
    result = __malloc_crt((int32_t)&g169);
    int32_t v20 = g7; // 0x1000dbb3
    g4 = *(int32_t *)(v20 + 32);
    *(int32_t *)(g8 - 4) = *(int32_t *)(v20 + 40);
    *(int32_t *)(g8 - 8) = g4;
    *(int32_t *)(g8 - 12) = result;
    *(int32_t *)(g7 + 36) = result;
    _memcpy2();
    *(int32_t *)(g8 + 12) = *(int32_t *)(g7 + 36);
    g4 = g7;
    if ((char)function_1000d470((int32_t)&g169) == 0) {
        // 0x1000dbd9
        *(int32_t *)(g8 - 4) = *(int32_t *)(g7 + 36);
        function_10012dd7((int32_t)&g169);
        float80_t v21; // st7
        *(float32_t *)(g7 + 44) = (float32_t)v21;
        int32_t v22 = 0x1000000 * (int32_t)(float32_t)v21 / 0x1000000 & 0x7f800000; // 0x1000dbee
        g4 = v22;
        if (v22 == 0x7f800000) {
            // 0x1000dbfc
            *(int32_t *)g8 = *(int32_t *)(g7 + 36);
            *(int32_t *)(g8 - 4) = a1;
            *(int32_t *)(g8 - 8) = (int32_t)"ConVar(%s) defined with infinite float value (%s)\n";
            Warning();
            *(int32_t *)(g7 + 44) = __asm_movss(__asm_movss_11(0x7f7fffff));
        }
        // 0x1000dc1c
        *(int32_t *)(g7 + 48) = __asm_cvttss2si(*(int32_t *)(g7 + 44));
    }
    // 0x1000dc24
    *(int32_t *)(g7 + 12) = a1;
    *(char *)(g7 + 8) = 0;
    int32_t v23; // 0x1000dc38
    if (a4 == 0) {
        // 0x1000dc33
        v23 = g59;
    } else {
        v23 = a4;
    }
    // 0x1000dc38
    *(int32_t *)(g7 + 16) = v23;
    result = a3;
    *(int32_t *)(g7 + 20) = a3;
    if ((result & 1) != 0) {
        // 0x1000dc56
        *(int32_t *)(g7 + 4) = 0;
    } else {
        int32_t v24 = g135; // 0x1000dc45
        g4 = v24;
        *(int32_t *)(g7 + 4) = v24;
        g135 = g7;
    }
    // 0x1000dc5d
    if (g136 == 0) {
        // branch -> 0x1000dc6f
    } else {
        int32_t v25 = *(int32_t *)(g4 + 44); // 0x1000dc68
        g4 = g7;
        result = v25;
    }
    // 0x1000dc6f
    return result;
}

// Address range: 0x1000dc80 - 0x1000dda3
// From class:    ConVar
// Type:          constructor
// Demangled:     public: __thiscall std::_Init_locks::_Init_locks()
int32_t ??0_Init_locks@std@@QAE@XZ2(void) {
    int128_t v1; // xmm0
    int128_t v2 = __asm_xorps(v1, v1); // 0x1000dc84
    g3 = 0;
    int32_t v3 = g4; // 0x1000dc8b
    g7 = v3;
    *(char *)(v3 + 8) = 0;
    *(int32_t *)(g7 + 12) = g3;
    *(int32_t *)(g7 + 16) = g3;
    *(int32_t *)(g7 + 20) = g3;
    *(int32_t *)(g7 + 4) = g3;
    *(int32_t *)(g7 + 24) = (int32_t)&g30;
    *(int32_t *)g7 = (int32_t)&g32;
    *(int32_t *)(g7 + 24) = (int32_t)&g31;
    *(int32_t *)(g7 + 68) = g3;
    *(int32_t *)(g7 + 72) = g3;
    *(int32_t *)(g7 + 76) = g3;
    *(int32_t *)(g7 + 80) = g3;
    *(int32_t *)(g7 + 84) = g3;
    int32_t v4 = g7; // 0x1000dcc1
    *(int32_t *)(v4 + 28) = v4;
    *(int32_t *)(g7 + 32) = (int32_t)&g35;
    *(char *)(g7 + 52) = (char)g3;
    *(int32_t *)(g7 + 56) = __asm_movss(v2);
    *(char *)(g7 + 60) = (char)g3;
    *(int32_t *)(g7 + 64) = __asm_movss(v2);
    *(int32_t *)(g7 + 40) = 2;
    int32_t v5 = __malloc_crt((int32_t)&g169); // 0x1000dce2
    int32_t v6 = g7; // 0x1000dce7
    g4 = *(int32_t *)(v6 + 40);
    *(int32_t *)(v6 + 36) = v5;
    _memcpy2();
    int32_t v7 = g7; // 0x1000dcf8
    g4 = v7;
    if ((char)function_1000d470(*(int32_t *)(v7 + 36)) == 0) {
        int32_t v8 = *(int32_t *)(g7 + 36); // 0x1000dd0a
        g4 = v8;
        function_10012dd7(v8);
        float80_t v9; // st7
        *(float32_t *)(g7 + 44) = (float32_t)v9;
        if (((int32_t)(float32_t)v9 & 0x7f800000) == 0x7f800000) {
            // 0x1000dd2d
            Warning();
            int128_t v10 = __asm_movss_11(0x7f7fffff); // 0x1000dd41
            *(int32_t *)(g7 + 44) = __asm_movss(v10);
        }
        int32_t v11 = __asm_cvttss2si(*(int32_t *)(g7 + 44)); // 0x1000dd51
        g4 = v11;
        *(int32_t *)(g7 + 48) = v11;
    }
    // 0x1000dd59
    *(char *)(g7 + 8) = (char)g3;
    *(int32_t *)(g7 + 12) = (int32_t)&g14;
    *(int32_t *)(g7 + 16) = g59;
    *(int32_t *)(g7 + 20) = g3;
    *(int32_t *)(g7 + 4) = g135;
    g135 = g7;
    if (g136 != g3) {
        // 0x1000dd85
        g4 = g7;
    }
    // 0x1000dd8e
    *(int32_t *)g7 = (int32_t)&g34;
    *(int32_t *)(g7 + 24) = (int32_t)&g33;
    return g7;
}

// Address range: 0x1000ddb0 - 0x1000ddb3
int32_t function_1000ddb0(void) {
    // 0x1000ddb0
    int32_t result; // eax
    return result;
}

// Address range: 0x1000ddc0 - 0x1000ddc6
int32_t function_1000ddc0(void) {
    // 0x1000ddc0
    return &g14;
}

// Address range: 0x1000ddd0 - 0x1000ddd5
int32_t function_1000ddd0(void) {
    // 0x1000ddd0
    return g1 & -256;
}

// Address range: 0x1000dde0 - 0x1000dde8
int32_t function_1000dde0(void) {
    // 0x1000dde0
    g4 -= 24;
    return function_1000ddc0();
}

// Address range: 0x1000ddf0 - 0x1000ddf8
int32_t function_1000ddf0(void) {
    // 0x1000ddf0
    g4 -= 24;
    return function_1000ddd0();
}

// Address range: 0x1000de00 - 0x1000de4e
// From class:    ConVar
// Type:          constructor
int32_t function_1000de00(char a1) {
    int32_t v1 = g4; // 0x1000de04
    g7 = v1;
    int32_t v2 = *(int32_t *)(v1 + 36); // 0x1000de06
    *(int32_t *)v1 = (int32_t)&g32;
    *(int32_t *)(g7 + 24) = (int32_t)&g31;
    if (v2 != 0) {
        // 0x1000de1a
        _3f__3f_3_40_YAXPAX_40_Z(v2);
        *(int32_t *)(g7 + 36) = 0;
    }
    // 0x1000de2a
    g4 = g7 + 68;
    function_1000da70();
    *(int32_t *)g7 = (int32_t)&g29;
    if ((a1 & 1) != 0) {
        // 0x1000de3e
        _3f__3f_3_40_YAXPAX_40_Z(g7);
    }
    // 0x1000de47
    return g7;
}

// Address range: 0x1000de50 - 0x1000de59
int32_t function_1000de50(int32_t * a1, int32_t a2) {
    // 0x1000de50
    return function_100092b0((int32_t)&g169, (int32_t)&g169);
}

// Address range: 0x1000de60 - 0x1000de65
int32_t function_1000de60(void) {
    // 0x1000de60
    return function_10009400();
}

// Address range: 0x1000de70 - 0x1000deb2
int32_t function_1000de70(int32_t * a1, int32_t * a2, int32_t a3, int32_t a4, int32_t * a5, int32_t a6, int32_t a7, int32_t a8) {
    int32_t v1 = (int32_t)a2;
    int32_t v2 = g2; // bp-4
    int32_t v3 = g7; // bp-8
    if (a1 == NULL) {
        // 0x1000deaf
        return g1;
    }
    // 0x1000de7b
    if (a2 != NULL) {
        int32_t * v4 = _memset(a1, 0, 256); // 0x1000de8b
        unsigned char v5 = *(char *)a2; // 0x1000de90
        int32_t v6 = (int32_t)v5 | (int32_t)v4 & -256; // 0x1000de90
        g1 = v6;
        if (v5 != 0) {
            // 0x1000de99
            g4 = v1;
            g4 = v1 + 1;
            *(char *)(v6 + (int32_t)a1) = 1;
            int32_t v7 = g4; // 0x1000dea8
            unsigned char v8 = *(char *)v7; // 0x1000dea8
            int32_t v9 = g1 & -256 | (int32_t)v8; // 0x1000dea8
            g1 = v9;
            while (v8 != 0) {
                // 0x1000dea0
                g4 = v7 + 1;
                *(char *)(v9 + (int32_t)a1) = 1;
                v7 = g4;
                v8 = *(char *)v7;
                v9 = g1 & -256 | (int32_t)v8;
                g1 = v9;
            }
        }
    }
    // 0x1000deaf
    g7 = v3;
    g2 = v2;
    return g1;
}

// Address range: 0x1000dec0 - 0x1000df66
int32_t function_1000dec0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    int32_t v1 = g5; // bp-12
    int32_t v2 = &v1; // 0x1000dec4
    int32_t v3 = g4; // 0x1000dec5
    int32_t v4 = *(int32_t *)(v3 + 8); // 0x1000dec7
    int32_t v5; // 0x1000df30
    int32_t v6; // 0x1000df60
    int32_t * v7; // 0x1000ded2
    int32_t v8; // 0x1000ded8
    int32_t v9; // 0x1000def7
    if (v4 < 0) {
        v6 = v2;
        goto lab_0x1000df60;
    } else {
        // 0x1000ded2
        v7 = (int32_t *)(v3 + 4);
        int32_t v10 = *v7; // 0x1000ded2
        g1 = v10;
        v8 = v10 + a1;
        g4 = v8;
        if (v4 == 0) {
            int32_t v11;
            if (v10 == 0) {
                // 0x1000deee
                g1 = 3;
                v11 = 3;
            } else {
                v11 = v10;
            }
            if (v11 < v8) {
                v9 = 2 * v11;
                while (v9 < v8) {
                    // 0x1000def7
                    v9 *= 2;
                }
                // 0x1000defd
                g1 = v9;
            } else {
                v9 = v11;
            }
        } else {
            int32_t v12 = v8 - 1; // 0x1000dede
            int32_t v13 = ((int32_t)((0x100000000 * (int64_t)(v12 >> 31) | (int64_t)v12) / (int64_t)v4) + 1) * v4; // 0x1000dee5
            g1 = v13;
            v9 = v13;
        }
        if ((v9 & 0xffff) < v8) {
            if ((int16_t)v9 != 0) {
                goto lab_0x1000df14;
            } else {
                if (v8 > 0xffff) {
                    goto lab_0x1000df14;
                } else {
                    int32_t v14 = v9 - 1; // 0x1000df11
                    g1 = v14;
                    v5 = v14;
                    goto lab_0x1000df2e;
                }
            }
        } else {
            v5 = v9;
            goto lab_0x1000df2e;
        }
    }
  lab_0x1000df60:
    // 0x1000df60
    g5 = *(int32_t *)v6;
    g7 = *(int32_t *)(v6 + 4);
    g2 = *(int32_t *)(v6 + 8);
    return g1;
  lab_0x1000df2e:
    // 0x1000df2e
    *v7 = v5;
    int32_t v15 = *(int32_t *)0x100221e8; // 0x1000df33
    g4 = v15;
    int32_t v16 = *(int32_t *)v15; // 0x1000df39
    g4 = v16;
    int32_t result = 12 * g1; // 0x1000df40
    if (v8 != 0) {
        // 0x1000df47
        *(int32_t *)v3 = result;
        g5 = v8;
        g7 = result;
        g2 = v1;
        return result;
    }
    int32_t v17 = *(int32_t *)(*(int32_t *)v16 + 4); // 0x1000df59
    g1 = v17;
    *(int32_t *)v3 = v17;
    v6 = g8;
    goto lab_0x1000df60;
  lab_0x1000df14:
    if ((v8 & 0xffff) != v8) {
        v6 = v2;
        goto lab_0x1000df60;
    } else {
        int32_t v18 = v9 + v8; // 0x1000df20
        int32_t v19 = (v18 - (v18 >> 31)) / 2; // 0x1000df25
        while ((v19 & 0xffff) < v8) {
            // 0x1000df20
            v18 = v19 + v8;
            v19 = (v18 - (v18 >> 31)) / 2;
        }
        // 0x1000df2e
        g1 = v19;
        v5 = v19;
        goto lab_0x1000df2e;
    }
}

// Address range: 0x1000df70 - 0x1000e070
int32_t function_1000df70(void) {
    int32_t v1 = g4; // 0x1000df73
    int32_t v2 = g7; // 0x1000df74
    g7 = v1;
    int16_t * v3 = (int16_t *)(v1 + 20); // 0x1000df77
    uint16_t v4 = *v3; // 0x1000df77
    int32_t result = v4; // 0x1000df77
    g4 = result;
    if (v4 != -1) {
        int32_t v5 = *(int32_t *)(v1 + 4); // 0x1000e057
        int32_t v6 = 3 * result; // 0x1000e05c
        g4 = v6;
        uint16_t v7 = *(int16_t *)((12 * result | 2) + v5); // 0x1000e05f
        g4 = (int32_t)v7 | v6 & 0x30000;
        *v3 = v7;
        *(int32_t *)(g7 + 24) = v5;
        g7 = v2;
        return result;
    }
    int16_t * v8 = (int16_t *)(v1 + 22); // 0x1000df89
    int32_t v9 = (int32_t)*v8; // 0x1000df89
    g4 = v9;
    int32_t * v10 = (int32_t *)(v1 + 8); // 0x1000df91
    int32_t v11 = *v10; // 0x1000df91
    g1 = v11;
    int32_t v12; // 0x1000df9c
    int32_t v13; // 0x1000dfd7
    if (v9 < v11) {
        int32_t v14 = (int32_t)*v8; // 0x1000df98
        g4 = v14;
        v12 = v14 + 1;
        if ((v12 & 0xffff) < v11) {
            // 0x1000dfaa
            g4 = v12;
            v13 = v11;
        } else {
            // 0x1000dfad
            g4 = 0xffff;
            v13 = v11;
            v12 = 0xffff;
        }
    } else {
        int32_t v15 = *v10; // 0x1000dfb4
        g1 = v15;
        int32_t v16 = v15 >= 0 == (v15 != 0) ? 0 : 0xffff; // 0x1000dfbf
        g4 = v16;
        v13 = v15;
        v12 = v16;
    }
    int32_t v17 = g5; // 0x1000dfcc
    int32_t v18 = v12 & 0xffff; // 0x1000dfcd
    int32_t v19 = v17 & -0x10000 | v18; // 0x1000dfcd
    g5 = v19;
    g4 = v18;
    int32_t v20; // 0x1000e047
    int32_t v21; // 0x1000e047
    if (v18 >= v13) {
        // 0x1000dfdb
        g4 = v1 + 4;
        function_1000dec0(1, v17, v2, v1, 0x10000 * v12 / 0x10000, g2);
        int16_t * v22 = (int16_t *)(g7 + 22); // 0x1000dfe5
        int32_t v23 = (int32_t)*v22; // 0x1000dfe5
        g4 = v23;
        int32_t * v24 = (int32_t *)(g7 + 8); // 0x1000dfed
        int32_t v25 = *v24; // 0x1000dfed
        int32_t v26; // 0x1000dff8
        int32_t v27; // 0x1000e032
        if (v23 < v25) {
            int32_t v28 = (int32_t)*v22; // 0x1000dff4
            g4 = v28;
            v26 = v28 + 1;
            if ((v26 & 0xffff) < v25) {
                // 0x1000e006
                g4 = v26;
                v27 = v25;
            } else {
                // 0x1000e009
                g4 = 0xffff;
                v27 = v25;
                v26 = 0xffff;
            }
        } else {
            int32_t v29 = *v24; // 0x1000e010
            int32_t v30 = v29 >= 0 == (v29 != 0) ? 0 : 0xffff; // 0x1000e01b
            g4 = v30;
            v27 = v29;
            v26 = v30;
        }
        int32_t v31 = v26 & 0xffff; // 0x1000e028
        int32_t v32 = g5 & -0x10000 | v31; // 0x1000e028
        g5 = v32;
        g4 = v31;
        if (v31 >= v27) {
            // 0x1000e036
            Error();
            v20 = g5;
            v21 = g7;
        } else {
            v20 = v32;
            v21 = g7;
        }
    } else {
        v20 = v19;
        v21 = v1;
    }
    // 0x1000e044
    *(int16_t *)(v21 + 22) = (int16_t)v20;
    *(int32_t *)(g7 + 24) = *(int32_t *)(v21 + 4);
    g7 = *(int32_t *)g8;
    return g5 & 0xffff;
}

// Address range: 0x1000e070 - 0x1000e0d2
int32_t function_1000e070(int32_t a1) {
    char v1 = g148; // 0x1000e078
    if ((v1 & 1) == 0) {
        // 0x1000e080
        g148 = v1 | 1;
        *(int16_t *)&g144 = -1;
        g145 = -1;
        g146 = -1;
    }
    if ((int16_t)a1 == -1) {
        // 0x1000e0c5
        return (int32_t)g146 | (int32_t)&g144 & -0x10000;
    }
    int32_t v2 = *(int32_t *)(g4 + 4); // 0x1000e0b1
    g4 = v2;
    int32_t v3 = v2 + 12 * (a1 & 0xffff); // 0x1000e0ba
    return (int32_t)*(int16_t *)(v3 + 4) | v3 & -0x10000;
}

// Address range: 0x1000e0e0 - 0x1000e1e2
int32_t function_1000e0e0(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // 0x1000e0e0
    uint16_t v2 = *(int16_t *)a1; // 0x1000e0e6
    int32_t v3 = g7; // 0x1000e0e9
    int32_t v4 = g5; // 0x1000e0ef
    uint16_t v5 = *(int16_t *)(a1 + 2);
    int32_t v6; // 0x1000e0fb
    int32_t v7; // 0x1000e0fb
    uint16_t v8; // 0x1000e0fe
    if (v2 != -1) {
        goto lab_0x1000e104;
    } else {
        if (v5 != -1) {
            goto lab_0x1000e104;
        } else {
            // 0x1000e0fb
            v6 = g4;
            v7 = *(int32_t *)(v6 + 32);
            g6 = v7;
            v8 = *(int16_t *)(v6 + 30);
            g5 = v8;
            goto lab_0x1000e11a;
        }
    }
  lab_0x1000e104:;
    int32_t v9 = g4; // 0x1000e108
    int32_t v10 = *(int32_t *)(v9 + 36); // 0x1000e108
    int32_t v11 = *(int32_t *)(v10 + 4 * (int32_t)v2); // 0x1000e10b
    int32_t v12 = (int32_t)v5 + 8 + v11; // 0x1000e10e
    uint16_t v13 = *(int16_t *)v12; // 0x1000e10e
    g5 = v13;
    int32_t v14 = v12 + 2; // 0x1000e117
    g6 = v14;
    v7 = v14;
    v8 = v13;
    v6 = v9;
    goto lab_0x1000e11a;
  lab_0x1000e11a:;
    uint16_t v15 = *(int16_t *)a2; // 0x1000e11d
    uint16_t v16 = *(int16_t *)(a2 + 2);
    int32_t v17; // 0x1000e1d8
    int32_t v18; // 0x1000e144
    if (v15 != -1) {
        goto lab_0x1000e13a;
    } else {
        if (v16 != -1) {
            goto lab_0x1000e13a;
        } else {
            // 0x1000e131
            v17 = *(int32_t *)(v6 + 32);
            v18 = v6 + 30;
            goto lab_0x1000e14e;
        }
    }
  lab_0x1000e13a:;
    int32_t v19 = *(int32_t *)(v6 + 36); // 0x1000e13e
    int32_t v20 = *(int32_t *)(v19 + 4 * (int32_t)v15); // 0x1000e141
    v18 = (int32_t)v16 + 8 + v20;
    v17 = v18 + 2;
    goto lab_0x1000e14e;
  lab_0x1000e14e:;
    uint16_t v21 = *(int16_t *)v18; // 0x1000e14f
    if (v8 != v21) {
        // 0x1000e1d8
        g5 = v4;
        g7 = v3;
        g2 = v1;
        return v8 < v21;
    }
    if (v7 == 0) {
        // 0x1000e15c
        g5 = v4;
        if (v17 == 0) {
            // 0x1000e174
            g7 = v3;
            g2 = v1;
            return 0;
        }
        // 0x1000e160
        g7 = v3;
        g2 = v1;
        return v17 & -256 | 1;
    }
    if (v17 == 0) {
        // 0x1000e16c
        g5 = v4;
        g7 = v3;
        g2 = v1;
        return v17 & -256 | 1;
    }
    // 0x1000e17c
    if (*(char *)(v6 + 28) != 0) {
        int32_t v22 = function_100094b0((int32_t *)v7, (char *)v17); // 0x1000e1c3
        g6 = 0;
        g5 = v4;
        g7 = v3;
        return (int32_t)(v22 < 0) | v22 & -256;
    }
    // 0x1000e182
    g4 = v7;
    uint32_t v23 = v17; // 0x1000e1af
    int32_t v24 = v7; // 0x1000e184
    int32_t v25 = v7; // 0x1000e196
    bool v26; // 0x1000e1af
    while (true) {
        unsigned char v27 = *(char *)v25; // 0x1000e184
        int32_t v28 = v24 & -256; // 0x1000e184
        g6 = (int32_t)v27 | v28;
        unsigned char v29 = *(char *)v23; // 0x1000e186
        if (v27 != v29) {
            v26 = v27 < v29;
            // break -> 0x1000e1af
            break;
        }
        if (v27 == 0) {
            // 0x1000e1a0
            g4 = 0;
            g5 = v4;
            g7 = v3;
            g2 = v1;
            return 0;
        }
        unsigned char v30 = *(char *)(v25 + 1); // 0x1000e18e
        int32_t v31 = (int32_t)v30 | v28; // 0x1000e18e
        g6 = v31;
        unsigned char v32 = *(char *)(v23 + 1); // 0x1000e191
        if (v30 != v32) {
            v26 = v30 < v32;
            // break -> 0x1000e1af
            break;
        }
        int32_t v33 = v25 + 2; // 0x1000e196
        g4 = v33;
        if (v30 == 0) {
            // 0x1000e1a0
            g4 = 0;
            g5 = v4;
            g7 = v3;
            g2 = v1;
            return 0;
        }
        v23 += 2;
        v24 = v31;
        v25 = v33;
    }
    int32_t v34 = v26; // 0x1000e1af
    uint32_t v35 = v34 + v23; // 0x1000e1af
    int32_t v36 = v26; // 0x1000e1af
    bool v37 = v26 ? v23 < v36 - v34 | v35 != -1 : v23 < v35; // 0x1000e1af
    int32_t v38 = v36 - (int32_t)!v37; // 0x1000e1b1
    g4 = 0;
    g5 = v4;
    g7 = v3;
    g2 = v1;
    return (int32_t)(v38 < 0) | v38 & -256;
}

// Address range: 0x1000e1f0 - 0x1000e250
int32_t function_1000e1f0(int32_t a1) {
    char v1 = g148; // 0x1000e1f8
    if ((v1 & 1) == 0) {
        // 0x1000e200
        g148 = v1 | 1;
        *(int16_t *)&g144 = -1;
        g145 = -1;
        g146 = -1;
    }
    if ((int16_t)a1 == -1) {
        uint16_t v2 = *(int16_t *)&g144; // 0x1000e249
        return (int32_t)v2 | (int32_t)&g144 & -0x10000;
    }
    int32_t v3 = *(int32_t *)(g4 + 4); // 0x1000e231
    g4 = v3;
    int32_t v4 = v3 + 12 * (a1 & 0xffff); // 0x1000e23a
    return (int32_t)*(int16_t *)v4 | v4 & -0x10000;
}

// Address range: 0x1000e250 - 0x1000e2b2
int32_t function_1000e250(int32_t a1) {
    char v1 = g148; // 0x1000e258
    if ((v1 & 1) == 0) {
        // 0x1000e260
        g148 = v1 | 1;
        *(int16_t *)&g144 = -1;
        g145 = -1;
        g146 = -1;
    }
    if ((int16_t)a1 == -1) {
        // 0x1000e2a5
        return (int32_t)g145 | (int32_t)&g144 & -0x10000;
    }
    int32_t v2 = *(int32_t *)(g4 + 4); // 0x1000e291
    g4 = v2;
    int32_t v3 = v2 + 12 * (a1 & 0xffff); // 0x1000e29a
    return (int32_t)*(int16_t *)(v3 + 2) | v3 & -0x10000;
}

// Address range: 0x1000e2c0 - 0x1000e3ac
int32_t function_1000e2c0(int32_t a1, int32_t * a2, int32_t * a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, char a8, int32_t a9) {
    int32_t v1 = (int32_t)a3;
    int32_t v2 = (int32_t)a2;
    int32_t v3 = g4; // 0x1000e2c7
    g3 = v3;
    g4 = v2;
    g5 = (int32_t)*(int16_t *)(v3 + 16);
    *(int16_t *)a2 = -1;
    *(char *)v1 = 0;
    int32_t v4 = g5; // 0x1000e2dc
    int32_t result = 0xffff; // 0x1000e2dc
    int32_t v5; // 0x1000e3a6
    if ((int16_t)v4 == (int16_t)result) {
        // 0x1000e2c0
        v5 = g8;
        // 0x1000e3a6
        g5 = *(int32_t *)v5;
        g2 = *(int32_t *)(v5 + 8);
        return result;
    }
    int32_t result2; // 0x1000e3a97
    while (true) {
        // 0x1000e2e6
        g4 = v2;
        *(int16_t *)a2 = (int16_t)v4;
        int32_t v6 = 4 * 3 * (v4 & 0xffff); // 0x1000e2f7
        g7 = v6;
        *(int32_t *)(g8 - 4) = *(int32_t *)(g3 + 4) + 8 + v6;
        *(int32_t *)(g8 - 8) = a1;
        g4 = g3;
        int32_t v7 = function_1000e0e0((int32_t)&g169, (int32_t)&g169); // 0x1000e304
        g4 = v1;
        int32_t v8; // 0x1000e393
        if ((char)v7 == 0) {
            // 0x1000e356
            *(char *)a3 = 0;
            char v9 = g148; // 0x1000e359
            if ((v9 & 1) == 0) {
                // 0x1000e362
                g148 = v9 | 1;
                g144 = (int16_t *)-1;
                g146 = -1;
            }
            // 0x1000e37d
            int32_t v10;
            if ((int16_t)g5 != -1) {
                // 0x1000e387
                v10 = g7 + *(int32_t *)(g3 + 4);
            } else {
                v10 = (int32_t)&g144;
            }
            // 0x1000e393
            v8 = (int32_t)*(int16_t *)(v10 + 2);
            g5 = v8;
            result2 = v10;
        } else {
            // 0x1000e310
            *(char *)a3 = 1;
            char v11 = g148; // 0x1000e313
            if ((v11 & 1) == 0) {
                // 0x1000e31c
                g148 = v11 | 1;
                g144 = (int16_t *)-1;
                g146 = -1;
            }
            // 0x1000e337
            if ((int16_t)g5 == -1) {
                int32_t v12 = (int32_t)*(int16_t *)&g144; // 0x1000e351
                g5 = v12;
                result2 = (int32_t)&g144;
                v8 = v12;
            } else {
                int32_t v13 = g7 + *(int32_t *)(g3 + 4); // 0x1000e344
                int32_t v14 = (int32_t)*(int16_t *)v13; // 0x1000e344
                g5 = v14;
                result2 = v13;
                v8 = v14;
            }
        }
        // 0x1000e397
        g4 = 0xffff;
        if (v8 == 0xffff) {
            // break -> 0x1000e3a5
            break;
        }
        v4 = v8;
    }
    // 0x1000e3a5
    g7 = *(int32_t *)g8;
    v5 = g8 + 4;
    // 0x1000e3a6
    g5 = *(int32_t *)v5;
    g2 = *(int32_t *)(v5 + 8);
    return result2;
}

// Address range: 0x1000e3b0 - 0x1000e4a4
int32_t function_1000e3b0(int32_t a1) {
    int32_t v1 = g4; // 0x1000e3ba
    int32_t v2 = function_1000e250(a1) & 0xffff; // 0x1000e3c1
    g4 = v1;
    int32_t v3 = function_1000e1f0(v2); // 0x1000e3c7
    int32_t v4 = *(int32_t *)(v1 + 4); // 0x1000e3cc
    int32_t v5 = 12 * (a1 & 0xffff); // 0x1000e3da
    *(int16_t *)((v5 | 2) + v4) = (int16_t)v3;
    g4 = v1;
    int32_t v6 = function_1000e1f0(v2); // 0x1000e3e7
    g4 = 0xffff;
    if ((int16_t)v6 != -1) {
        // 0x1000e3f6
        g4 = v1;
        int32_t v7 = function_1000e1f0(v2) & 0xffff; // 0x1000e3fe
        int32_t v8 = *(int32_t *)(v1 + 4); // 0x1000e404
        *(int16_t *)(12 * v7 + 4 + v8) = (int16_t)a1;
    }
    // 0x1000e40c
    g4 = 0xffff;
    if ((int16_t)v2 != -1) {
        // 0x1000e416
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v9 = function_1000e070((int32_t)&g169); // 0x1000e419
        g4 = v9 & 0xffff;
        int32_t v10 = *(int32_t *)(v1 + 4); // 0x1000e426
        *(int16_t *)(12 * v2 + 4 + v10) = (int16_t)v9;
    }
    int16_t * v11 = (int16_t *)(v1 + 16); // 0x1000e42e
    if ((int16_t)a1 == *v11) {
        // 0x1000e478
        *v11 = (int16_t)v2;
    } else {
        // 0x1000e434
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        *(int32_t *)(g8 - 4) = function_1000e070((int32_t)&g169) & 0xffff;
        g4 = v1;
        int32_t v12 = function_1000e1f0((int32_t)&g169); // 0x1000e442
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v13 = function_1000e070((int32_t)&g169); // 0x1000e463
        if ((int16_t)v12 != (int16_t)a1) {
            int32_t v14 = *(int32_t *)(v1 + 4); // 0x1000e468
            int32_t v15 = v13 & 0xffff; // 0x1000e46b
            g4 = 3 * v15;
            *(int16_t *)(v14 + (12 * v15 | 2)) = (int16_t)v2;
        } else {
            int32_t v16 = *(int32_t *)(v1 + 4); // 0x1000e45a
            *(int16_t *)(v16 + 12 * (v13 & 0xffff)) = (int16_t)v2;
        }
    }
    int32_t v17 = *(int32_t *)(v1 + 4); // 0x1000e47c
    g4 = v17;
    int32_t result = 3 * v2; // eax
    *(int16_t *)(12 * v2 + v17) = (int16_t)a1;
    if ((int16_t)a1 != (int16_t)0xffff) {
        int32_t v18 = *(int32_t *)(v1 + 4); // 0x1000e492
        result = v18;
        g4 = v5;
        *(int16_t *)(v5 + 4 + v18) = (int16_t)v2;
    }
    // 0x1000e49d
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x1000e4b0 - 0x1000e5a4
int32_t function_1000e4b0(int32_t a1) {
    int32_t v1 = g4; // 0x1000e4ba
    int32_t v2 = function_1000e1f0(a1) & 0xffff; // 0x1000e4c1
    g4 = v1;
    int32_t v3 = function_1000e250(v2); // 0x1000e4c7
    int32_t v4 = *(int32_t *)(v1 + 4); // 0x1000e4cc
    int32_t v5 = 12 * (a1 & 0xffff); // 0x1000e4da
    *(int16_t *)(v5 + v4) = (int16_t)v3;
    g4 = v1;
    int32_t v6 = function_1000e250(v2); // 0x1000e4e6
    g4 = 0xffff;
    if ((int16_t)v6 != -1) {
        // 0x1000e4f5
        g4 = v1;
        int32_t v7 = function_1000e250(v2) & 0xffff; // 0x1000e4fd
        int32_t v8 = *(int32_t *)(v1 + 4); // 0x1000e503
        *(int16_t *)(12 * v7 + 4 + v8) = (int16_t)a1;
    }
    // 0x1000e50b
    g4 = 0xffff;
    if ((int16_t)v2 != -1) {
        // 0x1000e515
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v9 = function_1000e070((int32_t)&g169); // 0x1000e518
        g4 = v9 & 0xffff;
        int32_t v10 = *(int32_t *)(v1 + 4); // 0x1000e525
        *(int16_t *)(12 * v2 + 4 + v10) = (int16_t)v9;
    }
    int16_t * v11 = (int16_t *)(v1 + 16); // 0x1000e52d
    if ((int16_t)a1 == *v11) {
        // 0x1000e577
        *v11 = (int16_t)v2;
    } else {
        // 0x1000e533
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        *(int32_t *)(g8 - 4) = function_1000e070((int32_t)&g169) & 0xffff;
        g4 = v1;
        int32_t v12 = function_1000e250((int32_t)&g169); // 0x1000e541
        *(int32_t *)(g8 - 4) = a1;
        g4 = v1;
        int32_t v13 = function_1000e070((int32_t)&g169); // 0x1000e563
        if ((int16_t)v12 != (int16_t)a1) {
            int32_t v14 = *(int32_t *)(v1 + 4); // 0x1000e568
            int32_t v15 = v13 & 0xffff; // 0x1000e56b
            g4 = 3 * v15;
            *(int16_t *)(v14 + 12 * v15) = (int16_t)v2;
        } else {
            int32_t v16 = *(int32_t *)(v1 + 4); // 0x1000e559
            *(int16_t *)((12 * (v13 & 0xffff) | 2) + v16) = (int16_t)v2;
        }
    }
    int32_t v17 = *(int32_t *)(v1 + 4); // 0x1000e57b
    g4 = v17;
    int32_t result = 3 * v2; // eax
    *(int16_t *)((12 * v2 | 2) + v17) = (int16_t)a1;
    if ((int16_t)a1 != (int16_t)0xffff) {
        int32_t v18 = *(int32_t *)(v1 + 4); // 0x1000e592
        result = v18;
        g4 = v5;
        *(int16_t *)(v5 + 4 + v18) = (int16_t)v2;
    }
    // 0x1000e59d
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result;
}

// Address range: 0x1000e5b0 - 0x1000e5ec
int32_t function_1000e5b0(int32_t a1) {
    // 0x1000e5b0
    g6 = 0xffff;
    if ((int16_t)a1 == -1) {
        // 0x1000e5c1
        return &g14;
    }
    int32_t v1 = g4; // 0x1000e5ca
    int32_t v2 = *(int32_t *)(v1 + 36); // 0x1000e5cd
    g4 = v2;
    int32_t v3 = 12 * (a1 & 0xffff) + 8 + *(int32_t *)(v1 + 4); // 0x1000e5d6
    int32_t v4 = (int32_t)*(int16_t *)v3; // 0x1000e5da
    g6 = v4;
    int32_t v5 = *(int32_t *)(4 * v4 + v2); // 0x1000e5e1
    g4 = v5;
    return (int32_t)*(int16_t *)(v3 + 2) + 10 + v5;
}

// Address range: 0x1000e5f0 - 0x1000e6ea
int32_t function_1000e5f0(int32_t * a1) {
    int32_t v1 = (int32_t)a1;
    int32_t v2 = g2; // 0x1000e5f0
    int32_t v3 = g3; // 0x1000e5f3
    int32_t v4 = g5; // 0x1000e5f4
    int32_t v5 = g4; // 0x1000e5f5
    g5 = v5;
    uint16_t v6 = *(int16_t *)(v5 + 16); // 0x1000e5f7
    int32_t result = v6; // 0x1000e5f7
    g3 = result;
    if (v6 == -1) {
        // 0x1000e6e1
        g5 = v4;
        g3 = v3;
        g2 = v2;
        return result;
    }
    int32_t v7 = g7; // bp-16
    int32_t v8 = &v7; // 0x1000e624
    int32_t v9; // 0x1000e6d9
    int32_t v10; // 0x1000e682
    int32_t v11; // 0x1000e6d99
    while (true) {
        int32_t v12 = 12 * (result & 0xffff); // 0x1000e61e
        g7 = v12;
        *(int32_t *)(v8 - 4) = v12 + 8 + *(int32_t *)(v5 + 4);
        *(int32_t *)(v8 - 8) = v1;
        g4 = g5;
        int32_t v13 = function_1000e0e0((int32_t)&g169, (int32_t)&g169); // 0x1000e628
        int32_t v14; // 0x1000e6c5
        if ((char)v13 == 0) {
            // 0x1000e674
            *(int32_t *)(g8 - 4) = v1;
            *(int32_t *)(g8 - 8) = *(int32_t *)(g5 + 4) + 8 + g7;
            g4 = g5;
            v10 = function_1000e0e0((int32_t)&g169, (int32_t)&g169);
            if ((char)v10 == 0) {
                // break -> 0x1000e674
                break;
            }
            char v15 = g148; // 0x1000e68b
            if ((v15 & 1) == 0) {
                // 0x1000e694
                g148 = v15 | 1;
                g144 = (int16_t *)-1;
                g146 = -1;
            }
            // 0x1000e6af
            int32_t v16;
            if ((int16_t)g3 != -1) {
                // 0x1000e6b9
                v16 = g7 + *(int32_t *)(g5 + 4);
            } else {
                v16 = (int32_t)&g144;
            }
            // 0x1000e6c5
            v14 = (int32_t)*(int16_t *)(v16 + 2);
            g3 = v14;
            v11 = v16;
        } else {
            char v17 = g148; // 0x1000e631
            if ((v17 & 1) == 0) {
                // 0x1000e63a
                g148 = v17 | 1;
                g144 = (int16_t *)-1;
                g146 = -1;
            }
            // 0x1000e655
            g4 = 0xffff;
            if ((int16_t)g3 == -1) {
                int32_t v18 = (int32_t)*(int16_t *)&g144; // 0x1000e66f
                g3 = v18;
                v11 = (int32_t)&g144;
                v14 = v18;
            } else {
                int32_t v19 = g7 + *(int32_t *)(g5 + 4); // 0x1000e662
                int32_t v20 = (int32_t)*(int16_t *)v19; // 0x1000e662
                g3 = v20;
                v11 = v19;
                v14 = v20;
            }
        }
        // 0x1000e6c9
        g4 = 0xffff;
        if (v14 == 0xffff) {
            v9 = v14;
            goto lab_0x1000e6d7;
        }
        // 0x1000e6c9
        v8 = g8;
        result = v14;
        v5 = g5;
    }
    // 0x1000e674
    v11 = v10;
    v9 = g3;
  lab_0x1000e6d7:
    // 0x1000e6d7
    g5 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return v9 & 0xffff | v11 & -0x10000;
}

// Address range: 0x1000e6f0 - 0x1000e7a2
int32_t function_1000e6f0(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // bp-4
    int32_t v2 = g4; // 0x1000e6f3
    int32_t v3 = g7; // bp-12
    uint16_t v4 = *(int16_t *)(v2 + 22); // 0x1000e6f7
    g4 = v4;
    int32_t result = 0xffff; // eax
    if (v4 == -1) {
        // 0x1000e79d
        g7 = *(int32_t *)(int32_t)&v3;
        return 0xffff;
    }
    int32_t v5 = *(int32_t *)(v2 + 8); // 0x1000e70b
    int32_t v6 = v5 >= 0 == (v5 != 0) ? 0 : 0xffff; // 0x1000e715
    if (v5 >= 0 == (v5 != 0)) {
        while (true) {
            int32_t v7 = v6 & 0xffff; // 0x1000e721
            int32_t v8; // 0x1000e769
            if (v7 < *(int32_t *)(v2 + 8)) {
                if ((int16_t)v6 <= v4) {
                    // 0x1000e732
                    *(int32_t *)(g8 - 4) = v6;
                    g4 = v2;
                    int32_t v9 = function_1000e1f0(v6); // 0x1000e738
                    int32_t v10 = v6; // 0x1000e73d
                    result = (int32_t)((int16_t)v9 != (int16_t)v10) | v9 & -256;
                    if ((int16_t)v9 != (int16_t)v10) {
                        uint16_t v11 = *(int16_t *)(v2 + 20); // 0x1000e74a
                        g4 = g4 & -0x10000 | (int32_t)v11;
                        int32_t v12 = 12 * v7; // 0x1000e753
                        result = v12;
                        *(int16_t *)(*(int32_t *)(v2 + 4) + (v12 | 2)) = v11;
                        int32_t v13 = *(int32_t *)(v2 + 4); // 0x1000e75a
                        *(int16_t *)(result + v13) = (int16_t)v6;
                        *(int16_t *)(v2 + 20) = (int16_t)v6;
                        v8 = v6;
                    } else {
                        v8 = v10;
                    }
                } else {
                    v8 = v6;
                }
            } else {
                v8 = v6;
            }
            uint16_t v14 = *(int16_t *)(v2 + 22); // 0x1000e765
            g4 = v14;
            if ((int16_t)v8 == v14) {
                // break -> 0x1000e794
                break;
            }
            int32_t v15 = v6 + 1 & 0xffff; // 0x1000e772
            result = v15;
            int32_t v16 = v7 + 1; // 0x1000e779
            int32_t v17; // 0x1000e78b
            if (v15 >= *(int32_t *)(v2 + 8)) {
                // 0x1000e781
                v17 = 0xffff;
            } else {
                v17 = v16;
            }
            if ((int16_t)v17 == -1) {
                // break -> 0x1000e794
                break;
            }
            v6 = v17;
            v4 = v14;
        }
        // 0x1000e794
        g3 = *(int32_t *)g8;
    }
    // 0x1000e795
    *(int32_t *)(v2 + 16) = 0xffff;
    // 0x1000e79d
    g7 = *(int32_t *)(g8 + 4);
    g2 = v1;
    return result;
}

// Address range: 0x1000e7b0 - 0x1000ed58
int32_t function_1000e7b0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1 = g4; // 0x1000e7b3
    g7 = v1;
    int32_t v2;
    int32_t v3;
    int32_t v4; // 0x1000ecd0
    int32_t v5; // 0x1000ed3c
    int32_t v6; // 0x1000ed3c36
    if ((int16_t)a1 != *(int16_t *)(v1 + 16)) {
        v4 = v1;
        while (true) {
          lab_0x1000e7c6:;
            char v7 = g148; // 0x1000e7c6
            int32_t v8 = v7; // 0x1000e7c6
            int32_t v9; // 0x1000e7cf
            if ((v7 & 1) == 0) {
                // 0x1000e7cf
                v9 = v8 | 1;
                g148 = v9;
                g144 = (int16_t *)-1;
                g146 = -1;
            } else {
                v9 = v8;
            }
            // 0x1000e7eb
            g4 = 0xffff;
            int32_t v10;
            if ((int16_t)a1 != -1) {
                int32_t v11 = a1 & 0xffff; // 0x1000e7f5
                g4 = v11;
                v10 = *(int32_t *)(v4 + 4) + 12 * v11;
            } else {
                v10 = (int32_t)&g144;
            }
            // 0x1000e808
            g4 = v10;
            uint16_t v12 = *(int16_t *)(v10 + 4); // 0x1000e808
            int32_t v13 = v12; // 0x1000e808
            g4 = v13;
            int32_t v14; // 0x1000e82a
            if ((v9 & 1) == 0) {
                // 0x1000e810
                *(int16_t *)&g144 = -1;
                g145 = -1;
                g146 = -1;
                v14 = v9 | 1;
                g148 = v14;
                *(int16_t *)&g147 = 1;
            } else {
                v14 = v9;
            }
            // 0x1000e83e
            int32_t v15;
            if (v12 != -1) {
                // 0x1000e848
                v15 = *(int32_t *)(v4 + 4) + 12 * v13;
            } else {
                v15 = (int32_t)&g144;
            }
            // 0x1000e858
            g4 = v15;
            if (*(int16_t *)(v15 + 6) != 0) {
                v6 = v4;
                // break -> 0x1000ed3b
                break;
            }
            int32_t v16; // 0x1000e867
            if ((v14 & 1) == 0) {
                // 0x1000e867
                v16 = v14 | 1;
                g148 = v16;
                g144 = (int16_t *)-1;
                g146 = -1;
            } else {
                v16 = v14;
            }
            // 0x1000e883
            g4 = 0xffff;
            int32_t v17;
            if ((int16_t)a1 != -1) {
                int32_t v18 = a1 & 0xffff; // 0x1000e88d
                g4 = v18;
                v17 = *(int32_t *)(v4 + 4) + 12 * v18;
            } else {
                v17 = (int32_t)&g144;
            }
            // 0x1000e8a0
            g4 = v17;
            uint16_t v19 = *(int16_t *)(v17 + 4); // 0x1000e8a0
            int32_t v20 = v19; // 0x1000e8a0
            int32_t v21; // 0x1000e8ab
            if ((v16 & 1) == 0) {
                // 0x1000e8ab
                v21 = v16 | 1;
                g148 = v21;
                g144 = (int16_t *)-1;
                g146 = -1;
            } else {
                v21 = v16;
            }
            // 0x1000e8c7
            int32_t v22;
            if (v19 != -1) {
                // 0x1000e8d1
                v22 = *(int32_t *)(v4 + 4) + 12 * v20;
            } else {
                v22 = (int32_t)&g144;
            }
            // 0x1000e8e4
            g4 = v22;
            uint16_t v23 = *(int16_t *)(v22 + 4); // 0x1000e8e4
            int32_t v24 = v23; // 0x1000e8e4
            g4 = v24;
            int32_t v25; // 0x1000e906
            if ((v21 & 1) == 0) {
                // 0x1000e8ec
                *(int16_t *)&g144 = -1;
                g145 = -1;
                g146 = -1;
                v25 = v21 | 1;
                g148 = v25;
                *(int16_t *)&g147 = 1;
            } else {
                v25 = v21;
            }
            // 0x1000e91a
            int32_t v26;
            if (v19 != -1) {
                // 0x1000e924
                v26 = *(int32_t *)(v4 + 4) + 12 * v20;
            } else {
                v26 = (int32_t)&g144;
            }
            uint16_t v27 = *(int16_t *)(v26 + 4); // 0x1000e937
            int32_t v28; // 0x1000e959
            if ((v25 & 1) == 0) {
                // 0x1000e93f
                *(int16_t *)&g144 = -1;
                g145 = -1;
                g146 = -1;
                v28 = v25 | 1;
                g148 = v28;
                *(int16_t *)&g147 = 1;
            } else {
                v28 = v25;
            }
            // 0x1000e96d
            int32_t v29;
            if (v27 != -1) {
                // 0x1000e977
                v29 = *(int32_t *)(v4 + 4) + 12 * (int32_t)v27;
            } else {
                v29 = (int32_t)&g144;
            }
            // 0x1000e987
            if (*(int16_t *)v29 != v19) {
                int32_t v30; // 0x1000eb74
                if ((v28 & 1) == 0) {
                    // 0x1000eb5a
                    *(int16_t *)&g144 = -1;
                    g145 = -1;
                    g146 = -1;
                    v30 = v28 | 1;
                    g148 = v30;
                    *(int16_t *)&g147 = 1;
                } else {
                    v30 = v28;
                }
                // 0x1000eb88
                int32_t v31;
                if (v23 != -1) {
                    // 0x1000eb92
                    v31 = *(int32_t *)(v4 + 4) + 12 * v24;
                } else {
                    v31 = (int32_t)&g144;
                }
                uint16_t v32 = *(int16_t *)v31; // 0x1000eba4
                int32_t v33 = v32; // 0x1000eba4
                int32_t v34; // 0x1000ebc5
                if ((v30 & 1) == 0) {
                    // 0x1000ebab
                    *(int16_t *)&g144 = -1;
                    g145 = -1;
                    g146 = -1;
                    v34 = v30 | 1;
                    g148 = v34;
                    *(int16_t *)&g147 = 1;
                } else {
                    v34 = v30;
                }
                // 0x1000ebd9
                int32_t v35; // 0x1000ebf8
                if (v32 == -1) {
                    // 0x1000ebf3
                    v35 = (int32_t)&g144;
                } else {
                    // 0x1000ebe3
                    v35 = *(int32_t *)(v4 + 4) + 12 * v33;
                }
                // 0x1000ebf8
                if (*(int16_t *)(v35 + 6) != 0) {
                    int32_t v36; // 0x1000ec58
                    if ((v34 & 1) == 0) {
                        // 0x1000ec3e
                        *(int16_t *)&g144 = -1;
                        g145 = -1;
                        g146 = -1;
                        v36 = v34 | 1;
                        g148 = v36;
                        *(int16_t *)&g147 = 1;
                    } else {
                        v36 = v34;
                    }
                    int16_t v37 = a1; // 0x1000ec74
                    int32_t v38; // 0x1000ec8f
                    if (v37 == -1) {
                        // 0x1000ec8a
                        v38 = (int32_t)&g144;
                    } else {
                        // 0x1000ec79
                        v38 = *(int32_t *)(v4 + 4) + 12 * (a1 & 0xffff);
                    }
                    uint16_t v39 = *(int16_t *)(v38 + 4); // 0x1000ec8f
                    if ((v36 & 1) == 0) {
                        // 0x1000ec97
                        g148 = v36 | 1;
                        *(int16_t *)&g144 = -1;
                        g145 = -1;
                        g146 = -1;
                        *(int16_t *)&g147 = 1;
                    }
                    // 0x1000ecc1
                    int32_t v40;
                    if (v39 != -1) {
                        // 0x1000eccb
                        v40 = *(int32_t *)(v4 + 4) + 12 * (int32_t)v39;
                    } else {
                        v40 = (int32_t)&g144;
                    }
                    // 0x1000ecdd
                    int32_t v41;
                    int32_t v42; // 0x1000ed0c
                    int32_t v43; // 0x1000ecf8
                    if (*(int16_t *)v40 == v37) {
                        // 0x1000ece2
                        *(int32_t *)(g8 - 4) = v20;
                        g4 = g7;
                        function_1000e4b0(v20);
                        *(int32_t *)(g8 - 4) = g5;
                        g4 = g7;
                        v43 = function_1000e070((int32_t)&g169) & 0xffff;
                        *(int32_t *)(g8 - 4) = v43;
                        g4 = g7;
                        g4 = function_1000e070((int32_t)&g169) & 0xffff;
                        v42 = g7;
                        v41 = v20;
                    } else {
                        v42 = v4;
                        v43 = v20;
                        v41 = a1;
                    }
                    // 0x1000ed06
                    *(int16_t *)(12 * (v43 & 0xffff) + 6 + *(int32_t *)(v42 + 4)) = 1;
                    int32_t v44 = g4; // 0x1000ed19
                    *(int32_t *)(g8 - 4) = v44;
                    g4 = g7;
                    int32_t v45 = 3 * (v44 & 0xffff); // 0x1000ed27
                    *(int16_t *)(*(int32_t *)(g7 + 4) + 6 + 4 * v45) = (int16_t)0;
                    function_1000e3b0((int32_t)&g169);
                    v2 = v41;
                    goto lab_0x1000ed31;
                } else {
                    // 0x1000ebff
                    *(int16_t *)(12 * v20 + 6 + *(int32_t *)(v4 + 4)) = 1;
                    v3 = v33;
                    goto lab_0x1000ec14;
                }
            } else {
                int32_t v46; // 0x1000e9ae
                if ((v28 & 1) == 0) {
                    // 0x1000e994
                    *(int16_t *)&g144 = -1;
                    g145 = -1;
                    g146 = -1;
                    v46 = v28 | 1;
                    g148 = v46;
                    *(int16_t *)&g147 = 1;
                } else {
                    v46 = v28;
                }
                // 0x1000e9c2
                int32_t v47;
                if (v23 != -1) {
                    // 0x1000e9cc
                    v47 = *(int32_t *)(v4 + 4) + 12 * v24;
                } else {
                    v47 = (int32_t)&g144;
                }
                uint16_t v48 = *(int16_t *)(v47 + 2); // 0x1000e9de
                int32_t v49 = v48; // 0x1000e9de
                int32_t v50; // 0x1000ea03
                if ((v46 & 1) == 0) {
                    // 0x1000e9e9
                    *(int16_t *)&g144 = -1;
                    g145 = -1;
                    g146 = -1;
                    v50 = v46 | 1;
                    g148 = v50;
                    *(int16_t *)&g147 = 1;
                } else {
                    v50 = v46;
                }
                // 0x1000ea17
                int32_t v51; // 0x1000ea37
                if (v48 == -1) {
                    // 0x1000ea32
                    v51 = (int32_t)&g144;
                } else {
                    // 0x1000ea21
                    v51 = *(int32_t *)(v4 + 4) + 12 * v49;
                }
                // 0x1000ea37
                if (*(int16_t *)(v51 + 6) != 0) {
                    int32_t v52; // 0x1000ea77
                    if ((v50 & 1) == 0) {
                        // 0x1000ea5d
                        *(int16_t *)&g144 = -1;
                        g145 = -1;
                        g146 = -1;
                        v52 = v50 | 1;
                        g148 = v52;
                        *(int16_t *)&g147 = 1;
                    } else {
                        v52 = v50;
                    }
                    int16_t v53 = a1; // 0x1000ea93
                    int32_t v54; // 0x1000eaae
                    if (v53 == -1) {
                        // 0x1000eaa9
                        v54 = (int32_t)&g144;
                    } else {
                        // 0x1000ea98
                        v54 = *(int32_t *)(v4 + 4) + 12 * (a1 & 0xffff);
                    }
                    uint16_t v55 = *(int16_t *)(v54 + 4); // 0x1000eaae
                    if ((v52 & 1) == 0) {
                        // 0x1000eab6
                        g148 = v52 | 1;
                        *(int16_t *)&g144 = -1;
                        g145 = -1;
                        g146 = -1;
                        *(int16_t *)&g147 = 1;
                    }
                    // 0x1000eae0
                    int32_t v56;
                    if (v55 != -1) {
                        // 0x1000eaea
                        v56 = *(int32_t *)(v4 + 4) + 12 * (int32_t)v55;
                    } else {
                        v56 = (int32_t)&g144;
                    }
                    // 0x1000eafc
                    int32_t v57;
                    int32_t v58; // 0x1000eb2c
                    int32_t v59; // 0x1000eb18
                    if (*(int16_t *)(v56 + 2) == v53) {
                        // 0x1000eb02
                        *(int32_t *)(g8 - 4) = v20;
                        g4 = g7;
                        function_1000e3b0(v49);
                        *(int32_t *)(g8 - 4) = g5;
                        g4 = g7;
                        v59 = function_1000e070((int32_t)&g169) & 0xffff;
                        *(int32_t *)(g8 - 4) = v59;
                        g4 = g7;
                        g4 = function_1000e070((int32_t)&g169) & 0xffff;
                        v58 = g7;
                        v57 = v20;
                    } else {
                        v58 = v4;
                        v59 = v20;
                        v57 = a1;
                    }
                    // 0x1000eb26
                    *(int16_t *)(12 * (v59 & 0xffff) + 6 + *(int32_t *)(v58 + 4)) = 1;
                    int32_t v60 = g4; // 0x1000eb39
                    *(int32_t *)(g8 - 4) = v60;
                    g4 = g7;
                    int32_t v61 = 3 * (v60 & 0xffff); // 0x1000eb47
                    *(int16_t *)(*(int32_t *)(g7 + 4) + 6 + 4 * v61) = (int16_t)0;
                    function_1000e4b0((int32_t)&g169);
                    v2 = v57;
                    goto lab_0x1000ed31;
                } else {
                    // 0x1000ea3e
                    *(int16_t *)(12 * v20 + 6 + *(int32_t *)(v4 + 4)) = 1;
                    v3 = v49 & 0xffff;
                    goto lab_0x1000ec14;
                }
            }
        }
      lab_0x1000ed3b:
        // 0x1000ed3b
        v5 = v6;
    } else {
        v5 = v1;
    }
    int32_t v62 = (int32_t)*(int16_t *)(v5 + 16); // 0x1000ed3c
    g4 = 3 * v62;
    *(int16_t *)(*(int32_t *)(v5 + 4) + 6 + 12 * v62) = 1;
    g3 = *(int32_t *)g8;
    return 1;
  lab_0x1000ed31:;
    int32_t v63 = g7; // 0x1000ed31
    if ((int16_t)g3 == *(int16_t *)(v63 + 16)) {
        v6 = v63;
        // break -> 0x1000ed3b
        goto lab_0x1000ed3b;
    }
    v4 = v63;
    a1 = v2;
    goto lab_0x1000e7c6;
  lab_0x1000ec14:
    // 0x1000ec14
    *(int16_t *)(12 * v3 + 6 + *(int32_t *)(g7 + 4)) = (int16_t)1;
    int32_t v64 = g4; // 0x1000ec21
    g3 = v64;
    *(int16_t *)(12 * v64 + 6 + *(int32_t *)(g7 + 4)) = 0;
    v2 = g3;
    goto lab_0x1000ed31;
}

// Address range: 0x1000ed60 - 0x1000edb5
int32_t function_1000ed60(int32_t result, int32_t a2) {
    int32_t v1 = a2;
    int32_t v2 = g7; // bp-8
    int32_t v3 = g4; // 0x1000ed64
    g7 = v3;
    g4 = a2;
    if (a2 == 0) {
        // 0x1000ed6d
        g4 = 0xffff;
        *(int16_t *)result = -1;
        g7 = v2;
        return result;
    }
    // 0x1000ed7d
    *(int32_t *)(v3 + 32) = a2;
    int32_t v4;
    if (*(char *)(v3 + 28) == 0) {
        // 0x1000ed8d
        v4 = function_1000f200(v2);
    } else {
        // 0x1000ed86
        v4 = function_1000f240(v2);
    }
    int32_t v5 = &v1; // bp-12
    int32_t v6 = g7; // 0x1000ed96
    g4 = v6;
    *(int16_t *)(v6 + 30) = (int16_t)v4;
    v1 = -1;
    int32_t v7 = function_1000e5f0((int32_t *)v5); // 0x1000eda3
    g4 = result;
    *(int16_t *)result = (int16_t)v7;
    g7 = v5;
    g2 = v2;
    return g4;
}

// Address range: 0x1000edc0 - 0x1000ee38
int32_t function_1000edc0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = *(int32_t *)(g4 + 4); // 0x1000edc3
    int32_t v3 = g7; // 0x1000edc6
    g7 = a1;
    int32_t v4 = v2 + 12 * (a1 & 0xffff); // 0x1000edd0
    int32_t v5 = v2 & -0x10000 | a2 & 0xffff; // edx
    int32_t v6 = g5; // bp-12
    *(int16_t *)(v4 + 2) = -1;
    *(int16_t *)v4 = (int16_t)0xffff;
    g5 = 0;
    *(int16_t *)(v4 + 4) = (int16_t)v5;
    *(int16_t *)(v4 + 6) = (int16_t)g5;
    int32_t v7; // bp-16
    if ((int16_t)v5 == -1) {
        int32_t v8 = g7; // 0x1000ee28
        v7 = v8;
        *(int16_t *)(g4 + 16) = (int16_t)v8;
        int32_t result = function_1000e7b0(v7, v6, v3, v1); // 0x1000ee2d
        g5 = v7;
        g7 = v6;
        return result;
    }
    int32_t v9 = *(int32_t *)(g4 + 4); // 0x1000ee02
    int32_t v10 = g7; // 0x1000ee17
    v7 = v10;
    int16_t v11 = v10; // 0x1000ee18
    int32_t v12 = 12 * (v5 & 0xffff); // 0x1000ee18
    if ((char)a3 == 0) {
        // 0x1000ee17
        *(int16_t *)((v12 | 2) + v9) = v11;
        int32_t result2 = function_1000e7b0(v7, v6, v3, v1); // 0x1000ee1d
        g5 = v7;
        g7 = v6;
        return result2;
    }
    // 0x1000ee07
    *(int16_t *)(v9 + v12) = v11;
    int32_t result3 = function_1000e7b0(v7, v6, v3, v1); // 0x1000ee0c
    g5 = v7;
    g7 = v6;
    return result3;
}

// Address range: 0x1000ee40 - 0x1000eeb3
int32_t function_1000ee40(int32_t a1) {
    int32_t v1 = g7; // 0x1000ee41
    g7 = g4;
    function_1000e6f0(g5, v1);
    int32_t result = 0xffff; // eax
    int32_t v2 = 0; // ebx
    *(int16_t *)(g7 + 20) = -1;
    if (*(int32_t *)(g7 + 12) >= v2) {
        int32_t * v3 = (int32_t *)(g7 + 4); // 0x1000ee5a
        int32_t v4 = *v3; // 0x1000ee5a
        result = v4;
        if (v4 != v2) {
            int32_t v5 = *(int32_t *)0x100221e8; // 0x1000ee61
            g4 = v5;
            int32_t v6 = *(int32_t *)v5; // 0x1000ee67
            g4 = v6;
            result = *(int32_t *)(*(int32_t *)v6 + 20);
            *v3 = v2;
        }
        // 0x1000ee74
        *(int32_t *)(g7 + 8) = v2;
    }
    // 0x1000ee77
    g4 = 0xffff;
    int32_t v7 = 0; // edi
    *(int16_t *)(g7 + 22) = -1;
    int32_t v8; // 0x1000eeac
    if (*(int32_t *)(g7 + 48) > v2) {
        int32_t v9 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000ee96
        g4 = v9;
        int32_t v10 = *(int32_t *)(g7 + 36); // 0x1000ee98
        result = *(int32_t *)(*(int32_t *)v9 + 20);
        int32_t v11 = g8 - 4; // 0x1000eea3
        *(int32_t *)v11 = *(int32_t *)(v10 + 4 * v7);
        int32_t v12 = v7 + 1; // 0x1000eea6
        while (v12 < *(int32_t *)(g7 + 48)) {
            // 0x1000ee90
            v9 = *(int32_t *)*(int32_t *)0x100221e8;
            g4 = v9;
            v10 = *(int32_t *)(g7 + 36);
            result = *(int32_t *)(*(int32_t *)v9 + 20);
            v11 -= 4;
            *(int32_t *)v11 = *(int32_t *)(v10 + 4 * v12);
            v12++;
        }
        // 0x1000eeac
        v8 = v11;
    } else {
        // 0x1000ee77
        v8 = g8;
    }
    // 0x1000eeac
    g5 = *(int32_t *)v8;
    *(int32_t *)(g7 + 48) = v2;
    g7 = *(int32_t *)g8;
    g3 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x1000eec0 - 0x1000ef24
int32_t function_1000eec0(void) {
    int32_t v1 = g7; // 0x1000eec0
    g7 = g4;
    function_1000e6f0(g5, v1);
    int32_t result = 0xffff; // eax
    int32_t v2 = 0; // edi
    *(int16_t *)(g7 + 20) = -1;
    if (*(int32_t *)(g7 + 12) >= v2) {
        int32_t * v3 = (int32_t *)(g7 + 4); // 0x1000eed9
        int32_t v4 = *v3; // 0x1000eed9
        result = v4;
        if (v4 != v2) {
            int32_t v5 = *(int32_t *)0x100221e8; // 0x1000eee0
            g4 = v5;
            int32_t v6 = *(int32_t *)v5; // 0x1000eee6
            g4 = v6;
            result = *(int32_t *)(*(int32_t *)v6 + 20);
            *v3 = v2;
        }
        // 0x1000eef3
        *(int32_t *)(g7 + 8) = v2;
    }
    // 0x1000eef6
    g4 = 0xffff;
    *(int16_t *)(g7 + 22) = -1;
    if (*(int32_t *)(g7 + 12) >= v2) {
        int32_t v7 = *(int32_t *)(g7 + 4); // 0x1000ef04
        result = v7;
        if (v7 != v2) {
            int32_t v8 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000ef11
            g4 = v8;
            *(int32_t *)(g8 - 4) = v7;
            result = *(int32_t *)(*(int32_t *)v8 + 20);
            *(int32_t *)(g7 + 4) = v2;
        }
        // 0x1000ef1e
        *(int32_t *)(g7 + 8) = v2;
    }
    // 0x1000ef21
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x1000ef30 - 0x1000ef48
int32_t function_1000ef30(void) {
    int32_t v1 = g7; // 0x1000ef30
    g7 = g4;
    function_1000ee40(v1);
    g4 = g7 + 36;
    function_1000da70();
    g4 = g7;
    g7 = v1;
    return function_1000eec0();
}

// Address range: 0x1000ef50 - 0x1000efb7
int32_t function_1000ef50(int32_t a1, int32_t a2) {
    int32_t v1 = g2; // 0x1000ef50
    int32_t v2 = v1; // bp-4
    g2 = &v2;
    int32_t v3 = g7; // 0x1000ef5a
    g7 = g4;
    int32_t v4 = 0xffff; // bp-12
    char v5 = 0; // bp-8
    function_1000e2c0(a1, &v4, (int32_t *)&v5, g5, v3, g3, 0xffff, 0, v1);
    g4 = g7;
    int32_t v6 = function_1000df70() & 0xffff; // 0x1000ef83
    g5 = v6;
    g4 = g7;
    function_1000edc0(v6, v4, (int32_t)v5);
    g6 = *(int32_t *)(g7 + 4);
    int16_t * v7 = (int16_t *)(g7 + 18); // 0x1000ef96
    *v7 = *v7 + 1;
    g4 = 3 * g5;
    int32_t v8 = 12 * g5 + 8 + g6; // 0x1000ef9f
    if (v8 != 0) {
        int32_t v9 = *(int32_t *)g3; // 0x1000efa7
        g4 = v9;
        *(int32_t *)v8 = v9;
    }
    // 0x1000efab
    g2 = v2;
    return g5 & 0xffff | v8 & -0x10000;
}

// Address range: 0x1000efc0 - 0x1000f02b
int32_t function_1000efc0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t result = g4; // 0x1000efc7
    g4 = a1;
    int32_t v1 = 0; // edi
    *(int32_t *)(result + 4) = 0;
    *(int32_t *)(result + 8) = a2;
    *(int32_t *)(result + 12) = g4;
    if (a2 != v1) {
        int32_t v2 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000efe2
        g4 = v2;
        *(int32_t *)(result + 4) = *(int32_t *)(*(int32_t *)v2 + 4);
    }
    // 0x1000eff6
    *(char *)(result + 28) = (char)a3;
    *(int32_t *)(result + 16) = 0xffff;
    *(int32_t *)(result + 20) = -1;
    *(int32_t *)(result + 24) = *(int32_t *)(result + 4);
    *(int32_t *)(result + 36) = v1;
    *(int32_t *)(result + 40) = v1;
    *(int32_t *)(result + 48) = v1;
    *(int32_t *)(result + 52) = v1;
    g5 = *(int32_t *)g8;
    *(int32_t *)(result + 44) = 8;
    g7 = *(int32_t *)g8;
    g2 = *(int32_t *)(g8 + 4);
    return result;
}

// Address range: 0x1000f030 - 0x1000f1f5
int32_t function_1000f030(char a1, int32_t a2) {
    int32_t v1 = a2;
    int32_t v2 = g3; // 0x1000f036
    int32_t v3 = g7; // 0x1000f037
    g7 = a2;
    int32_t v4 = g4; // 0x1000f03b
    g3 = v4;
    if (a2 == 0) {
        int32_t result = a1; // 0x1000f041
        g4 = 0xffff;
        g7 = v3;
        *(int16_t *)result = -1;
        g3 = v2;
        return result;
    }
    // 0x1000f054
    *(int32_t *)(v4 + 32) = a2;
    g4 = a2;
    int32_t v5;
    if (*(char *)(v4 + 28) == 0) {
        // 0x1000f066
        v5 = function_1000f200(v3);
    } else {
        // 0x1000f05f
        v5 = function_1000f240(v3);
    }
    // 0x1000f06b
    int32_t v6; // bp-8
    int32_t v7 = &v6; // bp-28
    *(int16_t *)(g3 + 30) = (int16_t)v5;
    g4 = g3;
    v6 = -1;
    int32_t v8 = function_1000e5f0((int32_t *)v7); // 0x1000f081
    g6 = 0xffff;
    int32_t v9; // 0x1000f191
    int32_t v10; // 0x1000f1e8
    int32_t v11; // 0x1000f0aa
    int32_t v12; // 0x1000f0b3
    if ((int16_t)v8 != -1) {
        v10 = g8;
        goto lab_0x1000f1e5;
    } else {
        int32_t v13 = a2; // 0x1000f0a2
        unsigned char v14 = *(char *)v13; // 0x1000f0a0
        int32_t v15 = (int32_t)v14 | g4 & -256; // 0x1000f0a0
        g4 = v15;
        int32_t v16 = v13 + 1; // 0x1000f0a2
        while (v14 != 0) {
            // 0x1000f0a0
            v13 = v16;
            v14 = *(char *)v13;
            v15 = (int32_t)v14 | v15 & -256;
            g4 = v15;
            v16 = v13 + 1;
        }
        int32_t v17 = v16 - (a2 + 1); // 0x1000f0a7
        v11 = v17 + 1;
        v12 = v17 + 4 & -2;
        g5 = v12;
        int32_t v18 = g3; // 0x1000f0bb
        int32_t * v19 = (int32_t *)(v18 + 48); // 0x1000f0bb
        if (*v19 > 0) {
            int32_t v20 = v18 + 36; // 0x1000f0c0
            int32_t v21 = *(int32_t *)v20; // 0x1000f0c0
            g4 = v21;
            g7 = v20;
            v6 = v21;
            int32_t v22 = 0; // 0x1000f0e2
            while (true) {
                int32_t v23 = *(int32_t *)v21; // 0x1000f0d3
                g4 = v23;
                if (*(int32_t *)v23 - *(int32_t *)(v23 + 4) >= v12) {
                    // break -> 0x1000f0ea
                    break;
                }
                int32_t v24 = v21 + 4; // 0x1000f0de
                v6 = v24;
                int32_t v25 = v22 + 1; // 0x1000f0e2
                if (v25 >= *v19) {
                    goto lab_0x1000f0f6_2;
                }
                v22 = v25;
                v21 = v24;
            }
            // 0x1000f0ea
            v6 = v22;
            if (v22 != -1) {
                v9 = v22;
                goto lab_0x1000f181;
            } else {
                goto lab_0x1000f0f6_2;
            }
        } else {
            goto lab_0x1000f0f6_2;
        }
    }
  lab_0x1000f1e5:;
    int32_t v26 = a1; // 0x1000f1e5
    g4 = v26;
    g7 = *(int32_t *)v10;
    *(int16_t *)v26 = (int16_t)v8;
    g3 = *(int32_t *)g8;
    return g4;
  lab_0x1000f0f6_2:;
    int32_t v27 = v12 + 12; // 0x1000f0f6
    int32_t v28; // 0x1000f112
    if (v27 < 2049) {
        v28 = 2048;
    } else {
        v28 = v27;
    }
    int32_t v29 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1000f10b
    g4 = v29;
    int32_t v30 = *(int32_t *)(*(int32_t *)v29 + 4); // 0x1000f10f
    g4 = v30;
    *(int32_t *)v30 = v28 - 12;
    g7 = g3 + 36;
    *(int32_t *)(g4 + 4) = 0;
    int32_t v31 = g7; // 0x1000f126
    int32_t v32 = *(int32_t *)(v31 + 12); // 0x1000f126
    g5 = v32;
    int32_t v33 = *(int32_t *)(v31 + 4); // 0x1000f129
    g1 = v33;
    v6 = g4;
    int32_t v34; // 0x1000f146
    if (v32 + 1 > v33) {
        // 0x1000f136
        g4 = v31;
        function_1000d920(v32 - v33 + 1);
        g4 = v6;
        v34 = g7;
    } else {
        v34 = v31;
    }
    int32_t * v35 = (int32_t *)(v34 + 12); // 0x1000f146
    *v35 = *v35 + 1;
    int32_t v36 = g7; // 0x1000f149
    int32_t v37 = *(int32_t *)v36; // 0x1000f14c
    int32_t v38 = *(int32_t *)(v36 + 12) - g5 - 1; // 0x1000f150
    *(int32_t *)(v36 + 16) = v37;
    if (v38 >= 1) {
        int32_t v39 = 4 * g5 + v37; // edx
        *(int32_t *)(g8 - 4) = 4 * v38;
        *(int32_t *)(g8 - 8) = v39;
        *(int32_t *)(g8 - 12) = v39 + 4;
        _memcpy(&g169, &g169, (int32_t)&g169);
        g4 = v6;
    }
    int32_t v40 = g5; // 0x1000f172
    int32_t v41 = 4 * v40 + *(int32_t *)g7; // 0x1000f172
    int32_t v42; // 0x1000f17b
    if (v41 != 0) {
        // 0x1000f179
        *(int32_t *)v41 = g4;
        v42 = g5;
    } else {
        v42 = v40;
    }
    // 0x1000f17b
    v6 = v42;
    g5 = v12;
    v9 = v42;
    goto lab_0x1000f181;
  lab_0x1000f181:
    // 0x1000f181
    g4 = v1;
    int32_t v43;
    if (*(char *)(g3 + 28) == 0) {
        // 0x1000f191
        v43 = function_1000f200(v9);
    } else {
        // 0x1000f18a
        v43 = function_1000f240(v9);
    }
    // 0x1000f196
    g4 = v43 & 0xffff;
    int32_t v44 = *(int32_t *)(*(int32_t *)g7 + 4 * v6); // 0x1000f19e
    g7 = v44;
    int32_t v45 = v44 + 4; // 0x1000f1a1
    int32_t v46 = v44 + 8 + *(int32_t *)v45; // 0x1000f1ab
    *(int16_t *)v46 = (int16_t)v43;
    g4 = v11;
    *(int32_t *)(g8 - 4) = v11;
    *(int32_t *)(g8 - 8) = v1;
    *(int32_t *)(g8 - 12) = v46 + 2;
    g4 = g4 & -0x10000 | (int32_t)*(int16_t *)v45;
    int32_t v47 = v6 & 0xffff | _memcpy2() & -0x10000; // eax
    int32_t * v48 = (int32_t *)(g7 + 4); // 0x1000f1cb
    *v48 = g5 + *v48;
    int32_t v49 = g4; // 0x1000f1d4
    *(int32_t *)(g8 + 8) = (int32_t)&v1;
    g4 = g3;
    v1 = v47;
    int32_t v50 = function_1000ef50(v47, 0x10000 * v49 / 0x10000); // 0x1000f1df
    g5 = *(int32_t *)g8;
    v8 = v50;
    v10 = g8 + 4;
    goto lab_0x1000f1e5;
}

// Address range: 0x1000f200 - 0x1000f23b
int32_t function_1000f200(int32_t a1) {
    unsigned char v1 = *(char *)&g4; // 0x1000f200
    int32_t v2 = v1; // 0x1000f200
    g6 = v2;
    int32_t v3 = g7; // 0x1000f203
    if (v1 == 0) {
        // 0x1000f234
        g7 = v3;
        return 0;
    }
    int32_t v4 = g4; // 0x1000f219
    int32_t v5 = 0; // 0x1000f210
    int32_t v6;
    int32_t v7; // 0x1000f212
    while (true) {
        // 0x1000f210
        v7 = *(int32_t *)(4 * (v2 ^ v5) + (int32_t)&g60);
        unsigned char v8 = *(char *)(v4 + 1); // 0x1000f219
        int32_t v9 = v8; // 0x1000f219
        g6 = v9;
        int32_t v10 = v4 + 2; // 0x1000f21d
        g4 = v10;
        if (v8 == 0) {
            v6 = v5;
            // break -> 0x1000f234
            break;
        }
        int32_t v11 = *(int32_t *)(4 * (v9 ^ v7) + (int32_t)&g60); // 0x1000f226
        unsigned char v12 = *(char *)v10; // 0x1000f22d
        int32_t v13 = v12; // 0x1000f22d
        g6 = v13;
        if (v12 == 0) {
            v6 = v11;
            // break -> 0x1000f234
            break;
        }
        v4 = v10;
        v5 = v11;
        v2 = v13;
    }
    // 0x1000f234
    g7 = v3;
    return 256 * v7 | v6;
}

// Address range: 0x1000f240 - 0x1000f2a1
int32_t function_1000f240(int32_t a1) {
    int32_t v1 = g4; // 0x1000f242
    int32_t v2 = v1; // esi
    int32_t v3 = g5; // bp-12
    int32_t v4 = &v3; // 0x1000f247
    int32_t v5 = 0; // edi
    int32_t v6 = 0; // ebx
    int32_t v7 = _toupper(v1 & 255); // 0x1000f24d
    int32_t v8; // 0x1000f298
    if (v7 != 0) {
        int32_t v9 = v4; // 0x1000f26d
        while (true) {
            int32_t v10 = *(int32_t *)(4 * (v6 ^ v7) + (int32_t)&g60); // 0x1000f262
            v5 = v10;
            unsigned char v11 = *(char *)(v2 + 1); // 0x1000f269
            *(int32_t *)(v9 - 4) = (int32_t)v11;
            int32_t v12 = _toupper((int32_t)&g169); // 0x1000f26e
            int32_t v13 = v2 + 2; // 0x1000f276
            v2 = v13;
            if (v12 == 0) {
                v8 = g8 + 4;
                // break -> 0x1000f296
                break;
            }
            int32_t v14 = *(int32_t *)(4 * (v5 ^ v12) + (int32_t)&g60); // 0x1000f27f
            v6 = v14;
            *(int32_t *)g8 = (int32_t)*(char *)v13;
            int32_t v15 = _toupper((int32_t)&g169); // 0x1000f28a
            int32_t v16 = g8 + 4; // 0x1000f28f
            if (v15 == 0) {
                v8 = v16;
                // break -> 0x1000f296
                break;
            }
            v9 = v16;
            v7 = v15;
        }
    } else {
        v8 = v4;
    }
    // 0x1000f296
    g5 = *(int32_t *)v8;
    g7 = *(int32_t *)(v8 + 4);
    g3 = *(int32_t *)(v8 + 8);
    return v6 | 256 * v5;
}

// Address range: 0x1000f2b0 - 0x1000f38a
int32_t function_1000f2b0(int32_t a1) {
    // 0x1000f2b0
    g7 = a1;
    int32_t v1; // 0x1000f2bc
    if (*(char *)a1 == 36) {
        // 0x1000f2bc
        v1 = a1 + 1;
        g7 = v1;
    } else {
        v1 = a1;
    }
    int32_t v2 = function_100094b0((int32_t *)v1, "WIN32"); // 0x1000f2c3
    if (v2 == 0) {
        // 0x1000f2cf
        return v2 & -256 | 1;
    }
    // 0x1000f2d4
    if (function_100094b0((int32_t *)g7, "WINDOWS") == 0) {
        // 0x1000f2cf
        return 1;
    }
    int32_t v3 = function_100094b0((int32_t *)g7, "X360"); // 0x1000f2ec
    if (v3 == 0) {
        // 0x1000f2f8
        return v3 & -256;
    }
    // 0x1000f2fd
    if (function_100094b0((int32_t *)g7, "PS3") == 0 || function_100094b0((int32_t *)g7, "OSX") == 0 || function_100094b0((int32_t *)g7, "LINUX") == 0 || function_100094b0((int32_t *)g7, "POSIX") == 0 || function_100094b0((int32_t *)g7, "GAMECONSOLE") == 0 || function_100094b0((int32_t *)g7, "DEMO") == 0) {
        // 0x1000f2f8
        return 0;
    }
    // 0x1000f369
    function_100094b0((int32_t *)g7, "LOWVIOLENCE");
    int32_t v4 = KeyValuesSystem(); // 0x1000f377
    g4 = v4;
    return *(int32_t *)(*(int32_t *)v4 + 32);
}

// Address range: 0x1000f390 - 0x1000f3a7
int32_t function_1000f390(int32_t a1) {
    // 0x1000f390
    return Warning();
}

// Address range: 0x1000f3b0 - 0x1000f3b9
// Demangled:     public: __thiscall std::_Init_locks::_Init_locks()
int32_t ??0_Init_locks@std@@QAE@XZ3(void) {
    int32_t result = g4; // 0x1000f3b0
    *(int32_t *)result = 0;
    return result;
}

// Address range: 0x1000f3c0 - 0x1000f3fa
int32_t function_1000f3c0(int32_t a1) {
    // 0x1000f3c0
    g7 = a1;
    int32_t v1 = *(int32_t *)a1; // 0x1000f3c7
    int32_t v2 = g5; // bp-12
    g5 = g4;
    int32_t result; // eax
    int32_t v3; // 0x1000f3f4
    if (v1 != 0) {
        // 0x1000f3d0
        function_1000f3c0(v1);
        g4 = g5;
        function_1000f3c0(*(int32_t *)g7 + 4);
        int32_t v4 = *(int32_t *)g7; // 0x1000f3e3
        g4 = v4;
        result = _3f__3f_3_40_YAXPAX_40_Z(v4);
        *(int32_t *)g7 = 0;
        v3 = g8;
    } else {
        result = 0;
        v3 = &v2;
    }
    // 0x1000f3f4
    g5 = *(int32_t *)v3;
    g7 = *(int32_t *)(v3 + 4);
    g2 = *(int32_t *)(v3 + 8);
    return result;
}

// Address range: 0x1000f400 - 0x1000f4dd
int32_t function_1000f400(int32_t a1, int32_t a2, int32_t a3) {
    int32_t v1 = g3 & -256 | a1 & 255; // 0x1000f404
    int32_t v2 = g5; // bp-16
    int32_t v3 = &v2; // 0x1000f408
    int32_t v4 = g4; // 0x1000f409
    char v5 = a1; // 0x1000f40b
    int32_t v6; // eax
    int32_t v7; // ebx
    int32_t v8; // edi
    int32_t v9; // 0x1000f4d46
    int32_t v10; // 0x1000f4d6
    int32_t v11; // 0x1000f4d610
    if (v5 != 36) {
        // 0x1000f45f
        g6 = v1;
        if (_isdigit(v1) == 0) {
            v10 = 0;
            goto lab_0x1000f4d4;
        } else {
            // 0x1000f46f
            *(char *)(v4 + 16) = (char)v1;
            int32_t v12 = *(int32_t *)(v4 + 12); // 0x1000f475
            g4 = v12;
            int32_t v13 = (int32_t)*(char *)(v12 + *(int32_t *)(v4 + 8)); // 0x1000f478
            g6 = v13;
            v7 = 1;
            v8 = 1;
            int32_t v14 = _isdigit(v13); // 0x1000f484
            v6 = v14;
            if (v14 == 0) {
                // 0x1000f46f
                goto lab_0x1000f4c6;
            } else {
                while (true) {
                    uint32_t v15 = v8; // 0x1000f490
                    if (v15 >= 128) {
                        v11 = v14;
                        v9 = v3;
                        // break -> 0x1000f4c1
                        break;
                    }
                    int32_t v16 = *(int32_t *)(v4 + 12); // 0x1000f498
                    g4 = v16;
                    char v17 = *(char *)(*(int32_t *)(v4 + 8) + v16); // 0x1000f49e
                    *(char *)(v15 + 16 + v4) = v17;
                    int32_t * v18 = (int32_t *)(v4 + 12); // 0x1000f4a5
                    *v18 = v7 + *v18;
                    int32_t v19 = *(int32_t *)(v4 + 12); // 0x1000f4ab
                    g4 = v19;
                    int32_t v20 = (int32_t)*(char *)(v19 + *(int32_t *)(v4 + 8)); // 0x1000f4ae
                    g6 = v20;
                    *(int32_t *)(g8 - 4) = v20;
                    v8 += v7;
                    int32_t v21 = _isdigit((int32_t)&g169); // 0x1000f4b5
                    v6 = v21;
                    int32_t v22 = g8 + 4; // 0x1000f4ba
                    if (v21 == 0) {
                        v11 = v21;
                        v9 = v22;
                        // break -> 0x1000f4c1
                        break;
                    }
                    v14 = v21;
                    v3 = v22;
                }
                goto lab_0x1000f4c1;
            }
        }
    } else {
        // 0x1000f410
        *(char *)(v4 + 16) = v5;
        v8 = 1;
        v7 = 1;
        while (true) {
            int32_t v23 = *(int32_t *)(v4 + 12); // 0x1000f423
            g4 = v23;
            int32_t v24 = (int32_t)*(char *)(v23 + *(int32_t *)(v4 + 8)); // 0x1000f426
            g6 = v24;
            *(int32_t *)(g8 - 4) = v24;
            int32_t v25 = _isalnum((int32_t)&g169); // 0x1000f42b
            v6 = v25;
            int32_t v26 = g8 + 4; // 0x1000f430
            int32_t v27; // 0x1000f437
            if (v25 == 0) {
                // 0x1000f437
                v27 = *(int32_t *)(v4 + 8);
                v6 = v27;
                int32_t v28 = *(int32_t *)(v4 + 12); // 0x1000f43a
                g4 = v28;
                if (*(char *)(v28 + v27) != 95) {
                    v11 = v27;
                    v9 = v26;
                    // break -> 0x1000f4c1
                    break;
                }
            } else {
                v27 = v25;
            }
            uint32_t v29 = v8; // 0x1000f443
            if (v29 >= 128) {
                v11 = v27;
                v9 = v26;
                // break -> 0x1000f4c1
                break;
            }
            int32_t v30 = *(int32_t *)(v4 + 12); // 0x1000f44b
            unsigned char v31 = *(char *)(*(int32_t *)(v4 + 8) + v30); // 0x1000f451
            g4 = g4 & -256 | (int32_t)v31;
            *(char *)(v29 + 16 + v4) = v31;
            int32_t * v32 = (int32_t *)(v4 + 12); // 0x1000f458
            *v32 = v7 + *v32;
            v8 += v7;
        }
        goto lab_0x1000f4c1;
    }
  lab_0x1000f4d4:
    // 0x1000f4d4
    g5 = *(int32_t *)v3;
    g7 = *(int32_t *)(v3 + 4);
    g3 = *(int32_t *)(v3 + 8);
    g2 = *(int32_t *)(v3 + 12);
    return v10 & -256;
  lab_0x1000f4c1:
    // 0x1000f4c1
    if (v8 < 127) {
        goto lab_0x1000f4c6;
    } else {
        v10 = v11;
        v3 = v9;
        goto lab_0x1000f4d4;
    }
  lab_0x1000f4c6:
    // 0x1000f4c6
    *(char *)(v8 + 16 + v4) = 0;
    g5 = *(int32_t *)g8;
    g7 = *(int32_t *)(g8 + 4);
    g3 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return v6 & -256 | v7 & 255;
}

// Address range: 0x1000f4e0 - 0x1000f55c
int32_t function_1000f4e0(int32_t a1) {
    int32_t v1 = g2; // 0x1000f4e0
    int32_t v2 = g7; // 0x1000f4e3
    int32_t v3 = g5; // 0x1000f4e4
    g5 = a1;
    int32_t v4 = *(int32_t *)a1; // 0x1000f4e8
    g7 = g4;
    int32_t v5 = 0x1000000 * v4;
    if (v5 == 0) {
        // 0x1000f4f0
        g5 = v3;
        g7 = v2;
        g2 = v1;
        return v5 / 0x1000000 & -256;
    }
    int32_t v6 = g3; // 0x1000f4f8
    g3 = g3 & -256 | function_1000f4e0(v5 / 0x1000000) & 255;
    int32_t v7 = *(int32_t *)g5 + 4; // 0x1000f503
    g4 = g7;
    int32_t v8 = function_1000f4e0(v7); // 0x1000f509
    int32_t v9 = *(int32_t *)g5; // 0x1000f50e
    int32_t v10 = *(int32_t *)(v9 + 8); // 0x1000f510
    g4 = v10;
    char * v11; // 0x1000f525
    if (v10 == 0) {
        // 0x1000f525
        v11 = (char *)(v9 + 12);
        if (*v11 != 38) {
            if ((char)g3 != 0) {
                // 0x1000f538
                *v11 = 1;
                goto lab_0x1000f53b;
            } else {
                if ((char)v8 != 0) {
                    // 0x1000f538
                    *v11 = 1;
                    goto lab_0x1000f53b;
                } else {
                    goto lab_0x1000f558;
                }
            }
        } else {
            if ((char)g3 == 0) {
                goto lab_0x1000f558;
            } else {
                if ((char)v8 == 0) {
                    goto lab_0x1000f558;
                } else {
                    // 0x1000f538
                    *v11 = 1;
                    goto lab_0x1000f53b;
                }
            }
        }
    } else {
        int32_t v12 = v10 - 1; // 0x1000f518
        g4 = v12;
        if (v12 == 0) {
            // 0x1000f51b
            g4 = v12 & -256 | (int32_t)((char)v8 == 0);
            *(char *)(v9 + 12) = (char)((char)v8 == 0);
        }
        goto lab_0x1000f53b;
    }
  lab_0x1000f53b:
    // 0x1000f53b
    *(int32_t *)(*(int32_t *)g5 + 8) = 2;
    int32_t v13 = *(int32_t *)g5; // 0x1000f544
    g3 = v7;
    g5 = v4;
    g7 = v6;
    g2 = v3;
    return (int32_t)*(char *)(v13 + 12) | v13 & -256;
  lab_0x1000f558:
    // 0x1000f538
    *v11 = 0;
    goto lab_0x1000f53b;
}

// Address range: 0x1000f560 - 0x1000f58f
int32_t function_1000f560(void) {
    int32_t v1 = g4; // 0x1000f561
    g7 = v1;
    int32_t result; // eax
    if (v1 != 0) {
        // 0x1000f569
        function_1000f3c0(v1);
        int32_t v2 = g4 + 4; // 0x1000f571
        g4 = g7;
        function_1000f3c0(v2);
        result = _3f__3f_3_40_YAXPAX_40_Z(g4);
        *(int32_t *)g7 = 0;
    } else {
        result = 0;
    }
    // 0x1000f58d
    return result;
}

// Address range: 0x1000f590 - 0x1000f6b1
int32_t function_1000f590(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g7; // 0x1000f599
    int32_t v3 = g4; // 0x1000f59a
    unsigned char v4 = *(char *)(v3 + 4); // 0x1000f59c
    int32_t v5 = g1 & -256 | (int32_t)v4; // 0x1000f59c
    int32_t v6 = g5; // 0x1000f59f
    int32_t v7; // bp-284
    int32_t v8; // 0x1000f673
    if (v4 != 40) {
        // 0x1000f5de
        v7 = v5;
        int32_t v9 = function_1000f400(v5, v6, v2); // 0x1000f5df
        if ((char)v9 == 0) {
            int32_t v10 = g7; // 0x1000f673
            unsigned char v11 = *(char *)(v10 + 4); // 0x1000f673
            v8 = (int32_t)v11 | v9 & -256;
            if (v11 != 33) {
                // 0x1000f67a
                int32_t v12; // 0x1000f6a8
                if (*(int32_t *)(v10 + 148) != 0) {
                    // 0x1000f683
                    int32_t v13; // bp-272
                    int32_t v14 = function_10002c60(&v13, "Bad expression token: %c"); // 0x1000f693
                    g4 = *(int32_t *)(g7 + 148);
                    v12 = v14 + 5;
                } else {
                    v12 = v8;
                }
                // 0x1000f6a7
                g5 = v7;
                g7 = v6;
                g2 = v1;
                return v12 & -256;
            }
            goto lab_0x1000f669;
        } else {
            int32_t v15 = __malloc_crt(16); // 0x1000f5ef
            *(int32_t *)a1 = v15;
            *(int32_t *)v15 = 0;
            *(int32_t *)(*(int32_t *)a1 + 4) = 0;
            int32_t v16 = *(int32_t *)a1; // 0x1000f608
            g4 = v16;
            *(int32_t *)(v16 + 8) = 2;
            int32_t v17 = g7 + 16; // 0x1000f611
            int32_t v18 = (int32_t)*(char *)v17; // 0x1000f611
            g6 = v18;
            char v19; // 0x1000f642
            if (_isdigit(v18) == 0) {
                // 0x1000f635
                g6 = *(int32_t *)(g7 + 144);
                v19 = 0;
            } else {
                // 0x1000f626
                v19 = function_100128e0(v17) != 0;
            }
            int32_t v20 = *(int32_t *)a1; // 0x1000f640
            g4 = v20;
            *(char *)(v20 + 12) = v19;
            goto lab_0x1000f646;
        }
    } else {
        int32_t v21 = *(int32_t *)(v3 + 12); // 0x1000f5a4
        int32_t v22 = *(int32_t *)(v3 + 8); // 0x1000f5a7
        g4 = v22;
        int32_t v23; // 0x1000f5b4
        int32_t v24; // 0x1000f5c3
        if (*(char *)(v22 + v21) == 32) {
            int32_t v25 = v21 + 1; // 0x1000f5b0
            *(int32_t *)(v3 + 12) = v25;
            v23 = g4;
            v24 = v3;
            while (*(char *)(v25 + v23) == 32) {
                // 0x1000f5b0
                v25++;
                *(int32_t *)(v3 + 12) = v25;
                v23 = g4;
                v24 = v3;
            }
        } else {
            v23 = v22;
            v24 = v3;
        }
        int32_t v26 = *(int32_t *)(v24 + 12); // 0x1000f5ba
        *(char *)(v24 + 4) = *(char *)(v26 + v23);
        int32_t v27 = v26 + 1; // 0x1000f5c6
        g1 = v27;
        v7 = a1;
        g4 = v3;
        *(int32_t *)(v3 + 12) = v27;
        int32_t result = function_1000f750(v7); // 0x1000f5cd
        if ((char)result == 0) {
            // 0x1000f5d6
            g5 = v7;
            g7 = v6;
            g2 = v1;
            return result;
        }
        goto lab_0x1000f646;
    }
  lab_0x1000f646:;
    int32_t v28 = *(int32_t *)(g7 + 12); // 0x1000f646
    int32_t v29 = *(int32_t *)(g7 + 8); // 0x1000f649
    g4 = v29;
    int32_t v30; // 0x1000f656
    int32_t v31; // 0x1000f663
    if (*(char *)(v29 + v28) == 32) {
        int32_t v32 = v28 + 1; // 0x1000f652
        *(int32_t *)(g7 + 12) = v32;
        v30 = g4;
        v31 = g7;
        while (*(char *)(v32 + v30) == 32) {
            // 0x1000f652
            v32++;
            *(int32_t *)(g7 + 12) = v32;
            v30 = g4;
            v31 = g7;
        }
    } else {
        v30 = v29;
        v31 = g7;
    }
    int32_t v33 = *(int32_t *)(v31 + 12); // 0x1000f65c
    unsigned char v34 = *(char *)(v33 + v30); // 0x1000f65f
    g4 = (int32_t)v34 | v30 & -256;
    int32_t v35 = v33 + 1; // eax
    *(char *)(v31 + 4) = v34;
    *(int32_t *)(g7 + 12) = v35;
    v8 = v35;
    goto lab_0x1000f669;
  lab_0x1000f669:
    // 0x1000f669
    g5 = v7;
    g7 = v6;
    g2 = v1;
    return v8 & -256 | 1;
}

// Address range: 0x1000f6c0 - 0x1000f74c
int32_t function_1000f6c0(int32_t a1) {
    int32_t v1 = g7; // 0x1000f6c3
    int32_t v2 = g5; // 0x1000f6c4
    g5 = a1;
    g7 = g4;
    int32_t result = function_1000f590(a1); // 0x1000f6cb
    if ((char)result == 0) {
        // 0x1000f6d4
        g5 = a1;
        g7 = v2;
        g2 = v1;
        return result;
    }
    while (true) {
        // 0x1000f6e0
        if (*(char *)(g7 + 4) != 33) {
            // break -> 0x1000f743
            break;
        }
        // 0x1000f6e6
        g3 = *(int32_t *)g5;
        *(int32_t *)(g8 - 4) = 16;
        int32_t v3 = __malloc_crt((int32_t)&g169); // 0x1000f6ea
        *(int32_t *)g5 = v3;
        *(int32_t *)v3 = g3;
        *(int32_t *)(*(int32_t *)g5 + 4) = 0;
        int32_t v4 = *(int32_t *)g5; // 0x1000f6fc
        g4 = v4;
        *(int32_t *)(v4 + 8) = 1;
        int32_t v5 = g7; // 0x1000f705
        int32_t v6 = *(int32_t *)(v5 + 12); // 0x1000f705
        int32_t v7 = *(int32_t *)(v5 + 8); // 0x1000f708
        g4 = v7;
        int32_t v8; // 0x1000f718
        int32_t v9; // 0x1000f725
        if (*(char *)(v7 + v6) == 32) {
            int32_t v10 = v6 + 1; // 0x1000f714
            *(int32_t *)(v5 + 12) = v10;
            v8 = g4;
            int32_t v11 = g7;
            v9 = v11;
            while (*(char *)(v10 + v8) == 32) {
                // 0x1000f714
                v10++;
                *(int32_t *)(v11 + 12) = v10;
                v8 = g4;
                v11 = g7;
                v9 = v11;
            }
        } else {
            v8 = v7;
            v9 = v5;
        }
        int32_t v12 = *(int32_t *)(v9 + 12); // 0x1000f71e
        unsigned char v13 = *(char *)(v12 + v8); // 0x1000f721
        g4 = (int32_t)v13 | v8 & -256;
        g1 = v12 + 1;
        *(char *)(v9 + 4) = v13;
        *(int32_t *)(g7 + 12) = g1;
        *(int32_t *)(g8 - 4) = *(int32_t *)g5 + 4;
        g4 = g7;
        int32_t result2 = function_1000f590((int32_t)&g169); // 0x1000f733
        if ((char)result2 == 0) {
            // 0x1000f73c
            g3 = *(int32_t *)g8;
            g5 = *(int32_t *)(g8 + 4);
            g7 = *(int32_t *)(g8 + 8);
            g2 = *(int32_t *)(g8 + 12);
            return result2;
        }
        result = result2;
    }
    // 0x1000f743
    g3 = *(int32_t *)g8;
    g5 = *(int32_t *)(g8 + 4);
    g7 = *(int32_t *)(g8 + 8);
    g2 = *(int32_t *)(g8 + 12);
    return result & -256 | 1;
}

// Address range: 0x1000f750 - 0x1000f850
int32_t function_1000f750(int32_t a1) {
    int32_t v1 = g2; // bp-4
    g2 = &v1;
    int32_t v2 = g5; // 0x1000f75a
    g5 = a1;
    g7 = g4;
    int32_t result = function_1000f6c0(a1); // 0x1000f761
    if ((char)result == 0) {
        // 0x1000f76a
        g5 = a1;
        g7 = v2;
        g2 = v1;
        return result;
    }
    int32_t v3; // 0x1000f78f
    while (true) {
        int32_t v4 = g7; // 0x1000f773
        unsigned char v5 = *(char *)(v4 + 4); // 0x1000f773
        g3 = (int32_t)v5 | g3 & -256;
        if (v5 != 124) {
            if (v5 != 38) {
                goto lab_0x1000f845;
            }
        }
        int32_t * v6 = (int32_t *)(v4 + 12); // 0x1000f784
        int32_t v7 = *v6; // 0x1000f784
        int32_t v8 = *(int32_t *)(v4 + 8); // 0x1000f787
        g4 = v8;
        unsigned char v9 = *(char *)(v8 + v7); // 0x1000f78a
        g4 = (int32_t)v9 | v8 & -256;
        v3 = v7 + 1;
        g6 = g6 & -256 | (int32_t)(v9 & v5);
        *v6 = v3;
        if ((char)g6 != (char)g3) {
            // break -> 0x1000f809
            break;
        }
        // 0x1000f799
        *(int32_t *)(g8 - 4) = 16;
        int32_t v10 = *(int32_t *)g5; // 0x1000f79d
        int32_t v11 = __malloc_crt(v10); // 0x1000f7a0
        g4 = v10;
        *(int32_t *)g5 = v11;
        *(int32_t *)v11 = g4;
        *(int32_t *)(*(int32_t *)g5 + 4) = 0;
        int32_t v12 = *(int32_t *)g5; // 0x1000f7b3
        g4 = v12;
        *(int32_t *)(v12 + 8) = 0;
        *(char *)(*(int32_t *)g5 + 12) = (char)g3;
        int32_t v13 = g7; // 0x1000f7bd
        int32_t v14 = *(int32_t *)(v13 + 12); // 0x1000f7bd
        int32_t v15 = *(int32_t *)(v13 + 8); // 0x1000f7c0
        g4 = v15;
        int32_t v16; // 0x1000f7e1
        int32_t v17; // 0x1000f7e5
        if (*(char *)(v15 + v14) == 32) {
            int32_t v18 = v15; // 0x1000f7d1
            int32_t v19 = v14 + 1; // 0x1000f7d0
            g3 = v19;
            *(int32_t *)(v13 + 12) = v19;
            while (*(char *)(g3 + v18) == 32) {
                // 0x1000f7d0
                v18 = g4;
                v19++;
                g3 = v19;
                *(int32_t *)(g7 + 12) = v19;
            }
            // 0x1000f7de
            v16 = g4;
            v17 = g7;
        } else {
            v16 = v15;
            v17 = v13;
        }
        int32_t v20 = *(int32_t *)(v17 + 12); // 0x1000f7de
        unsigned char v21 = *(char *)(v20 + v16); // 0x1000f7e1
        g4 = (int32_t)v21 | v16 & -256;
        g1 = v20 + 1;
        *(char *)(v17 + 4) = v21;
        *(int32_t *)(g7 + 12) = g1;
        *(int32_t *)(g8 - 4) = *(int32_t *)g5 + 4;
        g4 = g7;
        int32_t result2 = function_1000f6c0((int32_t)&g169); // 0x1000f7f3
        if ((char)result2 == 0) {
            // 0x1000f800
            g3 = *(int32_t *)g8;
            g5 = *(int32_t *)(g8 + 4);
            g7 = *(int32_t *)(g8 + 8);
            g2 = v1;
            return result2;
        }
        result = result2;
    }
    // 0x1000f809
    if (*(int32_t *)(g7 + 148) == 0) {
        // 0x1000f809
        result = v3;
      lab_0x1000f845:
        // 0x1000f845
        g3 = *(int32_t *)g8;
        g5 = *(int32_t *)(g8 + 4);
        g7 = *(int32_t *)(g8 + 8);
        g2 = v1;
        return result & -256 | 1;
    }
    // 0x1000f812
    *(int32_t *)(g8 - 4) = g4;
    g4 = g3;
    *(int32_t *)(g8 - 8) = g3;
    *(int32_t *)(g8 - 12) = (int32_t)"Bad expression operator: '%c%c', expected C style operator";
    int32_t v22; // bp-272
    *(int32_t *)(g8 - 16) = (int32_t)&v22;
    *(int32_t *)(g8 - 4) = function_10002c60(&g169, (char *)&g169) + 5;
    int32_t v23 = *(int32_t *)(g7 + 148); // 0x1000f82f
    g3 = *(int32_t *)(g8 + 16);
    g5 = *(int32_t *)(g8 + 20);
    g7 = *(int32_t *)(g8 + 24);
    g2 = v1;
    return v23 & -256;
}

// Address range: 0x1000f850 - 0x1000f96f
int32_t function_1000f850(int32_t * a1, int32_t a2, int32_t a3, int32_t a4) {
    // 0x1000f850
    int32_t v1; // bp-516
    int32_t v2 = &v1; // 0x1000f853
    int32_t v3 = g7; // 0x1000f859
    int32_t v4 = g5; // 0x1000f85a
    g5 = a2;
    int32_t v5 = g4; // 0x1000f85e
    g7 = v5;
    if (a2 == 0) {
        // 0x1000f864
        g5 = v4;
        g7 = v3;
        return g1 & -256;
    }
    int32_t v6 = g3; // 0x1000f871
    int32_t v7; // 0x1000f8be
    if (*(char *)a2 == 91) {
        int32_t v8 = function_10009450(a2); // 0x1000f875
        int32_t v9 = v8 + 1; // 0x1000f87c
        if (v9 >= 513) {
            // 0x1000f889
            g3 = v6;
            g5 = v4;
            g7 = v3;
            return v9 & -256;
        }
        int32_t v10 = g5 + 1; // 0x1000f895
        g5 = v10;
        g4 = v2;
        function_10009a60(&v1, v10, v8);
        int32_t v11 = g2 - 514 + v8; // 0x1000f8a3
        g3 = v11;
        char * v12 = (char *)v11; // 0x1000f8ad
        if (*v12 == 93) {
            // 0x1000f8b2
            *v12 = 0;
        }
        // 0x1000f8b5
        g5 = v2;
        v7 = g7;
    } else {
        v7 = v5;
        v2 = a2;
    }
    // 0x1000f8bb
    *(int32_t *)(v7 + 8) = v2;
    int32_t v13; // 0x1000f8ca
    if (a3 == 0) {
        // 0x1000f8c5
        v13 = 0x1000f2b0;
    } else {
        v13 = a3;
    }
    // 0x1000f8ca
    *(int32_t *)(g7 + 144) = v13;
    int32_t v14; // 0x1000f8dc
    if (a4 == 0) {
        v14 = 0x1000f390;
    } else {
        v14 = a4;
    }
    // 0x1000f8dc
    *(int32_t *)(g7 + 148) = v14;
    *(int32_t *)g7 = 0;
    *(int32_t *)(g7 + 12) = 0;
    *(char *)(g7 + 4) = 0;
    int32_t v15 = g5; // 0x1000f8f3
    int32_t v16; // 0x1000f904
    if (*(char *)v15 == 32) {
        int32_t v17 = 1; // 0x1000f900
        *(int32_t *)(g7 + 12) = v17;
        v16 = g5;
        while (*(char *)(v16 + v17) == 32) {
            // 0x1000f900
            v17++;
            *(int32_t *)(g7 + 12) = v17;
            v16 = g5;
        }
    } else {
        v16 = v15;
    }
    int32_t v18 = g7; // 0x1000f90a
    int32_t v19 = *(int32_t *)(v18 + 12); // 0x1000f90a
    g1 = v19 + 1;
    g4 = v18;
    *(char *)(v18 + 4) = *(char *)(v19 + v16);
    *(int32_t *)(g7 + 12) = g1;
    int32_t v20 = function_1000f750(v18); // 0x1000f91a
    g3 = g3 & -256 | v20 & 255;
    if ((char)v20 != 0) {
        int32_t v21 = g7; // 0x1000f925
        g4 = v21;
        int32_t v22 = function_1000f4e0(v21); // 0x1000f928
        g4 = (int32_t)a1;
        *(char *)a1 = (char)v22;
    }
    int32_t v23 = g4; // 0x1000f932
    int32_t v24; // 0x1000f95e
    if (v23 != 0) {
        // 0x1000f938
        *(int32_t *)(g8 - 4) = v23;
        g4 = g7;
        function_1000f3c0((int32_t)&g169);
        *(int32_t *)(g8 - 4) = g4 + 4;
        g4 = g7;
        function_1000f3c0((int32_t)&g169);
        *(int32_t *)(g8 - 4) = g4;
        int32_t v25 = _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169); // 0x1000f950
        *(int32_t *)g7 = 0;
        v24 = v25 & -256;
    } else {
        v24 = 0;
    }
    int32_t result = g3 & 255 | v24; // eax
    g3 = *(int32_t *)g8;
    g5 = *(int32_t *)(g8 + 4);
    *(int32_t *)g7 = 0;
    g7 = *(int32_t *)g8;
    return result;
}

// Address range: 0x1000f970 - 0x1000f9ba
int32_t function_1000f970(int32_t * a1, int32_t a2) {
    // 0x1000f970
    if (g121 != 0) {
        // 0x1000f979
        if (g150 == 0) {
            // 0x1000f982
            g1 = function_1000fa20();
            g150 = 1;
        }
    }
    // 0x1000f98e
    g4 = g118;
    if (g118 == 0 || g149 != 0) {
        // 0x1000f9b9
        return g1;
    }
    // 0x1000f9a1
    g1 = *(int32_t *)g118;
    g149 = 1;
    return function_1000f9f0(&g151);
}

// Address range: 0x1000f9c0 - 0x1000f9e7
int32_t function_1000f9c0(void) {
    // 0x1000f9c0
    g4 = g118;
    if (g118 == 0) {
        // 0x1000f9e6
        return g1;
    }
    // 0x1000f9ca
    if (g149 != 0) {
        // 0x1000f9d3
        g1 = *(int32_t *)g118;
        g149 = 0;
    }
    // 0x1000f9e6
    return g1;
}

// Address range: 0x1000f9f0 - 0x1000fa17
int32_t function_1000f9f0(int32_t * a1) {
    int32_t v1 = g7; // bp-4
    int32_t v2 = &v1; // 0x1000f9f0
    if (g152 == 0) {
        // 0x1000fa15
        g7 = *(int32_t *)v2;
        return g1;
    }
    g4 = g118;
    g1 = *(int32_t *)g118;
    int32_t v3 = v2 - 4; // 0x1000fa0b
    *(int32_t *)v3 = g152;
    int32_t v4 = *(int32_t *)(g152 + 12); // 0x1000fa0e
    while (v4 != 0) {
        // 0x1000fa00
        g4 = g118;
        g1 = *(int32_t *)g118;
        v3 -= 4;
        *(int32_t *)v3 = v4;
        v4 += 12;
    }
    // 0x1000fa15
    g7 = *(int32_t *)v3;
    return g1;
}

// Address range: 0x1000fa20 - 0x1000fa4e
int32_t function_1000fa20(void) {
    int32_t v1 = g7; // bp-4
    int32_t v2 = &v1; // 0x1000fa42
    int32_t v3 = 0; // 0x1000fa42
    g4 = g121;
    *(int32_t *)(v2 - 4) = v3;
    int32_t v4 = v2 - 8; // 0x1000fa43
    int32_t * v5 = (int32_t *)v4; // 0x1000fa43
    *v5 = *(int32_t *)(4 * v3 + (int32_t)&g153);
    int32_t v6 = 1; // 0x1000fa46
    while (v6 < 5) {
        // 0x1000fa30
        v2 = v4;
        v3 = v6;
        g4 = g121;
        *(int32_t *)(v2 - 4) = v3;
        v4 = v2 - 8;
        v5 = (int32_t *)v4;
        *v5 = *(int32_t *)(4 * v3 + (int32_t)&g153);
        v6++;
    }
    // 0x1000fa4c
    g7 = *v5;
    return *(int32_t *)(*(int32_t *)g121 + 40);
}

// Address range: 0x1000fa50 - 0x1000fa51
// From class:    CResListGenerator
// Type:          virtual member function
int32_t __heap_term(void) {
    // 0x1000fa50
    return g1;
}

// Address range: 0x1000fa60 - 0x1000fa65
int32_t function_1000fa60(int32_t a1) {
    // 0x1000fa60
    int32_t v1; // edx
    return v1 - 1;
}

// Address range: 0x1000fde0 - 0x1000fde9
int32_t function_1000fde0(void) {
    // 0x1000fde0
    g4 = 7;
    return __unlock(7);
}

// Address range: 0x1000ffd9 - 0x1000ffe2
int32_t function_1000ffd9(void) {
    // 0x1000ffd9
    g4 = 7;
    return __unlock(7);
}

// Address range: 0x10010171 - 0x1001017a
int32_t function_10010171(void) {
    // 0x10010171
    g4 = 7;
    return __unlock(7);
}

// Address range: 0x10010248 - 0x10010251
int32_t function_10010248(void) {
    // 0x10010248
    g4 = 7;
    return __unlock(7);
}

// Address range: 0x10010aca - 0x10010ad2
int32_t function_10010aca(void) {
    // 0x10010aca
    int32_t v1;
    return __unlock_file(v1);
}

// Address range: 0x10010d12 - 0x10010d1c
int32_t function_10010d12(void) {
    // 0x10010d12
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 + 24); // 0x10010d12
    int32_t result = __unlock_file(v2); // 0x10010d15
    g4 = v2;
    return result;
}

// Address range: 0x10010f28 - 0x10010f32
int32_t function_10010f28(void) {
    // 0x10010f28
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x10010f28
    int32_t result = __unlock_file(v2); // 0x10010f2b
    g4 = v2;
    return result;
}

// Address range: 0x1001102e - 0x10011038
int32_t function_1001102e(void) {
    // 0x1001102e
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x1001102e
    int32_t result = __unlock_file(v2); // 0x10011031
    g4 = v2;
    return result;
}

// Address range: 0x100110ea - 0x100110f4
int32_t function_100110ea(void) {
    // 0x100110ea
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x100110ea
    int32_t result = __unlock_file(v2); // 0x100110ed
    g4 = v2;
    return result;
}

// Address range: 0x100110f4 - 0x1001110b
int32_t function_100110f4(int32_t a1, char * a2, int32_t a3, int32_t a4) {
    // 0x100110f4
    return __fsopen(a1, (int32_t)a2, 64, g2);
}

// Address range: 0x10011126 - 0x1001113c
int32_t function_10011126(void) {
    // 0x10011126
    return __chkstk();
}

// Address range: 0x1001162a - 0x10011634
int32_t function_1001162a(void) {
    // 0x1001162a
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 - 28); // 0x1001162a
    int32_t result = __unlock_file(v2); // 0x1001162d
    g4 = v2;
    return result;
}

// Address range: 0x1001165a - 0x10011660
int32_t ___iob_func(void) {
    // 0x1001165a
    return (int32_t)&g61;
}

// Address range: 0x1001192c - 0x10011932
int32_t function_1001192c(void) {
    // 0x1001192c
    return __unlockexit();
}

// Address range: 0x10011d86 - 0x10011d8f
int32_t __lockexit(void) {
    // 0x10011d86
    g4 = 8;
    return __lock(8);
}

// Address range: 0x10011d8f - 0x10011d98
int32_t __unlockexit(void) {
    // 0x10011d8f
    g4 = 8;
    return __unlock(8);
}

// Address range: 0x10011fb1 - 0x10011fc0
int32_t function_10011fb1(void) {
    // 0x10011fb1
    int32_t v1; // ebp
    int32_t result; // 0x10011fb9
    if (*(int32_t *)(v1 + 16) == 0) {
        // branch -> 0x10011fbf
    } else {
        // 0x10011fb7
        result = __unlock(8);
        g4 = 8;
    }
    // 0x10011fbf
    return result;
}

// Address range: 0x10011fc0 - 0x10011fc6
int32_t function_10011fc0(void) {
    // 0x10011fc0
    return __SEH_epilog4();
}

// Address range: 0x10011fc6 - 0x10011fd7
int32_t function_10011fc6(int32_t a1) {
    // 0x10011fc6
    _doexit(a1, 0, 0);
    // UNREACHABLE
}

// Address range: 0x10011fd7 - 0x10011fdc
int32_t function_10011fd7(int32_t a1) {
    // 0x10011fd7
    int32_t result; // eax
    return result;
}

// Address range: 0x10011fed - 0x10011ff2
int32_t function_10011fed(int32_t a1) {
    // 0x10011fed
    int32_t result; // eax
    return result;
}

// Address range: 0x10011ff2 - 0x10011ffd
int32_t __cexit(void) {
    // 0x10011ff2
    _doexit(0, 0, 1);
    // UNREACHABLE
}

// Address range: 0x10011ffd - 0x10012001
int32_t function_10011ffd(void) {
    // 0x10011ffd
    int32_t result; // eax
    return result;
}

// Address range: 0x100120f8 - 0x1001210c
int32_t function_100120f8(void) {
    // 0x100120f8
    int32_t result; // eax
    int32_t v1;
    int32_t v2;
    if (*(int32_t *)(v1 + 16) != v2) {
        // 0x1001210b
        return result;
    }
    // 0x100120fd
    if (g69 != -1) {
        // 0x10012106
        result = __mtterm();
    }
    // 0x1001210b
    return result;
}

// Address range: 0x1001210c - 0x1001210e
int32_t function_1001210c(void) {
    // 0x1001210c
    int32_t result; // eax
    return result;
}

// Address range: 0x10012330 - 0x10012343
int32_t function_10012330(void) {
    int32_t v1 = ___iob_func() + 32; // 0x10012335
    int32_t result = __unlock_file2(1, v1); // 0x1001233b
    g4 = v1;
    return result;
}

// Address range: 0x10012360 - 0x100123e6
int32_t function_10012360(int32_t result, char * a2) {
    int32_t v1 = (int32_t)a2; // 0x10012360
    g4 = v1;
    int32_t v2 = g7; // 0x10012366
    unsigned char result2 = *a2; // 0x10012367
    if (result2 == 0) {
        // 0x100123e0
        return result;
    }
    char v3 = *(char *)(v1 + 1); // 0x10012371
    if (v3 == 0) {
        // 0x100123cd
        return result2;
    }
    int32_t v4 = g1; // 0x1001237e
    int32_t v5; // 0x1001238d
    int32_t v6; // 0x100123d9
    int32_t v7; // 0x1001238b
    int32_t v8; // 0x1001239e
    while (true) {
      lab_0x10012378:
        // 0x10012378
        g4 = v1;
        unsigned char v9 = *(char *)result; // 0x1001237e
        int32_t v10 = (int32_t)v9 | v4 & -256; // 0x1001237e
        int32_t v11 = result + 1; // 0x10012380
        if (v9 == result2) {
            v8 = v10;
            v6 = v11;
            goto lab_0x1001239e;
        } else {
            if (v9 == 0) {
                // break -> 0x10012398
                break;
            }
            v7 = v10;
            v5 = v11;
            goto lab_0x1001238b;
        }
    }
  lab_0x10012398:
    // 0x10012398
    g7 = v2;
    return 0;
  lab_0x1001239e:;
    unsigned char v12 = *(char *)v6; // 0x1001239e
    int32_t v13 = (int32_t)v12 | v8 & -256; // 0x1001239e
    int32_t v14 = v6 + 1; // 0x100123a0
    if (v12 == v3) {
        while (true) {
          lab_0x100123aa:;
            int32_t v15 = v1 + 2; // 0x100123aa
            unsigned char v16 = *(char *)v15; // 0x100123aa
            if (v16 == 0) {
                // 0x100123d9
                g7 = v2;
                return v6 - 1;
            }
            unsigned char v17 = *(char *)v14; // 0x100123b1
            int32_t v18 = 256 * (int32_t)v16 | v13 & -0x10000; // 0x100123b1
            int32_t v19 = v14 + 2; // 0x100123b3
            if (v17 != v16) {
                v4 = (int32_t)v17 | v18;
                result = v6;
                // continue (via goto) -> 0x10012378
                goto lab_0x10012378;
            }
            unsigned char v20 = *(char *)(v1 + 3); // 0x100123ba
            if (v20 == 0) {
                // 0x100123d9
                g7 = v2;
                return v6 - 1;
            }
            unsigned char v21 = *(char *)(v14 + 1); // 0x100123c1
            int32_t v22 = 256 * (int32_t)v21 | (int32_t)v20 | v18 & -0x10000; // 0x100123c1
            g4 = v15;
            if (v20 == v21) {
                v14 = v19;
                v13 = v22;
                v1 = v15;
                goto lab_0x100123aa;
            } else {
                v4 = v22;
                result = v6;
                goto lab_0x10012378;
            }
        }
    }
    goto lab_0x10012390;
  lab_0x10012390:;
    char v23 = v13; // 0x10012390
    if (v23 == result2) {
        v8 = v13;
        v6 = v14;
        goto lab_0x1001239e;
    } else {
        if (v23 == 0) {
            // break -> 0x10012398
            goto lab_0x10012398;
        }
        v7 = v13;
        v5 = v14;
        goto lab_0x1001238b;
    }
  lab_0x1001238b:
    // 0x1001238b
    v13 = (int32_t)*(char *)v5 | v7 & -256;
    v14 = v5 + 1;
    goto lab_0x10012390;
}

// Address range: 0x100128e0 - 0x100128eb
int32_t function_100128e0(int32_t a1) {
    // 0x100128e0
    return __atoi64();
}

// Address range: 0x10012c64 - 0x10012c7b
int32_t function_10012c64(int32_t a1, int32_t a2) {
    float64_t v1 = __strtod_l((char *)a1, (char **)a2, NULL); // 0x10012c71
    g163 = v1;
    return (float32_t)v1;
}

// Address range: 0x10012c91 - 0x10012c9c
int32_t function_10012c91(int32_t a1) {
    // 0x10012c91
    return __wtol();
}

// Address range: 0x10012dd7 - 0x10012dea
int32_t function_10012dd7(int32_t a1) {
    // 0x10012dd7
    g4 = 0;
    return __atof_l(a1, 0, g2);
}

// Address range: 0x100144ef - 0x100144fe
int32_t __initp_misc_invarg(int32_t result) {
    // 0x100144ef
    g154 = result;
    return result;
}

// Address range: 0x100147fa - 0x10014803
int32_t function_100147fa(void) {
    // 0x100147fa
    g4 = 10;
    return __unlock(10);
}

// Address range: 0x10014a2f - 0x10014a3e
int32_t _40___security_check_cookie_40_4(void) {
    // 0x10014a2f
    if (g4 != g65) {
        // 0x10014a39
        return ___report_gsfailure();
    }
    // 0x10014a37
    return g1;
}

// Address range: 0x100151a3 - 0x10015205
int32_t function_100151a3(int32_t a1, int32_t result) {
    int32_t v1 = g7; // 0x100151ad
    if ((*(char *)(g3 + 12) & 64) != 0) {
        // 0x100151b7
        if (*(int32_t *)(g3 + 8) == 0) {
            // 0x100151bd
            *(int32_t *)g1 = 2 * result;
            // 0x10015202
            g7 = v1;
            return result;
        }
    }
    int32_t * v2 = (int32_t *)g5; // 0x100151c4
    *v2 = 0;
    if (result > 0) {
        int32_t result2; // eax
        while (true) {
            int32_t v3 = result - 1; // 0x100151d2
            g4 = g3;
            int32_t v4 = _write_char(); // 0x100151d7
            result2 = v4;
            if (v4 == -1) {
                if (g5 != 42) {
                    // break -> 0x100151f8
                    break;
                }
                // 0x100151e9
                g4 = g3;
                result2 = _write_char();
            }
            if (v3 >= 0 != v3 != 0) {
                // break -> 0x100151f8
                break;
            }
            result = v3;
            a1++;
        }
        if (g5 != 0) {
            // 0x10015202
            g7 = v1;
            return result2;
        }
    }
    // 0x100151fd
    *v2 = g5;
    // 0x10015202
    g7 = v1;
    return g5;
}

// Address range: 0x10015205 - 0x10015dec
int32_t __output_l(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t v1; // ebp
    int32_t v2 = &v1; // 0x10015207
    g2 = v2;
    int32_t Ptr; // bp-644
    int32_t v3 = &Ptr; // 0x1001520a
    int32_t v4 = g65 ^ v2; // 0x10015215
    int32_t v5; // bp-608
    int32_t v6 = &v5; // 0x1001522b
    g4 = v6;
    int32_t v7; // esi
    _3f__3f_0_LocaleUpdate_40__40_QAE_40_PAUlocaleinfo_struct_40__40__40_Z(a3, a4, v7, a2);
    int32_t v8 = (int32_t)__errno(); // 0x1001526c
    int32_t v9; // edx
    if (a1 != 0) {
        // 0x100152a6
        if ((*(char *)(a1 + 12) & 64) != 0) {
            goto lab_0x1001530a;
        } else {
            int32_t v10 = __fileno((struct _IO_FILE *)a1); // 0x100152ad
            g4 = a1;
            v9 = &g68;
            int32_t v11;
            if (v10 != -1) {
                if (v10 != -2) {
                    int32_t v12 = 64 * v10 & 1984; // 0x100152cc
                    g4 = v12;
                    int32_t v13 = *(int32_t *)(4 * v10 / 32 + (int32_t)&g160); // 0x100152cf
                    v11 = v13 + v12;
                } else {
                    v11 = &g68;
                }
            } else {
                v11 = &g68;
            }
            // 0x100152da
            g4 = v11;
            if ((*(char *)(v11 + 36) & 127) != 0) {
                goto lab_0x1001527b_2;
            } else {
                int32_t v14;
                if (v10 != -1) {
                    if (v10 != -2) {
                        int32_t v15 = v10 / 32; // 0x100152ef
                        g4 = v15;
                        int32_t v16 = *(int32_t *)(4 * v15 + (int32_t)&g160); // 0x100152f5
                        v14 = v16 + (64 * v10 & 1984);
                    } else {
                        v14 = &g68;
                    }
                } else {
                    v14 = &g68;
                }
                // 0x10015300
                if (*(char *)(v14 + 36) <= -1) {
                    goto lab_0x1001527b_2;
                } else {
                    goto lab_0x1001530a;
                }
            }
        }
    } else {
        goto lab_0x1001527b_2;
    }
  lab_0x1001527b_2:
    // 0x1001527b
    *__errno() = 22;
    __invalid_parameter_noinfo();
    int32_t v17;
    char v18;
    if (v18 != 0) {
        int32_t * v19 = (int32_t *)(v17 + 112); // 0x1001529a
        *v19 = *v19 & -3;
    }
    int32_t v20 = -1;
    goto lab_0x10015ddd;
  lab_0x10015d48:;
    // 0x10015d48
    char v21;
    char v22;
    int64_t v23;
    int64_t v24;
    int32_t v25;
    int32_t v26;
    int32_t v27;
    int32_t v28;
    int32_t v29; // bp-552
    int32_t v30;
    int32_t v31;
    int32_t v32;
    int32_t v33;
    int32_t v34;
    int32_t v35;
    int32_t v36;
    int32_t v37;
    int32_t v38;
    int32_t v39;
    int32_t v40; // 0x10015c17
    if (v29 >= 0) {
        if ((v21 & 4) != 0) {
            // 0x10015d5a
            if (v40 >= 0 == (v40 != 0)) {
                int32_t v41 = v40; // 0x10015d70534
                while (true) {
                    // 0x10015d62
                    g4 = a1;
                    a4 = v41 - 1;
                    _write_char();
                    if (v29 == -1) {
                        v26 = v25;
                        v37 = v36;
                        v22 = v21;
                        v24 = v23;
                        v31 = v30;
                        v35 = v34;
                        v33 = v32;
                        v39 = v38;
                        v28 = v27;
                        // break -> 0x10015d83
                        break;
                    }
                    int32_t v42 = a4;
                    if (v42 >= 0 != v42 != 0) {
                        v26 = v25;
                        v37 = v36;
                        v22 = v21;
                        v24 = v23;
                        v31 = v30;
                        v35 = v34;
                        v33 = v32;
                        v39 = v38;
                        v28 = v27;
                        // break -> 0x10015d83
                        break;
                    }
                    v41 = v42;
                }
            } else {
                v26 = v25;
                v37 = v36;
                v22 = v21;
                v24 = v23;
                v31 = v30;
                v35 = v34;
                v33 = v32;
                v39 = v38;
                v28 = v27;
            }
        } else {
            v26 = v25;
            v37 = v36;
            v22 = v21;
            v24 = v23;
            v31 = v30;
            v35 = v34;
            v33 = v32;
            v39 = v38;
            v28 = v27;
        }
    } else {
        v26 = v25;
        v37 = v36;
        v22 = v21;
        v24 = v23;
        v31 = v30;
        v35 = v34;
        v33 = v32;
        v39 = v38;
        v28 = v27;
    }
    goto lab_0x10015d83;
  lab_0x10015d9f:;
    // 0x10015d9f
    int32_t v57;
    unsigned char v59 = *(char *)v57; // 0x10015da5
    if (v59 == 0) {
        // break -> 0x10015dc4
        goto lab_0x10015dc4_2;
    }
    // 0x10015db1
    int32_t v46;
    g4 = v46;
    int32_t v47;
    a4 = v47;
    int32_t v60 = g6 & -256 | (int32_t)v59; // 0x10015dbd
    g6 = v60;
    int32_t v58 = v57 + 1; // 0x10015336
    a2 = v58;
    g7 = 0;
    if (v29 < 0) {
        // break -> 0x10015dc4
        goto lab_0x10015dc4_2;
    }
    int32_t v54;
    int32_t v61 = v54;
    int32_t v55;
    int32_t v62 = v55;
    int32_t v53;
    int32_t v63 = v53;
    int64_t v52;
    int64_t v64 = v52;
    int64_t v50;
    int64_t v51 = v50;
    char v49;
    char v65 = v49;
    int32_t v48;
    int32_t v66 = v48;
    int32_t v67 = v46; // 0x10015363536
    goto lab_0x1001534b;
  lab_0x10015587:;
    // 0x10015587
    int32_t * v71; // 0x1001536b
    *v71 = v6;
    *(int32_t *)(g8 - 8) = g6 & 255;
    int32_t v74;
    int32_t v130 = __isleadbyte_l(v74); // 0x10015598
    g4 = *(int32_t *)g8;
    g4 = *(int32_t *)(g8 + 4);
    int32_t v131;
    if (v130 != 0) {
        // 0x100155a9
        g4 = a1;
        _write_char();
        int32_t v132 = a2; // 0x100155ba
        if (*(char *)v132 == 0) {
            goto lab_0x1001527b_2;
        }
        v131 = v132 + 1;
    } else {
        v131 = v58;
    }
    // 0x100155cb
    g4 = a1;
    _write_char();
    v46 = v74;
    v48 = v66;
    v49 = v65;
    v50 = v51;
    v52 = v64;
    v53 = v63;
    int32_t v75; // 0x10015587
    v54 = v75 & v61;
    v55 = v62;
    v57 = v131;
    goto lab_0x10015d9f;
  lab_0x1001552f:;
    int32_t v90; // 0x1001550b
    unsigned char v91; // 0x1001550b
    if (v91 != 51) {
        goto lab_0x10015551;
    } else {
        // 0x10015533
        if (*(char *)(v90 + 1) != 50) {
            goto lab_0x10015551;
        } else {
            // 0x10015539
            v46 = 6;
            v48 = v66;
            v49 = v65;
            v50 = v51;
            v52 = v64;
            v53 = v63;
            v54 = v61;
            v55 = v62;
            v57 = v90 + 2;
            goto lab_0x10015d9f;
        }
    }
  lab_0x10015551:
    if (v91 == 100) {
        v46 = 6;
        v48 = v66;
        v49 = v65;
        v50 = v51;
        v52 = v64;
        v53 = v63;
        v54 = v61;
        v55 = v62;
        v57 = v58;
        goto lab_0x10015d9f;
    } else {
        if (v91 == 105) {
            v46 = 6;
            v48 = v66;
            v49 = v65;
            v50 = v51;
            v52 = v64;
            v53 = v63;
            v54 = v61;
            v55 = v62;
            v57 = v58;
            goto lab_0x10015d9f;
        } else {
            if (v91 == 111) {
                v46 = 6;
                v48 = v66;
                v49 = v65;
                v50 = v51;
                v52 = v64;
                v53 = v63;
                v54 = v61;
                v55 = v62;
                v57 = v58;
                goto lab_0x10015d9f;
            } else {
                if (v91 == 117) {
                    v46 = 6;
                    v48 = v66;
                    v49 = v65;
                    v50 = v51;
                    v52 = v64;
                    v53 = v63;
                    v54 = v61;
                    v55 = v62;
                    v57 = v58;
                    goto lab_0x10015d9f;
                } else {
                    if (v91 == 120) {
                        v46 = 6;
                        v48 = v66;
                        v49 = v65;
                        v50 = v51;
                        v52 = v64;
                        v53 = v63;
                        v54 = v61;
                        v55 = v62;
                        v57 = v58;
                        goto lab_0x10015d9f;
                    } else {
                        if (v91 == 88) {
                            v46 = 6;
                            v48 = v66;
                            v49 = v65;
                            v50 = v51;
                            v52 = v64;
                            v53 = v63;
                            v54 = v61;
                            v55 = v62;
                            v57 = v58;
                            goto lab_0x10015d9f;
                        } else {
                            int32_t v133 = g7; // 0x10015581
                            v74 = v133;
                            v75 = v133;
                            goto lab_0x10015587;
                        }
                    }
                }
            }
        }
    }
  lab_0x10015660:;
    int32_t v134 = v64; // 0x10015660
    int32_t v135;
    int32_t v136; // 0x10015bae40
    if (v134 == -1) {
        v135 = 0x7fffffff;
        v136 = 0x7fffffff;
    } else {
        v135 = v134;
        v136 = v134;
    }
    // 0x10015670
    g4 = v135;
    int32_t v137 = a4; // 0x10015670
    int32_t v138 = v137 + 4; // 0x10015670
    int32_t v139 = *(int32_t *)v137; // 0x10015683
    char v119;
    int64_t v120;
    int32_t v117;
    int32_t v140;
    int32_t v124;
    int32_t v121;
    int32_t v122;
    int32_t v118;
    int32_t v123;
    int32_t v56;
    int32_t v141; // 0x10015b86
    int32_t v116; // 0x10015bb8
    if (((int32_t)v65 & 2064) == 0) {
        int32_t v142;
        if (v139 == 0) {
            // 0x10015b94
            v142 = *(int32_t *)&g66;
        } else {
            v142 = v139;
        }
        // 0x10015b9f
        int32_t v143; // 0x10015bb2
        if (v136 != 0) {
            int32_t v144 = v142; // 0x10015bad
            int32_t v145 = v136; // 0x10015ba7
            while (true) {
                int32_t v146 = v145 - 1; // 0x10015ba7
                g4 = v146;
                if (*(char *)v144 == 0) {
                    v143 = v144;
                    // break -> 0x10015bb2
                    break;
                }
                int32_t v147 = v144 + 1; // 0x10015bad
                if (v146 == 0) {
                    v143 = v147;
                    // break -> 0x10015bb2
                    break;
                }
                v144 = v147;
                v145 = v146;
            }
        } else {
            v143 = v142;
        }
        // 0x10015bb2
        v116 = v143 - v142;
        v117 = v138;
        v118 = v66;
        v119 = v65;
        v120 = v64;
        v121 = v63;
        v122 = v61;
        v123 = v56;
        v124 = v142;
        goto lab_0x10015bb8;
    } else {
        if (v139 == 0) {
            // 0x10015696
            v140 = *(int32_t *)&g67;
        } else {
            v140 = v139;
        }
        // 0x100156a1
        if (v136 != 0) {
            int32_t v148 = v140; // 0x10015b7f
            int32_t v149 = v136; // 0x10015b79
            while (true) {
                int32_t v150 = v149 - 1; // 0x10015b79
                g4 = v150;
                if (*(int16_t *)v148 == (int16_t)g7) {
                    // break -> 0x10015b79
                    break;
                }
                int32_t v151 = v148 + 2; // 0x10015b7f
                if (v150 == 0) {
                    v141 = v151;
                    goto lab_0x10015b86;
                }
                v148 = v151;
                v149 = v150;
            }
            v141 = v148;
        } else {
            v141 = v140;
        }
        goto lab_0x10015b86;
    }
  lab_0x10015a13:;
    int32_t v100 = 16; // bp-556
    char v103;
    int32_t v104;
    int32_t v96;
    char v152; // bp-560
    int32_t v105;
    int32_t v102;
    int32_t v97;
    if (v65 <= 255) {
        // 0x10015a2a
        v152 = 48;
        v102 = v97;
        v103 = v65;
        v104 = v96;
        v105 = 2;
    } else {
        v102 = v97;
        v103 = v65;
        v104 = v96;
        v105 = v63;
    }
    goto lab_0x1001585c;
  lab_0x10015852:
    // 0x10015852
    v100 = 10;
    v102 = v66;
    char v94;
    v103 = v94;
    v104 = v64;
    v105 = v63;
    goto lab_0x1001585c;
  lab_0x1001585c:;
    int32_t v153 = v103; // 0x1001585c
    g4 = v153;
    int32_t v154;
    int32_t v155;
    int32_t v156; // 0x10015a9c
    int32_t v157; // 0x10015a9c494
    int32_t v158; // 0x10015a9e495
    int32_t v159; // 0x10015ab6
    int32_t v160; // 0x10015aec
    int32_t v161; // 0x10015a5a
    int32_t v162; // 0x10015a77
    int32_t v163;
    if (v103 > -1) {
        if ((v153 & 0x1000) != 0) {
            goto lab_0x1001586e;
        } else {
            int32_t v164 = a4; // 0x10015a5a
            v161 = v164 + 4;
            a4 = v161;
            if ((v153 & 32) == 0) {
                int32_t v165 = *(int32_t *)v164; // 0x10015a7a
                if ((v153 & 64) == 0) {
                    // 0x10015a8d
                    g6 = 0;
                    v154 = v161;
                    v160 = v165;
                    v159 = 0;
                    goto lab_0x10015aac;
                } else {
                    int32_t v166 = v165 >> 31; // 0x10015a82
                    g6 = v166;
                    v155 = v161;
                    v158 = v166;
                    v157 = v165;
                    goto lab_0x10015a92;
                }
            } else {
                int32_t v167 = v153 & 64; // 0x10015a68
                uint16_t v168 = *(int16_t *)v164; // 0x10015a73
                int32_t v169 = v167 == 0 ? (int32_t)v168 : (int32_t)v168;
                v162 = v169 >> 31;
                g6 = v162;
                v163 = v167;
                v156 = v169;
                goto lab_0x10015a8d;
            }
        }
    } else {
        goto lab_0x1001586e;
    }
  lab_0x10015bb8:
    // 0x10015bb8
    v100 = v116;
    v25 = v117;
    v36 = v118;
    v21 = v119;
    v23 = v120;
    int32_t v95 = v121;
    v34 = v62;
    v32 = v122;
    v38 = v123;
    v27 = v124;
    goto lab_0x10015bbe;
  lab_0x10015b86:
    // 0x10015b86
    v116 = (v141 - v140) / 2;
    v117 = v138;
    v118 = v66;
    v119 = v65;
    v120 = v64;
    v121 = v63;
    v122 = 1;
    v123 = v56;
    v124 = v140;
    goto lab_0x10015bb8;
  lab_0x10015bbe:;
    int32_t v170; // 0x100155d1
    int32_t v171; // 0x10015c5f
    int32_t v172; // 0x10015cb1
    if (v34 != 0) {
        v26 = v25;
        v37 = v36;
        v22 = v21;
        v24 = v23;
        v31 = v95;
        v35 = v34;
        v33 = v32;
        v39 = v38;
        v28 = v27;
        goto lab_0x10015d83;
    } else {
        int32_t v173 = v21; // 0x10015bcb
        g4 = v173;
        if ((v21 & 64) != 0) {
            if ((v173 & 256) == 0) {
                if ((v173 & 1) == 0) {
                    if ((v173 & 2) != 0) {
                        // 0x10015bfa
                        v152 = 32;
                        v30 = 1;
                    } else {
                        v30 = v95;
                    }
                } else {
                    // 0x10015bec
                    v152 = 43;
                    v30 = 1;
                }
            } else {
                // 0x10015bde
                v152 = 45;
                v30 = 1;
            }
        } else {
            v30 = v95;
        }
        // 0x10015c0b
        v40 = (int32_t)v51 - v100 - v30;
        if ((v21 & 12) == 0) {
            // 0x10015c28
            if (v40 >= 0 == (v40 != 0)) {
                int32_t v174 = v40; // 0x10015c3a512
                while (true) {
                    // 0x10015c2c
                    g4 = a1;
                    g7 = v170;
                    a4 = v174 - 1;
                    _write_char();
                    if (v29 == -1) {
                        // break -> 0x10015c4d
                        break;
                    }
                    int32_t v175 = a4;
                    if (v175 >= 0 != v175 != 0) {
                        // break -> 0x10015c4d
                        break;
                    }
                    v174 = v175;
                }
            }
        }
        // 0x10015c4d
        *(int32_t *)(g8 - 4) = v30;
        g5 = v8;
        g3 = a1;
        *(int32_t *)(g8 - 8) = v171;
        g1 = v170;
        function_100151a3((int32_t)&g169, (int32_t)&g169);
        g4 = *(int32_t *)g8;
        g4 = *(int32_t *)(g8 + 4);
        if ((v21 & 8) != 0) {
            if ((v21 & 4) == 0) {
                // 0x10015c85
                if (v40 >= 0 == (v40 != 0)) {
                    while (true) {
                        // 0x10015c8d
                        g7 = v170;
                        g4 = g3;
                        a4 = v40 - 1;
                        _write_char();
                        if (v29 == -1) {
                            // break -> 0x10015caa
                            break;
                        }
                        int32_t v176 = a4;
                        if (v176 >= 0 != v176 != 0) {
                            // break -> 0x10015caa
                            break;
                        }
                        v40 = v176;
                    }
                }
            }
        }
        // 0x10015caa
        v172 = v100;
        if (v32 == 0) {
            goto lab_0x10015d2e;
        } else {
            if (v172 < 1) {
                goto lab_0x10015d2e;
            } else {
                // 0x10015cbd
                g7 = v27;
                while (true) {
                    // 0x10015cc9
                    int32_t v177; // 0x10015cc9
                    uint16_t v178 = *(int16_t *)v177; // 0x10015cc9
                    int32_t v179;
                    int32_t v180 = v179 - 1; // 0x10015ccc
                    int32_t v181; // 0x10015cd2
                    *(int32_t *)(v181 - 4) = (int32_t)v178;
                    *(int32_t *)(v181 - 8) = 6;
                    int32_t v182; // 0x10015cd5
                    *(int32_t *)(v181 - 12) = v182;
                    int32_t v183; // 0x10015cd9
                    *(int32_t *)(v181 - 16) = v183;
                    int32_t v184 = g7; // 0x10015ce0
                    g7 = v184 + 2;
                    int32_t v185 = _wctomb_s((int32_t *)v180, (char *)&g169, (int32_t)&g169, (int16_t)&g169); // 0x10015ce3
                    int32_t v186 = g8; // 0x10015ce8
                    if (v185 != 0) {
                        // break -> 0x10015d25
                        break;
                    }
                    // 0x10015cef
                    int32_t v187; // bp-628
                    int32_t v188 = v187; // 0x10015cef
                    if (v188 == v185) {
                        // break -> 0x10015d25
                        break;
                    }
                    // 0x10015cf7
                    *(int32_t *)(v186 + 12) = v188;
                    g5 = v8;
                    g3 = a1;
                    *(int32_t *)(v186 + 8) = v182;
                    g1 = v170;
                    int32_t v189 = function_100151a3((int32_t)&g169, (int32_t)&g169); // 0x10015d13
                    int32_t v190 = g8; // 0x10015d1f
                    int32_t v191 = *(int32_t *)v190; // 0x10015d1f
                    g4 = v191;
                    int32_t v192 = *(int32_t *)(v190 + 4); // 0x10015d20
                    g4 = v192;
                    if (v180 == 0) {
                        goto lab_0x10015d48;
                    }
                    int32_t v193 = v190 + 8; // 0x10015d20
                    int32_t v194 = g7;
                    v181 = v193;
                    v177 = v194;
                    v179 = v180;
                }
                // 0x10015d25
                v29 = -1;
                goto lab_0x10015d48;
            }
        }
    }
  lab_0x1001586e:;
    int32_t v195 = a4; // 0x1001586e
    int32_t v196 = *(int32_t *)(v195 + 4); // 0x10015870
    g6 = v196;
    int32_t v197 = v195 + 8; // 0x10015873
    a4 = v197;
    v163 = v153 & 64;
    v156 = *(int32_t *)v195;
    v162 = v196;
    v161 = v197;
    goto lab_0x10015a8d;
  lab_0x10015881:;
    // 0x10015881
    int32_t v227; // 0x10015888
    a2 = v227;
    int32_t v237 = v64; // 0x1001589f
    uint32_t v238 = g7; // 0x1001589f
    char v107;
    int64_t v239;
    int32_t v240;
    char * v44; // bp-588
    int32_t v241;
    int32_t v106; // 0x100158b5
    int32_t v242; // 0x1001593d
    if (v237 >= v238) {
        if (v237 != v238) {
            int64_t v243 = v237 > 512 ? 512 : v64;
            int32_t v244 = v243; // 0x100158d4
            if (v244 > 163) {
                int32_t v245 = v244 + 349; // 0x100158e6
                *v71 = v245;
                int32_t v246 = __malloc_crt(512); // 0x100158ed
                g6 = g6 & -256 | (int32_t)v107;
                g4 = *(int32_t *)g8;
                int32_t v247 = g8 + 4; // 0x100158f8
                *(int32_t *)&v44 = v246;
                if (v246 != 0) {
                    // 0x10015903
                    a2 = v246;
                    v242 = v247;
                    v239 = v243;
                    v240 = v246;
                    v241 = v245;
                } else {
                    v242 = v247;
                    v239 = 163;
                    v240 = v227;
                    v241 = 512;
                }
            } else {
                v242 = g8;
                v239 = v243;
                v240 = v227;
                v241 = 512;
            }
        } else {
            // 0x100158b5
            v242 = g8;
            v239 = (char)v106 != 103 ? v64 : 1;
            v240 = v227;
            v241 = 512;
        }
    } else {
        v242 = g8;
        v239 = 6;
        v240 = v227;
        v241 = 512;
    }
    int32_t v248 = a4; // 0x1001591d
    g7 = *(int32_t *)0x10022120;
    Ptr = *(int32_t *)v248;
    *(int32_t *)(v242 - 4) = v6;
    int32_t v108;
    *(int32_t *)(v242 - 8) = v108;
    int32_t v249 = v239; // 0x10015947
    *(int32_t *)(v242 - 12) = v249;
    *(int32_t *)(v242 - 16) = g6;
    *(int32_t *)(v242 - 20) = v241;
    *(int32_t *)(v242 - 24) = a2;
    *(int32_t *)(v242 - 28) = v3;
    *(int32_t *)(v242 - 32) = g62;
    DecodePointer((int32_t *)Ptr);
    int32_t v250 = g8 + 28; // 0x10015972
    int32_t v251 = (int32_t)v65 & 128; // 0x10015975
    int32_t v252; // 0x100159ad
    if (v251 != 0) {
        if (v249 == 0) {
            // 0x10015986
            *(int32_t *)(g8 + 24) = v6;
            *(int32_t *)(g8 + 20) = a2;
            *(int32_t *)(g8 + 16) = g64;
            DecodePointer(&g169);
            g4 = *(int32_t *)g8;
            g4 = *(int32_t *)(g8 + 4);
            v252 = g8 + 8;
        } else {
            v252 = v250;
        }
    } else {
        v252 = v250;
    }
    int32_t v253; // 0x100159d1
    if (v107 == 103) {
        if (v251 == 0) {
            // 0x100159a7
            *(int32_t *)(v252 - 4) = v6;
            *(int32_t *)(v252 - 8) = a2;
            *(int32_t *)(v252 - 12) = g63;
            DecodePointer(&g169);
            g4 = *(int32_t *)g8;
            g4 = *(int32_t *)(g8 + 4);
            v253 = g8 + 8;
        } else {
            v253 = v252;
        }
    } else {
        v253 = v252;
    }
    int32_t v254 = a2; // 0x100159bb
    int32_t v255; // 0x100159ca
    if (*(char *)v254 == 45) {
        // 0x100159c0
        v255 = v254 + 1;
    } else {
        v255 = v240;
    }
    // 0x100159d1
    *(int32_t *)(v253 - 4) = v255;
    int32_t v199 = v248 + 8;
    char v200 = v65 | 64;
    int64_t v201 = v239;
    int32_t v202 = v108;
    int32_t v203 = v255;
    goto lab_0x10015798;
  lab_0x10015613:;
    // 0x10015613
    int32_t v93; // 0x100155e1
    char v256 = (char)v93 + 32; // 0x10015613
    int32_t v257 = (int32_t)v256 | v93 & -256; // 0x10015613
    g6 = v257;
    v106 = v257;
    v107 = v256;
    v108 = 1;
    goto lab_0x10015881;
  lab_0x10015d83:;
    char * v43 = v44; // 0x10015d83
    int32_t v45;
    if (v43 == NULL) {
        // 0x10015d83
        v46 = 7;
        v47 = v26;
        v48 = v37;
        v49 = v22;
        v50 = v51;
        v52 = v24;
        v53 = v31;
        v54 = v33;
        v55 = v35;
        v56 = v39;
        v57 = v58;
        v45 = v28;
    } else {
        // 0x10015d8c
        *(int32_t *)(g8 - 4) = (int32_t)v43;
        _3f__3f_3_40_YAXPAX_40_Z((int32_t)&g169);
        v44 = NULL;
        g4 = *(int32_t *)g8;
        v46 = 7;
        v47 = v26;
        v48 = v37;
        v49 = v22;
        v50 = v51;
        v52 = v24;
        v53 = v31;
        v54 = v33;
        v55 = v35;
        v56 = v39;
        v57 = v58;
        v45 = v28;
    }
    goto lab_0x10015d9f;
  lab_0x10015a8d:
    if (v163 == 0) {
        v154 = v161;
        v160 = v156;
        v159 = v162;
        goto lab_0x10015aac;
    } else {
        v155 = v161;
        v158 = v162;
        v157 = v156;
        goto lab_0x10015a92;
    }
  lab_0x10015798:;
    int32_t v198 = _strlen((char *)&g169); // 0x10015798
    g4 = *(int32_t *)g8;
    v116 = v198;
    v117 = v199;
    v118 = v66;
    v119 = v200;
    v120 = v201;
    v121 = v63;
    v122 = v61;
    v123 = v202;
    v124 = v203;
    goto lab_0x10015bb8;
  lab_0x1001578c:;
    int32_t v204 = *(int32_t *)&g66; // 0x1001578c
    *v71 = v204;
    int32_t v113; // 0x10015744
    v199 = v113;
    v200 = v65;
    v201 = v64;
    v202 = v56;
    v203 = v204;
    goto lab_0x10015798;
  lab_0x10015d2e:
    // 0x10015d2e
    g5 = v8;
    *(int32_t *)(g8 - 4) = v172;
    *(int32_t *)(g8 - 8) = v27;
    g1 = v170;
    function_100151a3((int32_t)&g169, (int32_t)&g169);
    g4 = *(int32_t *)g8;
    g4 = *(int32_t *)(g8 + 4);
    goto lab_0x10015d48;
  lab_0x10015aac:
    // 0x10015aac
    a4 = v159;
    a2 = v160;
    int32_t v205; // 0x10015aee
    if ((v153 & 0x9000) == 0) {
        // 0x10015abc
        a4 = 0;
        v205 = 0;
    } else {
        v205 = v159;
    }
    uint32_t v206 = g7; // 0x10015abe
    char v207;
    int32_t v208;
    if (v104 >= v206) {
        // 0x10015ad2
        v207 = v103 & -9;
        v208 = v104 > 512 ? 512 : v104;
    } else {
        v207 = v103;
        v208 = 1;
    }
    // 0x10015aec
    int32_t v209;
    if ((v205 || v160) == 0) {
        // 0x10015af2
        v209 = v206 & v105;
    } else {
        v209 = v105;
    }
    int32_t v210 = v208;
    int32_t v211; // 0x10015af8
    int32_t v212 = v211; // 0x10015b43
    int32_t v213; // 0x10015b01
    while (true) {
        // 0x10015afb
        v7 = v212;
        v213 = v210 - 1;
        if (v210 >= 0 != v210 != 0) {
            // 0x10015b0b
            if ((a4 || a2) == 0) {
                // break -> 0x10015b3e
                break;
            }
        }
        int32_t v214 = v100; // 0x10015b11
        int32_t v215 = v214 >> 31; // 0x10015b17
        g6 = v215;
        *(int32_t *)(g8 - 4) = v215;
        *(int32_t *)(g8 - 8) = v214;
        *(int32_t *)(g8 - 12) = a4;
        *(int32_t *)(g8 - 16) = a2;
        int32_t v216 = g4 + 48; // 0x10015b21
        g4 = v216;
        a2 = __aulldvrm(v213);
        a4 = g6;
        int32_t v217; // 0x10015b33
        if ((char)v216 > 57) {
            // 0x10015b33
            v217 = v216 + v102;
            g4 = v217;
        } else {
            v217 = v216;
        }
        // 0x10015b39
        *(char *)v7 = (char)v217;
        v210 = v213;
        v212 = v7 - 1;
    }
    int64_t v218 = v213;
    int32_t v219 = v211 - v212; // 0x10015b41
    int32_t v220 = v212 + 1; // 0x10015b43
    g7 = v220;
    v100 = v219;
    if (((int32_t)v207 & 512) == 0) {
        v25 = v154;
        v36 = v102;
        v21 = v207;
        v23 = v218;
        v95 = v209;
        v34 = v62;
        v32 = v61;
        v38 = v56;
        v27 = v220;
        goto lab_0x10015bbe;
    } else {
        if (v219 == 0) {
            goto lab_0x10015b67;
        } else {
            // 0x10015b60
            g4 = v220;
            if (*(char *)v220 == 48) {
                v25 = v154;
                v36 = v102;
                v21 = v207;
                v23 = v218;
                v95 = v209;
                v34 = v62;
                v32 = v61;
                v38 = v56;
                v27 = v220;
                goto lab_0x10015bbe;
            } else {
                goto lab_0x10015b67;
            }
        }
    }
  lab_0x10015a92:
    if (v158 >= 0 != v158 != 0) {
        if (v158 >= 0) {
            v154 = v155;
            v160 = v157;
            v159 = v158;
        } else {
            int32_t v221 = -(((int32_t)(v157 != 0) + v158 + g7)); // 0x10015aa0
            g6 = v221;
            v154 = v155;
            v160 = -v157;
            v159 = v221;
        }
    } else {
        v154 = v155;
        v160 = v157;
        v159 = v158;
    }
    goto lab_0x10015aac;
  lab_0x100156d9:;
    int32_t v222 = a4; // 0x100156d9
    int32_t v223 = v222 + 4; // 0x100156d9
    int32_t v224; // bp-528
    int32_t v225;
    int32_t v127; // 0x100156cc
    int32_t v226; // 0x100156ff
    int32_t v128;
    if ((v128 & 2064) == 0) {
        // 0x1001571e
        v224 = (int32_t)*(char *)v222 | v127 & -256;
        v100 = 1;
        v225 = v62;
    } else {
        // 0x100156ee
        *v71 = (int32_t)*(int16_t *)v222;
        *(int32_t *)(g8 - 8) = 512;
        *(int32_t *)(g8 - 12) = v227;
        *(int32_t *)(g8 - 16) = v226;
        int32_t v228 = _wctomb_s((int32_t *)v223, (char *)&g169, (int32_t)&g169, (int16_t)&g169); // 0x10015706
        v225 = v228 == 0 ? v62 : 1;
    }
    // 0x10015731
    v25 = v223;
    v36 = v66;
    v21 = v65;
    v23 = v64;
    v95 = v63;
    v34 = v225;
    v32 = v61;
    v38 = v56;
    v27 = v227;
    goto lab_0x10015bbe;
  lab_0x10015b67:
    // 0x10015b67
    g4 = v212;
    *(char *)v212 = 48;
    v116 = v219 + 1;
    v117 = v154;
    v118 = v102;
    v119 = v207;
    v120 = v218;
    v121 = v209;
    v122 = v61;
    v123 = v56;
    v124 = v212;
    goto lab_0x10015bb8;
  lab_0x1001530a:
    // 0x1001530a
    g4 = 0;
    int32_t v229 = a2; // 0x1001530c
    if (v229 == 0) {
        goto lab_0x1001527b_2;
    } else {
        unsigned char v230 = *(char *)v229; // 0x10015314
        int32_t v231 = v9 & -256 | (int32_t)v230; // 0x10015314
        g6 = v231;
        v29 = 0;
        v100 = 0;
        v44 = NULL;
        if (v230 != 0) {
            // 0x10015336
            v170 = &v29;
            v171 = &v152;
            int32_t v232; // bp-17
            v211 = &v232;
            v227 = &v224;
            v226 = &v100;
            int32_t v233 = v229 + 1; // 0x10015336535
            a2 = v233;
            g7 = 0;
            v58 = v233;
            int32_t v234;
            v45 = v234;
            int32_t v235;
            v56 = v235;
            v59 = v230;
            v61 = 0;
            v62 = 0;
            v63 = 0;
            v64 = 0;
            v51 = 0;
            v65 = 0;
            v66 = 0;
            v47 = a4;
            v60 = v231;
            v67 = 0;
            while (true) {
              lab_0x1001534b:;
                // 0x1001534b
                int32_t v68;
                if ((char)(v60 - 32) < 89) {
                    char v69 = *(char *)(v60 + (int32_t)&g37); // 0x10015355
                    v68 = (int32_t)v69 & 15;
                } else {
                    v68 = 0;
                }
                char v70 = *(char *)(v67 + (int32_t)&g38 + 8 * v68); // 0x10015363
                v71 = (int32_t *)(g8 - 4);
                *v71 = 7;
                int32_t v72 = (int32_t)v70 / 16; // 0x1001536d
                int32_t v73 = *v71; // 0x10015370
                g4 = v73;
                g165 = v72;
                switch (v72) {
                    case 0: {
                        // 0x10015363
                        v74 = 0;
                        v75 = g7;
                        goto lab_0x10015587;
                    }
                    case 1: {
                        int32_t v76 = g7; // 0x1001538d
                        v46 = 1;
                        v48 = v66;
                        v49 = v76;
                        v50 = v76;
                        v52 = -1;
                        v53 = v76;
                        v54 = v76;
                        v55 = v76;
                        v56 = v76;
                        v57 = v58;
                        goto lab_0x10015d9f;
                    }
                    case 2: {
                        int32_t v77 = g6; // 0x100153b6
                        if (v77 == 32) {
                            char v78 = v65 | 2; // 0x10015408
                            v46 = 2;
                            v48 = v66;
                            v49 = v78;
                            v50 = v51;
                            v52 = v64;
                            v53 = v63;
                            v54 = v61;
                            v55 = v62;
                            v57 = v58;
                        } else {
                            // 0x100153be
                            if (v77 == 35) {
                                // 0x100153f9
                                v46 = 2;
                                v48 = v66;
                                v49 = v65 | -128;
                                v50 = v51;
                                v52 = v64;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            } else {
                                // 0x100153c3
                                if (v77 == 43) {
                                    // 0x100153ed
                                    v46 = 2;
                                    v48 = v66;
                                    v49 = v65 | 1;
                                    v50 = v51;
                                    v52 = v64;
                                    v53 = v63;
                                    v54 = v61;
                                    v55 = v62;
                                    v57 = v58;
                                } else {
                                    // 0x100153c8
                                    if (v77 == 45) {
                                        // 0x100153e1
                                        v46 = 2;
                                        v48 = v66;
                                        v49 = v65 | 4;
                                        v50 = v51;
                                        v52 = v64;
                                        v53 = v63;
                                        v54 = v61;
                                        v55 = v62;
                                        v57 = v58;
                                    } else {
                                        // 0x100153cc
                                        if (v77 == 48) {
                                            // 0x100153d5
                                            v46 = 2;
                                            v48 = v66;
                                            v49 = v65 | 8;
                                            v50 = v51;
                                            v52 = v64;
                                            v53 = v63;
                                            v54 = v61;
                                            v55 = v62;
                                            v57 = v58;
                                        } else {
                                            v46 = 2;
                                            v48 = v66;
                                            v49 = v65;
                                            v50 = v51;
                                            v52 = v64;
                                            v53 = v63;
                                            v54 = v61;
                                            v55 = v62;
                                            v57 = v58;
                                        }
                                    }
                                }
                            }
                        }
                        goto lab_0x10015d9f;
                    }
                    case 3: {
                        int32_t v79 = g6; // 0x10015414
                        if ((char)v79 != 42) {
                            // 0x10015445
                            g4 = v79;
                            int32_t v80 = (int32_t)(10 * 0x100000000 * v51 / 0x100000000) - 48 + v79; // 0x10015451
                            v46 = 3;
                            v48 = v66;
                            v49 = v65;
                            v50 = v80;
                            v52 = v64;
                            v53 = v63;
                            v54 = v61;
                            v55 = v62;
                            v57 = v58;
                        } else {
                            int32_t v81 = a4; // 0x10015419
                            int32_t v82 = v81 + 4; // 0x10015419
                            int32_t v83 = *(int32_t *)v81; // 0x10015422
                            if (v83 < g7) {
                                // 0x10015433
                                v46 = 3;
                                v47 = v82;
                                v48 = v66;
                                v49 = v65 | 4;
                                v50 = -v83;
                                v52 = v64;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            } else {
                                v46 = 3;
                                v47 = v82;
                                v48 = v66;
                                v49 = v65;
                                v50 = v83;
                                v52 = v64;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            }
                        }
                        goto lab_0x10015d9f;
                    }
                    case 4: {
                        // 0x10015460
                        v46 = 4;
                        v48 = v66;
                        v49 = v65;
                        v50 = v51;
                        v52 = g7;
                        v53 = v63;
                        v54 = v61;
                        v55 = v62;
                        v57 = v58;
                        goto lab_0x10015d9f;
                    }
                    case 5: {
                        int32_t v84 = g6; // 0x1001546b
                        if ((char)v84 != 42) {
                            // 0x10015496
                            g4 = v84;
                            int32_t v85 = (int32_t)(10 * 0x100000000 * v64 / 0x100000000) - 48 + v84; // 0x100154a2
                            v46 = 5;
                            v48 = v66;
                            v49 = v65;
                            v50 = v51;
                            v52 = v85;
                            v53 = v63;
                            v54 = v61;
                            v55 = v62;
                            v57 = v58;
                        } else {
                            int32_t v86 = a4; // 0x10015470
                            int32_t v87 = v86 + 4; // 0x10015470
                            int32_t v88 = *(int32_t *)v86; // 0x10015479
                            if (v88 < g7) {
                                v46 = 5;
                                v47 = v87;
                                v48 = v66;
                                v49 = v65;
                                v50 = v51;
                                v52 = -1;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            } else {
                                v46 = 5;
                                v47 = v87;
                                v48 = v66;
                                v49 = v65;
                                v50 = v51;
                                v52 = v88;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            }
                        }
                        goto lab_0x10015d9f;
                    }
                    case 6: {
                        char v89 = g6; // 0x100154b1
                        if (v89 == 73) {
                            // 0x1001550b
                            v90 = a2;
                            v91 = *(char *)v90;
                            if (v91 != 54) {
                                goto lab_0x1001552f;
                            } else {
                                // 0x10015511
                                if (*(char *)(v90 + 1) != 52) {
                                    goto lab_0x1001552f;
                                } else {
                                    // 0x10015517
                                    v46 = 6;
                                    v48 = v66;
                                    v49 = v65;
                                    v50 = v51;
                                    v52 = v64;
                                    v53 = v63;
                                    v54 = v61;
                                    v55 = v62;
                                    v57 = v90 + 2;
                                    goto lab_0x10015d9f;
                                }
                            }
                        } else {
                            if (v89 == 104) {
                                // 0x100154ff
                                v46 = 6;
                                v48 = v66;
                                v49 = v65 | 32;
                                v50 = v51;
                                v52 = v64;
                                v53 = v63;
                                v54 = v61;
                                v55 = v62;
                                v57 = v58;
                            } else {
                                if (v89 == 108) {
                                    int32_t v92 = a2; // 0x100154d8
                                    if (*(char *)v92 != 108) {
                                        // 0x100154f3
                                        v46 = 6;
                                        v48 = v66;
                                        v49 = v65 | 16;
                                        v50 = v51;
                                        v52 = v64;
                                        v53 = v63;
                                        v54 = v61;
                                        v55 = v62;
                                        v57 = v58;
                                    } else {
                                        // 0x100154dd
                                        v46 = 6;
                                        v48 = v66;
                                        v49 = v65;
                                        v50 = v51;
                                        v52 = v64;
                                        v53 = v63;
                                        v54 = v61;
                                        v55 = v62;
                                        v57 = v92 + 1;
                                    }
                                } else {
                                    if (v89 == 119) {
                                        v46 = 6;
                                        v48 = v66;
                                        v49 = v65;
                                        v50 = v51;
                                        v52 = v64;
                                        v53 = v63;
                                        v54 = v61;
                                        v55 = v62;
                                        v57 = v58;
                                    } else {
                                        v46 = 6;
                                        v48 = v66;
                                        v49 = v65;
                                        v50 = v51;
                                        v52 = v64;
                                        v53 = v63;
                                        v54 = v61;
                                        v55 = v62;
                                        v57 = v58;
                                    }
                                }
                            }
                            goto lab_0x10015d9f;
                        }
                    }
                    case 7: {
                        // 0x100155e1
                        v93 = g6;
                        if (v93 > 100) {
                            if (v93 > 112) {
                                // 0x100159e9
                                if (v93 == 115) {
                                    goto lab_0x10015660;
                                } else {
                                    // 0x100159f2
                                    if (v93 == 117) {
                                        v94 = v65;
                                        goto lab_0x10015852;
                                    } else {
                                        // 0x100159fa
                                        if (v93 != 120) {
                                            v25 = v47;
                                            v36 = v66;
                                            v21 = v65;
                                            v23 = v64;
                                            v95 = v63;
                                            v34 = v62;
                                            v32 = v61;
                                            v38 = v56;
                                            v27 = v45;
                                            goto lab_0x10015bbe;
                                        } else {
                                            // 0x10015a03
                                            a4 = v47;
                                            v96 = v64;
                                            v97 = 39;
                                            goto lab_0x10015a13;
                                        }
                                    }
                                }
                            } else {
                                if (v93 == 112) {
                                    v96 = 8;
                                    v97 = v73;
                                    goto lab_0x10015a13;
                                } else {
                                    if (v93 > 103) {
                                        if (v93 == 105) {
                                            // 0x10015845
                                            a4 = v47;
                                            // 0x1001584b
                                            v94 = v65 | 64;
                                            goto lab_0x10015852;
                                        } else {
                                            if (v93 == 110) {
                                                int32_t v98 = v47 + 4; // 0x100157fc
                                                v7 = *(int32_t *)v47;
                                                if (__get_printf_count_output(7) == 0) {
                                                    goto lab_0x1001527b_2;
                                                }
                                                int32_t v99 = v29; // 0x1001582e
                                                if ((v65 & 32) == 0) {
                                                    // 0x1001582e
                                                    *(int32_t *)v7 = v99;
                                                    v26 = v98;
                                                    v37 = v66;
                                                    v22 = v65;
                                                    v24 = v64;
                                                    v31 = v63;
                                                    v35 = 1;
                                                    v33 = v61;
                                                    v39 = v56;
                                                    v28 = v45;
                                                } else {
                                                    // 0x10015822
                                                    *(int16_t *)v7 = (int16_t)v99;
                                                    v26 = v98;
                                                    v37 = v66;
                                                    v22 = v65;
                                                    v24 = v64;
                                                    v31 = v63;
                                                    v35 = 1;
                                                    v33 = v61;
                                                    v39 = v56;
                                                    v28 = v45;
                                                }
                                                goto lab_0x10015d83;
                                            } else {
                                                if (v93 != 111) {
                                                    v25 = v47;
                                                    v36 = v66;
                                                    v21 = v65;
                                                    v23 = v64;
                                                    v95 = v63;
                                                    v34 = v62;
                                                    v32 = v61;
                                                    v38 = v56;
                                                    v27 = v45;
                                                    goto lab_0x10015bbe;
                                                } else {
                                                    // 0x100157d7
                                                    a4 = v47;
                                                    v100 = 8;
                                                    int32_t v101 = v64;
                                                    if (v65 <= 255) {
                                                        v102 = v66;
                                                        v103 = v65;
                                                        v104 = v101;
                                                        v105 = v63;
                                                    } else {
                                                        v102 = v66;
                                                        v103 = v65;
                                                        v104 = v101;
                                                        v105 = v63;
                                                    }
                                                    goto lab_0x1001585c;
                                                }
                                            }
                                        }
                                    } else {
                                        // 0x1001587b
                                        a4 = v47;
                                        v106 = v93;
                                        v107 = v59;
                                        v108 = v56;
                                        goto lab_0x10015881;
                                    }
                                }
                            }
                        } else {
                            if (v93 == 100) {
                                // 0x1001584b
                                v94 = v65 | 64;
                                goto lab_0x10015852;
                            } else {
                                if (v93 > 83) {
                                    int32_t v109 = v64;
                                    if (v93 == 88) {
                                        v96 = v109;
                                        v97 = v73;
                                        goto lab_0x10015a13;
                                    } else {
                                        int32_t v110 = v93 - 90; // 0x100156c0
                                        if (v110 == 0) {
                                            int32_t v111 = a4; // 0x10015742
                                            int32_t v112 = *(int32_t *)v111; // 0x10015742
                                            v113 = v111 + 4;
                                            if (v112 == 0) {
                                                goto lab_0x1001578c;
                                            } else {
                                                int32_t v114 = *(int32_t *)(v112 + 4); // 0x10015751
                                                g4 = v114;
                                                if (v114 == 0) {
                                                    goto lab_0x1001578c;
                                                } else {
                                                    int32_t v115 = (int32_t)*(int16_t *)v112; // 0x10015762
                                                    if (((int32_t)v65 & 2048) == 0) {
                                                        // 0x10015781
                                                        v116 = v115;
                                                        v117 = v113;
                                                        v118 = v66;
                                                        v119 = v65;
                                                        v120 = v64;
                                                        v121 = v63;
                                                        v122 = g7 & v61;
                                                        v123 = v56;
                                                        v124 = v114;
                                                    } else {
                                                        int32_t v125 = v115 >> 31; // 0x1001576d
                                                        g6 = v125;
                                                        v116 = (v115 - v125) / 2;
                                                        v117 = v113;
                                                        v118 = v66;
                                                        v119 = v65;
                                                        v120 = v64;
                                                        v121 = v63;
                                                        v122 = 1;
                                                        v123 = v56;
                                                        v124 = v114;
                                                    }
                                                    goto lab_0x10015bb8;
                                                }
                                            }
                                        } else {
                                            int32_t v126 = v110 - v73; // 0x100156c3
                                            if (v126 == 0) {
                                                v106 = v93;
                                                v107 = v59;
                                                v108 = v56;
                                                goto lab_0x10015881;
                                            } else {
                                                // 0x100156cb
                                                v127 = v126 - 2;
                                                if (v127 != 0) {
                                                    v25 = v47;
                                                    v36 = v66;
                                                    v21 = v65;
                                                    v23 = v64;
                                                    v95 = v63;
                                                    v34 = v62;
                                                    v32 = v61;
                                                    v38 = v56;
                                                    v27 = v45;
                                                    goto lab_0x10015bbe;
                                                } else {
                                                    // 0x100156d3
                                                    a4 = v47;
                                                    v128 = v65;
                                                    goto lab_0x100156d9;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    if (v93 == 83) {
                                        goto lab_0x10015660;
                                    } else {
                                        // 0x100155fe
                                        if (v93 == 65) {
                                            goto lab_0x10015613;
                                        } else {
                                            // 0x10015603
                                            if (v93 == 67) {
                                                int32_t v129 = v65; // 0x1001562b
                                                if ((v129 & 2096) == 0) {
                                                    v128 = v129;
                                                    v127 = 0;
                                                } else {
                                                    v128 = v129;
                                                    v127 = 0;
                                                }
                                                goto lab_0x100156d9;
                                            } else {
                                                // 0x10015607
                                                if (v93 == 69) {
                                                    goto lab_0x10015613;
                                                } else {
                                                    // 0x1001560b
                                                    if (v93 != 71) {
                                                        v25 = v47;
                                                        v36 = v66;
                                                        v21 = v65;
                                                        v23 = v64;
                                                        v95 = v63;
                                                        v34 = v62;
                                                        v32 = v61;
                                                        v38 = v56;
                                                        v27 = v45;
                                                        goto lab_0x10015bbe;
                                                    } else {
                                                        goto lab_0x10015613;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    default: {
                        v46 = v72;
                        v48 = v66;
                        v49 = v65;
                        v50 = v51;
                        v52 = v64;
                        v53 = v63;
                        v54 = v61;
                        v55 = v62;
                        v57 = v58;
                        goto lab_0x10015d9f;
                    }
                }
            }
        }
      lab_0x10015dc4_2:
        if (v18 != 0) {
            int32_t * v236 = (int32_t *)(v17 + 112); // 0x10015dd3
            *v236 = *v236 & -3;
        }
        // 0x10015dd7
        v20 = v29;
        goto lab_0x10015ddd;
    }
  lab_0x10015ddd:
    // 0x10015ddd
    g1 = v20;
    g4 = v4;
    g4 = g2 ^ v4;
    return _40___security_check_cookie_40_4();
}

// Address range: 0x10015f65 - 0x10015f6d
int32_t function_10015f65(void) {
    // 0x10015f65
    int32_t v1; // ebx
    int32_t result = __unlock_fhandle(v1); // 0x10015f66
    g4 = v1;
    return result;
}

// Address range: 0x10016116 - 0x10016127
int32_t function_10016116(void) {
    // 0x10016116
    int32_t v1; // esi
    int32_t v2 = *(int32_t *)(4 * v1 + g161); // 0x1001611b
    int32_t result = __unlock_file2(v1, v2); // 0x1001611f
    g4 = v2;
    return result;
}

// Address range: 0x10016145 - 0x1001614e
int32_t function_10016145(void) {
    // 0x10016145
    g4 = 1;
    return __unlock(1);
}

// Address range: 0x1001614e - 0x10016157
int32_t __flushall(void) {
    // 0x1001614e
    g4 = 1;
    return _flsall(1);
}

// Address range: 0x1001691e - 0x10016926
int32_t function_1001691e(void) {
    // 0x1001691e
    int32_t v1; // ebx
    int32_t result = __unlock_fhandle(v1); // 0x1001691f
    g4 = v1;
    return result;
}

// Address range: 0x10016d74 - 0x10016d7c
int32_t function_10016d74(void) {
    // 0x10016d74
    int32_t v1; // ebx
    int32_t result = __unlock_fhandle(v1); // 0x10016d75
    g4 = v1;
    return result;
}

// Address range: 0x1001713d - 0x10017146
int32_t function_1001713d(void) {
    // 0x1001713d
    g4 = 1;
    return __unlock(1);
}

// Address range: 0x10017226 - 0x10017242
int32_t function_10017226(int32_t a1) {
    // 0x10017226
    g4 = a1;
    int32_t v1 = *(int32_t *)(a1 + 24); // 0x10017230
    int32_t v2 = *(int32_t *)(a1 + 40); // 0x10017233
    int32_t v3; // ebp
    return __local_unwind4(v2, v1, *(int32_t *)(a1 + 28), v3);
}

// Address range: 0x100173c2 - 0x100173cb
int32_t function_100173c2(void) {
    // 0x100173c2
    g4 = 14;
    return __unlock(14);
}

// Address range: 0x100176ba - 0x100176c9
int32_t __initp_misc_purevirt(int32_t result) {
    // 0x100176ba
    g155 = result;
    return result;
}

// Address range: 0x100177fd - 0x10017806
int32_t function_100177fd(void) {
    // 0x100177fd
    g4 = 1;
    return __unlock(1);
}

// Address range: 0x10017ac4 - 0x10017acd
int32_t function_10017ac4(void) {
    // 0x10017ac4
    g4 = 13;
    return __unlock(13);
}

// Address range: 0x10017e93 - 0x10017e9c
int32_t function_10017e93(void) {
    // 0x10017e93
    g4 = 13;
    return __unlock(13);
}

// Address range: 0x10017e9c - 0x10017e9e
int32_t function_10017e9c(void) {
    // 0x10017e9c
    int32_t result; // eax
    return result;
}

// Address range: 0x10018217 - 0x10018223
int32_t function_10018217(void) {
    // 0x10018217
    g4 = 12;
    return __unlock(12);
}

// Address range: 0x10018223 - 0x1001822c
int32_t * __encoded_null(int32_t * Ptr) {
    // 0x10018223
    return EncodePointer(Ptr);
}

// Address range: 0x1001822c - 0x10018235
int32_t ___crtTlsAlloc_40_4(void) {
    // 0x1001822c
    return TlsAlloc();
}

// Address range: 0x10018348 - 0x10018351
int32_t function_10018348(void) {
    // 0x10018348
    g4 = 13;
    return __unlock(13);
}

// Address range: 0x10018351 - 0x1001835a
int32_t function_10018351(void) {
    // 0x10018351
    g4 = 12;
    return __unlock(12);
}

// Address range: 0x10018507 - 0x10018510
int32_t function_10018507(void) {
    // 0x10018507
    g4 = 13;
    return __unlock(13);
}

// Address range: 0x10018513 - 0x1001851c
int32_t function_10018513(void) {
    // 0x10018513
    g4 = 12;
    return __unlock(12);
}

// Address range: 0x10018a1f - 0x10018a25
int32_t function_10018a1f(void) {
    // 0x10018a1f
    return __SEH_epilog4();
}

// Address range: 0x10018a25 - 0x10018a36
int32_t * __initp_eh_hooks(int32_t * Ptr) {
    int32_t * result = EncodePointer(Ptr); // 0x10018a2a
    g156 = (int32_t)result;
    return result;
}

// Address range: 0x10018a8b - 0x10018a98
int32_t * ___get_sigabrt(int32_t * Ptr) {
    // 0x10018a8b
    return DecodePointer(Ptr);
}

// Address range: 0x10018bff - 0x10018c0e
int32_t function_10018bff(void) {
    // 0x10018bff
    int32_t v1; // ebp
    int32_t result; // 0x10018c07
    if (*(int32_t *)(v1 - 28) == 0) {
        // branch -> 0x10018c0d
    } else {
        // 0x10018c05
        result = __unlock(0);
        g4 = 0;
    }
    // 0x10018c0d
    return result;
}

// Address range: 0x10018c0e - 0x10018c12
int32_t function_10018c0e(void) {
    // 0x10018c0e
    int32_t result; // eax
    return result;
}

// Address range: 0x10018c12 - 0x10018c35
int32_t function_10018c12(int32_t a1) {
    // 0x10018c12
    g4 = a1;
    int32_t v1; // ebx
    if (v1 != 8) {
        if (v1 != 11) {
            if (v1 != 4) {
                // 0x10018c33
                return 0;
            }
        }
    }
    // 0x10018c22
    int32_t v2; // ebp
    int32_t v3; // edi
    *(int32_t *)(v3 + 96) = *(int32_t *)(v2 - 44);
    if (v1 == 8) {
        // 0x10018c2d
        *(int32_t *)(v3 + 100) = *(int32_t *)(v2 - 48);
    }
    // 0x10018c33
    return 0;
}

// Address range: 0x10018c3b - 0x10018c4a
int32_t __initp_misc_rand_s(int32_t result) {
    // 0x10018c3b
    g157 = result;
    return result;
}

// Address range: 0x10018c4a - 0x10018c59
int32_t __initp_heap_handler(int32_t result) {
    // 0x10018c4a
    g158 = result;
    return result;
}

// Address range: 0x1001932e - 0x10019334
int32_t _DllMain_40_12(void) {
    // 0x1001932e
    return 1;
}

// Address range: 0x1001b52f - 0x1001b536
int32_t function_1001b52f(void) {
    // 0x1001b52f
    __amsg_exit(2);
    // UNREACHABLE
}

// Address range: 0x1001b536 - 0x1001b538
int32_t function_1001b536(int32_t a1) {
    // 0x1001b536
    g4 = a1;
    int32_t result; // eax
    return result;
}

// Address range: 0x1001b953 - 0x1001b95b
int32_t __crt_debugger_hook(void) {
    // 0x1001b953
    g159 = 0;
    int32_t result; // eax
    return result;
}

// Address range: 0x1001bab8 - 0x1001bac7
int32_t function_1001bab8(void) {
    // 0x1001bab8
    int32_t v1;
    g4 = *(int32_t *)(v1 - 28) ^ v1;
    _40___security_check_cookie_40_4();
    return __SEH_epilog4();
}

// Address range: 0x1001c694 - 0x1001c69e
int32_t function_1001c694(void) {
    // 0x1001c694
    int32_t v1; // ebp
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x1001c694
    int32_t result = __unlock_fhandle(v2); // 0x1001c697
    g4 = v2;
    return result;
}

// Address range: 0x1001ce67 - 0x1001ce6f
int32_t function_1001ce67(void) {
    // 0x1001ce67
    int32_t v1; // ebx
    int32_t result = __unlock_fhandle(v1); // 0x1001ce68
    g4 = v1;
    return result;
}

// Address range: 0x1001d286 - 0x1001d28f
int32_t function_1001d286(void) {
    // 0x1001d286
    g4 = 10;
    return __unlock(10);
}

// Address range: 0x1001d388 - 0x1001d391
int32_t function_1001d388(void) {
    // 0x1001d388
    g4 = 10;
    return __unlock(10);
}

// Address range: 0x1001d391 - 0x1001d3b2
int32_t function_1001d391(void) {
    // 0x1001d391
    int32_t v1;
    *(char *)(v1 + 4) = 1;
    int32_t v2; // esi
    *(int32_t *)v2 = -1;
    int32_t v3; // edi
    int32_t v4 = *(int32_t *)(4 * v3 + (int32_t)&g160); // 0x1001d39e
    int32_t result = 32 * v3; // 0x1001d3aa
    int32_t v5 = (v2 - v4) / 64 + result; // 0x1001d3ad
    int32_t v6; // ebp
    *(int32_t *)(v6 - 28) = v5;
    return result;
}

// Address range: 0x1001d446 - 0x1001d44f
int32_t function_1001d446(void) {
    // 0x1001d446
    g4 = 11;
    return __unlock(11);
}

// Address range: 0x1001d520 - 0x1001d528
int32_t function_1001d520(void) {
    // 0x1001d520
    int32_t v1; // ebx
    int32_t result = __unlock_fhandle(v1); // 0x1001d521
    g4 = v1;
    return result;
}

// Address range: 0x1001dcf2 - 0x1001dd20
int32_t function_1001dcf2(void) {
    // 0x1001dcf2
    int32_t v1; // ebp
    int32_t v2; // edi
    if (*(int32_t *)(v1 - 28) == v2) {
        // 0x1001dd1f
        int32_t result; // eax
        return result;
    }
    // 0x1001dcf7
    int32_t v3; // esi
    if (*(int32_t *)(v1 - 32) != v2) {
        int32_t v4 = v3 / 32; // 0x1001dd00
        g4 = v4;
        int32_t v5 = *(int32_t *)(4 * v4 + (int32_t)&g160); // 0x1001dd09
        g4 = v5;
        char * v6 = (char *)((64 * (v3 & 31) | 4) + v5); // 0x1001dd14
        *v6 = *v6 & -2;
    }
    int32_t result2 = __unlock_fhandle(v3); // 0x1001dd19
    g4 = v3;
    // 0x1001dd1f
    return result2;
}

// Address range: 0x1001e1dc - 0x1001e1e5
int32_t function_1001e1dc(void) {
    // 0x1001e1dc
    int32_t result; // eax
    return result;
}

// Address range: 0x1001e204 - 0x1001e207
int32_t __NLG_Call(void) {
    // 0x1001e204
    int32_t result; // eax
    return result;
}

// Address range: 0x1001fd45 - 0x1001ff29
int32_t ___mtold12(int32_t a1, uint32_t a2, int32_t result) {
    // 0x1001fd45
    int32_t v1; // bp-28
    int32_t v2 = &v1; // 0x1001fd4a
    int32_t v3 = 0; // ebx
    *(int32_t *)result = 0;
    *(int32_t *)(result + 4) = v3;
    *(int32_t *)(result + 8) = v3;
    int32_t v4 = v3; // 0x1001fd64
    int32_t v5; // edi
    int32_t v6; // edx
    int32_t v7;
    bool v8;
    uint32_t v9; // 0x1001fdc2
    int32_t v10; // 0x1001fda4
    int32_t v11; // 0x1001feb2
    if (v4 < a2) {
        // 0x1001fd6d
        g4 = 0;
        v7 = v4;
        while (true) {
          lab_0x1001fd72:
            // 0x1001fd72
            v1 = *(int32_t *)result;
            bool v12; // df
            int32_t v13 = v12 ? -4 : 4; // 0x1001fd77
            int32_t v14 = v13 + v2; // 0x1001fd77
            int32_t v15 = v13 + result; // 0x1001fd77
            *(int32_t *)v14 = *(int32_t *)v15;
            *(int32_t *)(v14 + v13) = *(int32_t *)(v15 + v13);
            uint32_t v16 = g4; // 0x1001fd7a
            uint32_t v17 = v3; // 0x1001fd82
            v10 = 2 * (2 * v17 | v16 / 0x80000000) | v16 / 0x40000000 & 1;
            v5 = v10;
            int32_t v18 = 4 * v16; // 0x1001fdb1
            g4 = v17 / 0x40000000 & 1 | 2 * (v17 / 0x80000000 | 2 * v7);
            v6 = v1 + v18;
            *(int32_t *)result = v18;
            *(int32_t *)(result + 4) = v5;
            *(int32_t *)(result + 8) = g4;
            v9 = v6;
            if (v9 < v18) {
                v8 = false;
                goto lab_0x1001fdd2;
            } else {
                // 0x1001fdc6
                if (v9 >= v1) {
                    v8 = true;
                    goto lab_0x1001fdd2;
                } else {
                    v8 = false;
                    goto lab_0x1001fdd2;
                }
            }
        }
      lab_0x1001feb0:
        // 0x1001feb0
        v11 = 0;
    } else {
        v11 = v4;
    }
    // 0x1001feb2
    int32_t v19;
    int32_t v20; // 0x1001feec
    if (*(int32_t *)(result + 8) == v11) {
        int32_t v21 = *(int32_t *)(result + 4); // 0x1001fec3
        int32_t v22 = result; // 0x1001fed5
        uint32_t v23 = *(int32_t *)v22; // 0x1001feba
        int32_t v24 = 0x1403e; // 0x1001febc
        int32_t v25 = v23 / 0x10000 | 0x10000 * v21; // 0x1001fed0
        g4 = 0x10000 * v23;
        *(int32_t *)(v22 + 4) = v25;
        *(int32_t *)result = g4;
        int32_t v26 = v21 / 0x10000; // 0x1001feda
        while (v26 == 0) {
            // 0x1001feba
            v21 = v25;
            v22 = result;
            v23 = *(int32_t *)v22;
            v24 += 0xfff0;
            v25 = v23 / 0x10000 | 0x10000 * v21;
            g4 = 0x10000 * v23;
            *(int32_t *)(v22 + 4) = v25;
            *(int32_t *)result = g4;
            v26 = v21 / 0x10000;
        }
        // 0x1001fede
        *(int32_t *)(result + 8) = v26;
        v20 = result;
        v19 = v24;
    } else {
        v20 = result;
        v19 = 0x404e;
    }
    int32_t v27 = *(int32_t *)(v20 + 8); // 0x1001fee1
    int32_t v28;
    int32_t v29; // 0x1001ff22
    if ((int16_t)v27 > -1) {
        int32_t v30 = *(int32_t *)(v20 + 4); // 0x1001feec
        g4 = v30;
        int32_t * v31 = (int32_t *)v20; // 0x1001feef
        uint32_t v32 = *v31; // 0x1001feef
        int32_t v33 = v19 + 0xffff; // 0x1001fef1
        v5 = v30 >> 31 | 2 * v27;
        g4 = v32 / 0x80000000 | 2 * v30;
        *v31 = 2 * v32;
        *(int32_t *)(result + 4) = g4;
        *(int32_t *)(result + 8) = v5;
        while ((int16_t)v5 > 0xffff) {
            // 0x1001feef
            v30 = g4;
            v31 = (int32_t *)result;
            v32 = *v31;
            v33 += 0xffff;
            v5 = v30 >> 31 | 2 * v5;
            g4 = v32 / 0x80000000 | 2 * v30;
            *v31 = 2 * v32;
            *(int32_t *)(result + 4) = g4;
            *(int32_t *)(result + 8) = v5;
        }
        // 0x1001ff1c
        v29 = result;
        v28 = v33;
    } else {
        v29 = v20;
        v28 = v19;
    }
    // 0x1001ff1c
    g4 = g4 & -0x10000 | v28 & 0xffff;
    *(int16_t *)(v29 + 10) = (int16_t)v28;
    return result;
  lab_0x1001fdd2:
    // 0x1001fdd2
    *(int32_t *)result = v9;
    bool v34;
    int32_t v35; // 0x1001fde1
    if (v8) {
        goto lab_0x1001fe01;
    } else {
        // 0x1001fdda
        v35 = v10 + 1;
        v5 = v35;
        if (v10 == -1) {
            v34 = false;
            goto lab_0x1001fdf4;
        } else {
            if (v35 != 0) {
                v34 = true;
                goto lab_0x1001fdf4;
            } else {
                v34 = false;
                goto lab_0x1001fdf4;
            }
        }
    }
  lab_0x1001fe01:;
    uint32_t v36 = v5; // 0x1001fe08
    uint32_t v37;
    uint32_t v38 = v36 + v37; // 0x1001fe08
    bool v39;
    if (v38 < v36) {
        v39 = false;
        goto lab_0x1001fe1a;
    } else {
        if (v38 >= v37) {
            v39 = true;
            goto lab_0x1001fe1a;
        } else {
            v39 = false;
            goto lab_0x1001fe1a;
        }
    }
  lab_0x1001fe1a:
    // 0x1001fe1a
    *(int32_t *)(result + 4) = v38;
    if (!v39) {
        int32_t v40 = g4 + 1; // 0x1001fe23
        g4 = v40;
        *(int32_t *)(result + 8) = v40;
    }
    uint32_t v41 = v38; // 0x1001fe2e
    uint32_t v42 = v6; // 0x1001fe32
    int32_t v43;
    int32_t v44 = 2 * (g4 + v43) | v41 / 0x80000000; // 0x1001fe37
    g4 = v44;
    v6 = 2 * v42;
    v3 = v42 / 0x80000000 | 2 * v41;
    *(int32_t *)(result + 8) = v44;
    int32_t v45 = g4; // 0x1001fe45
    g4 = a1;
    *(int32_t *)result = v6;
    *(int32_t *)(result + 4) = v3;
    int32_t v46 = (int32_t)*(char *)g4; // 0x1001fe53
    uint32_t v47 = v6 + v46; // 0x1001fe56
    g4 = v47;
    v1 = v46;
    bool v48;
    if (v47 < v6) {
        v48 = false;
        goto lab_0x1001fe6b;
    } else {
        if (v47 >= v46) {
            v48 = true;
            goto lab_0x1001fe6b;
        } else {
            v48 = false;
            goto lab_0x1001fe6b;
        }
    }
  lab_0x1001fdf4:
    // 0x1001fdf4
    *(int32_t *)(result + 4) = v35;
    if (!v34) {
        int32_t v49 = g4 + 1; // 0x1001fdfd
        g4 = v49;
        *(int32_t *)(result + 8) = v49;
    }
    goto lab_0x1001fe01;
  lab_0x1001fe6b:
    // 0x1001fe6b
    *(int32_t *)result = v47;
    int32_t v50; // esi
    int32_t v51;
    int32_t v52; // 0x1001fe73
    if (v48) {
        v51 = v45;
        goto lab_0x1001fe97;
    } else {
        int32_t v53 = v3; // 0x1001fe73
        v52 = v53 + 1;
        v50 = 0;
        if (v53 == -1) {
            // 0x1001fe81
            v50 = 1;
            goto lab_0x1001fe84;
        } else {
            if (v52 != 0) {
                goto lab_0x1001fe84;
            } else {
                // 0x1001fe81
                v50 = 1;
                goto lab_0x1001fe84;
            }
        }
    }
  lab_0x1001fe97:;
    int32_t v54 = a2 - 1; // 0x1001fe97
    *(int32_t *)(result + 4) = v3;
    *(int32_t *)(result + 8) = v51;
    if (v54 == 0) {
        // break -> 0x1001feb0
        goto lab_0x1001feb0;
    }
    a2 = v54;
    v7 = v51;
    a1++;
    goto lab_0x1001fd72;
  lab_0x1001fe84:
    // 0x1001fe84
    v3 = v52;
    *(int32_t *)(result + 4) = v52;
    if (v50 != 0) {
        int32_t v55 = v45 + 1; // 0x1001fe90
        *(int32_t *)(result + 8) = v55;
        v51 = v55;
    } else {
        v51 = v45;
    }
    goto lab_0x1001fe97;
}

// Address range: 0x100213c8 - 0x100213ce
void _RtlUnwind_40_16(int32_t * TargetFrame, int32_t * TargetIp, struct _EXCEPTION_RECORD * ExceptionRecord, int32_t * ReturnValue) {
    // 0x100213c8
    RtlUnwind(TargetFrame, TargetIp, ExceptionRecord, ReturnValue);
}

// Address range: 0x100213d0 - 0x100213dc
int32_t function_100213d0(void (*func)()) {
    // 0x100213d0
    g4 = 0x10021550;
    return _atexit(func);
}

// Address range: 0x10021400 - 0x10021420
int32_t function_10021400(void) {
    int32_t result = LoggingSystem_RegisterLoggingChannel("EngineInitialization", 0, 0, 0, g82); // 0x10021411
    g84 = result;
    return result;
}

// Address range: 0x10021420 - 0x10021433
int32_t function_10021420(void) {
    int32_t result = _3f___set_inconsistency_40__40_YAP6AXXZP6AXXZ_40_Z(0x10005560); // 0x10021425
    g110 = result;
    return result;
}

// Address range: 0x10021480 - 0x1002148d
int32_t function_10021480(void) {
    // 0x10021480
    g126 = 0;
    g127 = 0;
    return 0;
}

// Address range: 0x10021490 - 0x100214e9
// From class:    CUtlCStringConversion
// Type:          constructor
int32_t function_10021490(void) {
    // 0x10021490
    g4 = &g132;
    function_1000be10(92, &g17, 11, &g54);
    g132 = (int32_t)&g28;
    _memset(&g133, 0, 256);
    int32_t v1 = (int32_t)&g55; // 0x100214d8
    int32_t v2 = *(int32_t *)v1; // 0x100214d0
    g4 = v2;
    unsigned char v3 = *(char *)v2; // 0x100214d2
    unsigned char v4 = *(char *)(v1 - 4); // 0x100214d5
    g4 = (int32_t)v4 | v2 & -256;
    int32_t result = v1 + 8; // eax
    *(char *)((int32_t)v3 + (int32_t)&g133) = v4;
    while (result < (int32_t)&g57) {
        // 0x100214d0
        v1 = result;
        v2 = *(int32_t *)v1;
        g4 = v2;
        v3 = *(char *)v2;
        v4 = *(char *)(v1 - 4);
        g4 = (int32_t)v4 | v2 & -256;
        result = v1 + 8;
        *(char *)((int32_t)v3 + (int32_t)&g133) = v4;
    }
    // 0x100214e8
    return result;
}

// Address range: 0x100214f0 - 0x10021513
// From class:    CUtlNoEscConversion
// Type:          constructor
int32_t function_100214f0(void) {
    // 0x100214f0
    g4 = &g134;
    int32_t result = function_1000be10(127, &g17, 1, &g56); // 0x10021503
    g134 = (int32_t)&g27;
    return result;
}

// Address range: 0x10021540 - 0x1002154c
int32_t function_10021540(void (*func)()) {
    // 0x10021540
    g4 = 0x10021630;
    return _atexit(func);
}

// Address range: 0x10021550 - 0x10021568
int32_t function_10021550(void) {
    // 0x10021550
    if (g83 == 0) {
        // 0x10021567
        int32_t result; // eax
        return result;
    }
    int32_t v1 = *(int32_t *)*(int32_t *)0x100221e8; // 0x1002155e
    g4 = v1;
    return *(int32_t *)(*(int32_t *)v1 + 72);
}

// Address range: 0x10021570 - 0x100215a7
int32_t function_10021570(void) {
    // 0x10021570
    if (g102 < 0) {
        // 0x100215a6
        int32_t result; // eax
        return result;
    }
    // 0x10021579
    int32_t result2; // 0x100215a62
    if (g100 != 0) {
        int32_t v1 = *(int32_t *)0x100221e8; // 0x10021582
        g4 = v1;
        int32_t v2 = *(int32_t *)v1; // 0x10021588
        g4 = v2;
        g100 = 0;
        result2 = *(int32_t *)(*(int32_t *)v2 + 20);
    } else {
        result2 = 0;
    }
    // 0x1002159c
    g101 = 0;
    // 0x100215a6
    return result2;
}

// Address range: 0x100215b0 - 0x100215ba
int32_t _3f__3f___Finitlocks_40__40_YAXXZ(void) {
    // 0x100215b0
    g4 = &g81;
    return function_100044a0();
}

// Address range: 0x100215c0 - 0x100215ca
int32_t ??__Finitlocks@@YAXXZ(void) {
    // 0x100215c0
    g4 = &g111;
    return function_10006330();
}

// Address range: 0x100215d0 - 0x100215da
int32_t ??__Finitlocks@@YAXXZ2(void) {
    // 0x100215d0
    g4 = &g128;
    return function_1000f560();
}

// Address range: 0x100215e0 - 0x10021625
// From class:    ConVar
// Type:          constructor
int32_t ??__Finitlocks@@YAXXZ3(void) {
    int32_t v1 = g141; // 0x100215e0
    g139 = (int32_t)&g32;
    g140 = (int32_t)&g31;
    if (v1 != 0) {
        // 0x100215fd
        _3f__3f_3_40_YAXPAX_40_Z(v1);
        g141 = 0;
    }
    // 0x10021610
    g4 = &g142;
    int32_t result = function_1000da70(); // 0x10021615
    g139 = (int32_t)&g29;
    return result;
}

// Address range: 0x10021630 - 0x10021666
int32_t function_10021630(void) {
    // 0x10021630
    g4 = g143;
    g7 = g143;
    int32_t result; // eax
    if (g143 == 0) {
        // branch -> 0x1002165a
    } else {
        // 0x1002163d
        int32_t v1; // esi
        function_1000ee40(v1);
        g4 = g7 + 36;
        function_1000da70();
        g4 = g7;
        function_1000eec0();
        result = _3f__3f_3_40_YAXPAX_40_Z(g7);
    }
    // 0x1002165a
    g143 = 0;
    return result;
}

// --------------- Statically Linked Functions ----------------

// int32_t _3f__3f_0_LocaleUpdate_40__40_QAE_40_PAUlocaleinfo_struct_40__40__40_Z(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
// int32_t _3f___set_inconsistency_40__40_YAP6AXXZP6AXXZ_40_Z(int32_t a1);
// int32_t ___report_gsfailure(void);
// int __cdecl access(_In_z_ char const * FileName, _In_ int AccessMode);
// int32_t __alloca_probe_16(void);
// int32_t __amsg_exit(int32_t a1);
// int32_t __atof_l(int32_t a1, int32_t a2, int32_t a3);
// int32_t __atoi64(void);
// int32_t __aulldvrm(int32_t a1);
// int __cdecl chdir(_In_z_ char const * Path);
// int32_t __chkstk(void);
// int * __errno(void);
// int fileno(FILE * stream);
// int32_t __fsopen(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
// int32_t __get_printf_count_output(int32_t a1);
// char * __cdecl getcwd(char * DstBuf, _In_ int SizeInBytes);
// int32_t __invalid_parameter_noinfo(void);
// int32_t __isleadbyte_l(int32_t a1);
// int32_t __local_unwind4(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
// int32_t __lock(int32_t a1);
// int32_t __mtterm(void);
// int putenv(char * string);
// int32_t __SEH_epilog4(void);
// intptr_t __cdecl spawnv(_In_ int Mode, _In_z_ char const * FileName, _In_z_ char const * const * Arguments);
// int32_t __splitpath(int32_t * a1, int32_t a2, int32_t a3, int32_t * a4, int32_t a5);
// char * __cdecl strlwr(_Inout_z_ char * String);
// double strtod_l(const char * restrict nptr, char ** restrict endptr, __locale_t loc);
// int32_t __strtoi64(int32_t a1);
// int32_t __unlock(int32_t a1);
// int32_t __unlock_fhandle(int32_t a1);
// int32_t __unlock_file(int32_t a1);
// int32_t __unlock_file2(int32_t a1, int32_t a2);
// int vsnprintf(char * restrict s, size_t maxlen, const char * restrict format, _G_va_list arg);
// int32_t __wtol(void);
// int atexit(void(* func)(void));
// int32_t _doexit(int32_t a1, int32_t a2, int32_t a3);
// int fclose(FILE * stream);
// int32_t _flsall(int32_t a1);
// size_t fread(void * restrict ptr, size_t size, size_t n, FILE * restrict stream);
// FILE * freopen(const char * restrict filename, const char * restrict modes, FILE * restrict stream);
// int fseek(FILE * stream, long int off, int whence);
// long int ftell(FILE * stream);
// char * getenv(const char * name);
// int isalnum(int c);
// int isdigit(int c);
// void * memcpy(void * restrict dest, const void * restrict src, size_t n);
// int32_t _memcpy2(void);
// void * memset(void * s, int c, size_t n);
// int printf(const char * restrict format, ...);
// int sprintf(char * restrict s, const char * restrict format, ...);
// int sscanf(const char * restrict s, const char * restrict format, ...);
// char * strchr(char * s, int c);
// size_t strlen(const char * s);
// char * strncat(char * restrict dest, const char * restrict src, size_t n);
// char * strncpy(char * restrict dest, const char * restrict src, size_t n);
// char * strrchr(char * s, int c);
// int _toupper(int c);
// errno_t __cdecl wctomb_s(_Out_opt_ int * SizeConverted, char * MbCh, _In_ rsize_t SizeInBytes, _In_ wchar_t WCh);
// int32_t _write_char(void);

// --------------- Dynamically Linked Functions ---------------

// int32_t _3f_DevMsg_40__40_YAXPBDZZ(void);
// int32_t _3f_DevWarning_40__40_YAXPBDZZ(void);
// int32_t _3f_Lock_40_CThreadFastMutex_40__40_ACEXII_40_Z(int32_t a1, int32_t a2);
// BOOL AllocConsole(VOID);
// BOOL CloseHandle(_In_ HANDLE hObject);
// HRESULT CoInitialize(_In_opt_ LPVOID pvReserved);
// int32_t COM_TimestampedLog(void);
// int32_t CommandLine(void);
// void CoUninitialize(void);
// HANDLE CreateFileMappingA(_In_ HANDLE hFile, _In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes, _In_ DWORD flProtect, _In_ DWORD dwMaximumSizeHigh, _In_ DWORD dwMaximumSizeLow, _In_opt_ LPCSTR lpName);
// HANDLE CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes, _In_ BOOL bInitialOwner, _In_opt_ LPCSTR lpName);
// int32_t CreateSimpleThread(int32_t a1, int32_t * a2, int32_t a3);
// PVOID DecodePointer(_In_opt_ PVOID Ptr);
// PVOID EncodePointer(_In_opt_ PVOID Ptr);
// int32_t Error(void);
// HWND FindWindowA(_In_opt_ LPCSTR lpClassName, _In_opt_ LPCSTR lpWindowName);
// BOOL FreeLibrary(_In_ HMODULE hLibModule);
// LPSTR GetCommandLineA(VOID);
// DWORD GetCurrentDirectoryA(_In_ DWORD nBufferLength, LPSTR lpBuffer);
// HANDLE GetCurrentProcess(VOID);
// DWORD GetCurrentProcessId(VOID);
// DWORD GetCurrentThreadId(VOID);
// DWORD GetEnvironmentVariableA(_In_opt_ LPCSTR lpName, LPSTR lpBuffer, _In_ DWORD nSize);
// DWORD GetModuleFileNameA(_In_opt_ HMODULE hModule, LPSTR lpFilename, _In_ DWORD nSize);
// HMODULE GetModuleHandleA(_In_opt_ LPCSTR lpModuleName);
// FARPROC GetProcAddress(_In_ HMODULE hModule, _In_ LPCSTR lpProcName);
// int32_t GetThreadedLoadLibraryFunc(void);
// int32_t KeyValuesSystem(void);
// HMODULE LoadLibraryA(_In_ LPCSTR lpLibFileName);
// HMODULE LoadLibraryExA(_In_ LPCSTR lpLibFileName, HANDLE hFile, _In_ DWORD dwFlags);
// int32_t LoggingSystem_RegisterLoggingChannel(char * a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
// int32_t LoggingSystem_RegisterLoggingListener(int32_t ** a1);
// int32_t LoggingSystem_ResetCurrentLoggingState(void);
// int MessageBoxA(_In_opt_ HWND hWnd, _In_opt_ LPCSTR lpText, _In_opt_ LPCSTR lpCaption, _In_ UINT uType);
// int32_t Msg(void);
// int32_t Plat_CreateWindow(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9);
// int32_t Plat_DebugString(int32_t a1);
// int32_t Plat_ExitProcess(int32_t a1);
// int32_t Plat_FloatTime(void);
// int32_t Plat_GetDesktopResolution(char * a1, char * a2);
// int32_t Plat_IsInDebugSession(void);
// int32_t Plat_MessageBox(char * a1, int32_t a2);
// int32_t Plat_SetWindowPos(int32_t a1, int32_t a2, int32_t a3);
// int32_t Plat_VerifyHardwareKeyPrompt(void);
// LSTATUS RegCloseKey(_In_ HKEY hKey);
// LSTATUS RegDeleteValueA(_In_ HKEY hKey, _In_opt_ LPCSTR lpValueName);
// LSTATUS RegOpenKeyExA(_In_ HKEY hKey, _In_opt_ LPCSTR lpSubKey, _In_opt_ DWORD ulOptions, _In_ REGSAM samDesired, _Out_ PHKEY phkResult);
// LSTATUS RegQueryValueExA(_In_ HKEY hKey, _In_opt_ LPCSTR lpValueName, LPDWORD lpReserved, _Out_opt_ LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData);
// BOOL ReleaseMutex(_In_ HANDLE hMutex);
// int32_t ReleaseThreadHandle(void);
// VOID RtlUnwind(_In_opt_ PVOID TargetFrame, _In_opt_ PVOID TargetIp, _In_opt_ PEXCEPTION_RECORD ExceptionRecord, _In_ PVOID ReturnValue);
// int32_t RunThreadPoolTests(void);
// int32_t RunTSListTests(void);
// int32_t RunTSQueueTests(void);
// LRESULT SendMessageA(_In_ HWND hWnd, _In_ UINT Msg, WPARAM wParam, LPARAM lParam);
// BOOL SetConsoleCtrlHandler(_In_opt_ PHANDLER_ROUTINE HandlerRoutine, _In_ BOOL Add);
// BOOL SetPriorityClass(_In_ HANDLE hProcess, _In_ DWORD dwPriorityClass);
// HINSTANCE ShellExecuteA(_In_opt_ HWND hwnd, _In_opt_ LPCSTR lpOperation, _In_ LPCSTR lpFile, _In_opt_ LPCSTR lpParameters, _In_opt_ LPCSTR lpDirectory, _In_ INT nShowCmd);
// int32_t ShouldUseNewAssertDialog(int32_t a1, int32_t a2);
// int32_t StackToolsNotify_LoadedLibrary(void);
// int32_t SteamAPI_GetSteamInstallPath(void);
// BOOL TerminateProcess(_In_ HANDLE hProcess, _In_ UINT uExitCode);
// DWORD TlsAlloc(VOID);
// int32_t V_UnicodeToUTF8(int32_t a1, int32_t * a2, int32_t a3);
// int32_t VStdLib_GetICVarFactory(void);
// DWORD WaitForSingleObject(_In_ HANDLE hHandle, _In_ DWORD dwMilliseconds);
// int32_t Warning(void);
// int32_t WriteMiniDump(void);
// int WSACleanup(void);
// int WSAStartup(_In_ WORD wVersionRequested, _Out_ LPWSADATA lpWSAData);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: msvc
// Detected language: C++
// Detected functions: 459
// Decompilation date: 2019-12-29 21:31:43
