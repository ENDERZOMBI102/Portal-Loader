//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
// Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
//

#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <Windows.h>

// ------------------------ Structures ------------------------

struct _EXCEPTION_POINTERS {
    struct _EXCEPTION_RECORD * e0;
    struct _CONTEXT * e1;
};

struct _EXCEPTION_RECORD {
    int e0;
    int e1;
    struct _EXCEPTION_RECORD * e2;
    int * e3;
    int e4;
    int e5[1];
};

struct _IO_FILE {
    int e0;
};

struct _M128A {
    int64_t e0;
    int64_t e1;
};

struct _CONTEXT {
    int64_t e0;
    int64_t e1;
    int64_t e2;
    int64_t e3;
    int64_t e4;
    int64_t e5;
    int e6;
    int e7;
    int16_t e8;
    int16_t e9;
    int16_t e10;
    int16_t e11;
    int16_t e12;
    int16_t e13;
    int e14;
    int64_t e15;
    int64_t e16;
    int64_t e17;
    int64_t e18;
    int64_t e19;
    int64_t e20;
    int64_t e21;
    int64_t e22;
    int64_t e23;
    int64_t e24;
    int64_t e25;
    int64_t e26;
    int64_t e27;
    int64_t e28;
    int64_t e29;
    int64_t e30;
    int64_t e31;
    int64_t e32;
    int64_t e33;
    int64_t e34;
    int64_t e35;
    int64_t e36;
    int64_t e37;
    int e38;
    struct _M128A e39[26];
    int64_t e40;
    int64_t e41;
    int64_t e42;
    int64_t e43;
    int64_t e44;
    int64_t e45;
};

// ------------------- Function Prototypes --------------------

int _40___security_check_cookie_40_4(void);
int ___crtTlsAlloc_40_4(void);
int * ___get_sigabrt(int * Ptr);
int ___iob_func(void);
int __c_exit(void);
int __cexit(void);
int __crt_debugger_hook(void);
int * __encoded_null(int * Ptr);
int __flushall(void);
int * __initp_eh_hooks(int * Ptr);
int __initp_heap_handler(int result);
int __initp_misc_invarg(int result);
int __initp_misc_purevirt(int result);
int __initp_misc_rand_s(int result);
int __lockexit(void);
int __NLG_Call(void);
int __output_l(int a1, int a2, int a3, int a4);
int __unlockexit(void);
void _RtlUnwind_40_16(int * TargetFrame, int * TargetIp, struct _EXCEPTION_RECORD * ExceptionRecord, int * ReturnValue);
int winMain(int hModule, int a2, int a3, int a4);
int entry_point(void);
int function_288017b(void);
int function_2880327(void);
int function_401000(int a1);
int function_401456(void);
int function_401603(void);
int function_401660(int a1, int a2, int a3);
int function_401791(void);
int function_401793(void);
int function_4017c1(void);
int function_401dd3(void);
int function_401de2(void);
int function_401df9(int a1);
int function_401e0f(int a1);
int function_401e1f(void);
int function_401e2e(void);
int function_40286c(void);
int function_402c36(int a1, int result);
int (*function_403ab1(int (*lpTopLevelExceptionFilter)(struct _EXCEPTION_POINTERS *)))(struct _EXCEPTION_POINTERS *);
int function_4045f4(void);
int function_4045fd(void);
int function_4047b3(void);
int function_4047bf(void);
int function_404ea3(void);
int function_405083(void);
int function_405092(void);
int function_405096(int a1);
int function_405231(void);
int function_40590d(void);
int function_405cdc(void);
int function_405ce5(void);
int function_406060(void);
int function_406070(int a1);
int function_4062b6(int a1);
int function_406497(void);
int function_406c6a(void);
int function_407c97(void);
int function_407c9e(int a1);
int function_4087bc(void);
int function_40896c(void);
int function_408ba1(void);
int function_408cfc(void);
int function_408d2b(void);
int function_408d56(void);
int function_4091a2(void);
int function_40927b(void);
int function_409559(void);

// --------------------- Global Variables ---------------------

int g1 = 0; // eax
int g2 = 0; // ebp
int g3 = 0; // ebx
int baseAddress = 0; // ecx
int g5 = 0; // edi
int g6 = 0; // esi
char * g7 = 'l';
int g8 = 0x6000006;
char (*g9)[7] = "(null)";
int16_t (*g10)[7] = L"(null)";
int g11 = -1;
int g12 = 0x407c97;
int g13 = 0x407c97;
int g14 = 0x407c97;
int g15 = -0x44bf19b2;
char * g17;
char * g18;
int g19 = 0;
int g20 = 0;
int g21 = 0;
int g22 = 0;
int g23 = 0;
int g24 = 0;
int g25 = 0;
int g26 = 0;
int g27 = 0;
int g28 = 0;
int g29;
int g30;
int * g16 = &g26;

// ------------------------ Functions -------------------------

// Address range: 0x401000 - 0x40108b
int function_401000(int a1) {
    unsigned char v1 = *(char *)g1; // 0x40101122
    // v2 is an OR of the bits of the two variables
    int v2 = (int)v1 | baseAddress & -256; // 0x40101125
    int v3; // bp-264
    *(char *)&v3 = v1;
    int v4 = g1 + 1; // 0x40101628
    if (v1 != 0) {
        unsigned char v5 = *(char *)v4; // 0x401011
        v2 = (int)v5 | v2 & -256;
        *(char *)(v4 + (int)&v3 - g1) = v5;
        while ((char)v2 != 0) {
            // 0x401011
            v4++;
            v5 = *(char *)v4;
            v2 = (int)v5 | v2 & -256;
            *(char *)(v4 + (int)&v3 - g1) = v5;
        }
    }
    //This strrchr function Returns a pointer to the last occurrence of a character in a string, in this case, searches for "\"
    char * v6 = _strrchr((char *)&v3, 92); // 0x401024
    if (v6 != NULL) {
        // 0x401030
        *(char *)((int)v6 + 1) = 0;
    }
    int v7 = 0; // 0x401047
    unsigned char v8 = *(char *)(v7 - 260 + g2); // 0x401040
    *(char *)(v7 + (int)&g18) = v8;
    int v9 = 1; // 0x40104d
    int v10 = (int)v8 | v2 & -256; // 0x40104e
    while ((char)v10 != 0) {
        // 0x401040
        v7 = v9;
        v8 = *(char *)(v7 - 260 + g2);
        *(char *)(v7 + (int)&g18) = v8;
        v9++;
        v10 = (int)v8 | v10 & -256;
    }
    int v11 = v10; // 0x401060
    int v12 = (int)&g18; // 0x401062
    unsigned char v13 = *(char *)v12; // 0x401060
    int v14 = v12 + 1; // 0x401062
    while (v13 != 0) {
        // 0x401060
        v11 = (int)v13 | v11 & -256;
        v12 = v14;
        v13 = *(char *)v12;
        v14 = v12 + 1;
    }
    int v15 = v14 - (int)&g19; // 0x401067
    if (v15 == 0) {
        // 0x401082
        return (int)&g18;
    }
    char * v16 = (char *)(v15 + (int)&g17); // 0x40106b
    unsigned char v17 = *v16; // 0x40106b
    if (v17 != 92 != v17 != 47) {
        // 0x40107b
        *v16 = 0;
    }
    // 0x401082
    return (int)&g18;
}

// Address range: 0x401090 - 0x4011e6
int winMain(int hModule, int a2, int a3, int a4) {
    // 0x401090
    //is a helper routine that is called when local variables exceed 4K bytes
    __chkstk();
    //this is the base andress of the module in memory
    baseAddress = hModule;
    //get the enviromental variable path..?
    int v1 = (int)_getenv("PATH"); // edi
    int lpFilename; // bp-264
    //get the size of the module file name
    int nameSize = GetModuleFileNameA((int *)hModule, (char *)&lpFilename, 260); // 0x4010bd
    //check if the nameSize is not 0, if yes exit because it cant load a module
    if (nameSize == 0) {
        // 0x4010c7
        // display the message box
        MessageBoxA((int *)nameSize, "Failed calling GetModuleFileName", "Launcher Error", nameSize);
        //close the program
        return 0;
    }
    // 0x4010e2
    //get lpFileName address
    g1 = &lpFilename;
    int v2; // esi
    int v3 = function_401000(v2); // 0x4010e9 tf is this function??
    int v4; // bp-5384
    //put "PATH=%s\\bin\\;%s" to v4 (array)
    __snprintf((char *)&v4, 0x1000, "PATH=%s\\bin\\;%s", (char *)v3, (char *)v1);
    //put NULL into the env. variables
    __putenv(NULL);
    //put "%s\\bin\\launcher.dll" to v4 (array)
    __snprintf((char *)&v4, 0x1000, "%s\\bin\\launcher.dll", (char *)v3);
    //load the library into hModule2 (why int?)
    int * hModule2 = LoadLibraryExA(NULL, &g30, (int)&g30); // 0x401147
    //check if hModule2 exist (aka is loaded), if yes starts it
    if (hModule2 != NULL) {
        // 0x4011be
        //return the process andress of LauncherMain function (start the function)
        return (int)GetProcAddress(hModule2, "LauncherMain");
    }
    //get the last error code (ex 2)
    int errorCode = GetLastError(); // 0x40115d
    FormatMessageA(0x1300, NULL, errorCode, (int)&g30, (char *)&g30, (int)&g30, &g30);
    int v5; // bp-1288
    //put the text into the array
    __snprintf((char *)&v5, 1024, "Failed to load the launcher DLL:\n\n%s", (char *)hModule);
    //display an error message
    MessageBoxA(NULL, (char *)&g30, (char *)&g30, (int)&g30);
    //free the hModule (this) function
    LocalFree((int *)hModule);
    //close all
    return 0;
}

// Address range: 0x401456 - 0x40145f
int function_401456(void) {
    // 0x401456
    return __unlock(7);
}

// Address range: 0x401603 - 0x40160c
int function_401603(void) {
    // 0x401603
    return __unlock(7);
}

// Address range: 0x401660 - 0x401664
int function_401660(int a1, int a2, int a3) {
    // 0x401660
    int result; // eax
    return result;
}

// Address range: 0x401791 - 0x401793
int function_401791(void) {
    // 0x401791
    return function_4017c1();
}

// Address range: 0x401793 - 0x4017a7
int function_401793(void) {
    // 0x401793
    int v1; // ebp
    int v2 = *(int *)(v1 - 20); // 0x401793
    int v3 = *(int *)*(int *)v2; // 0x401798
    *(int *)(v1 - 36) = v3;
    return __XcptFilter(v3, v2);
}

// Address range: 0x4017c1 - 0x4017d1
int function_4017c1(void) {
    // 0x4017c1
    *(int *)(g2 - 4) = -2;
    return __SEH_epilog4();
}

// Address range: 0x4017d1 - 0x4017db
int entry_point(void) {
    // 0x4017d1
    ___security_init_cookie();
    return ___tmainCRTStartup();
}

// Address range: 0x401ba8 - 0x401bb1
int __lockexit(void) {
    // 0x401ba8
    return __lock(8);
}

// Address range: 0x401bb1 - 0x401bba
int __unlockexit(void) {
    // 0x401bb1
    return __unlock(8);
}

// Address range: 0x401dd3 - 0x401de2
int function_401dd3(void) {
    // 0x401dd3
    int result; // eax
    int v1; // ebp
    if (*(int *)(v1 + 16) == 0) {
        // branch -> 0x401de1
    } else {
        // 0x401dd9
        result = __unlock(8);
    }
    // 0x401de1
    return result;
}

// Address range: 0x401de2 - 0x401de8
int function_401de2(void) {
    // 0x401de2
    return __SEH_epilog4();
}

// Address range: 0x401df9 - 0x401dfe
int function_401df9(int a1) {
    // 0x401df9
    int result; // eax
    return result;
}

// Address range: 0x401e0f - 0x401e14
int function_401e0f(int a1) {
    // 0x401e0f
    int result; // eax
    return result;
}

// Address range: 0x401e14 - 0x401e1f
int __cexit(void) {
    // 0x401e14
    _doexit(0, 0, 1);
    // UNREACHABLE
}

// Address range: 0x401e1f - 0x401e23
int function_401e1f(void) {
    // 0x401e1f
    int result; // eax
    return result;
}

// Address range: 0x401e23 - 0x401e2e
int __c_exit(void) {
    // 0x401e23
    _doexit(0, 1, 1);
    // UNREACHABLE
}

// Address range: 0x401e2e - 0x401e32
int function_401e2e(void) {
    // 0x401e2e
    int result; // eax
    return result;
}

// Address range: 0x4024d6 - 0x4024e5
int __initp_misc_invarg(int result) {
    // 0x4024d6
    g20 = result;
    return result;
}

// Address range: 0x40286c - 0x402875
int function_40286c(void) {
    // 0x40286c
    return __unlock(10);
}

// Address range: 0x402c36 - 0x402c98
int function_402c36(int a1, int result) {
    int v1 = g6; // 0x402c40
    if ((*(char *)(g3 + 12) & 64) != 0) {
        // 0x402c4a
        if (*(int *)(g3 + 8) == 0) {
            // 0x402c50
            *(int *)g1 = 2 * result;
            // 0x402c95
            g6 = v1;
            return result;
        }
    }
    int * v2 = (int *)g5; // 0x402c57
    *v2 = 0;
    if (result > 0) {
        int result2; // eax
        while (true) {
            int v3 = result - 1; // 0x402c65
            int v4 = _write_char(); // 0x402c6a
            result2 = v4;
            if (v4 == -1) {
                if (g5 != 42) {
                    // break -> 0x402c8b
                    break;
                }
                // 0x402c7c
                result2 = _write_char();
            }
            if (v3 >= 0 != v3 != 0) {
                // break -> 0x402c8b
                break;
            }
            result = v3;
            a1++;
        }
        if (g5 != 0) {
            // 0x402c95
            g6 = v1;
            return result2;
        }
    }
    // 0x402c90
    *v2 = g5;
    // 0x402c95
    g6 = v1;
    return g5;
}

// Address range: 0x402c98 - 0x40387f
int __output_l(int a1, int a2, int a3, int a4) {
    int v1 = 0; // esp
    int v2; // ebp
    int v3 = &v2; // 0x402c9a
    g2 = v3;
    int Ptr; // bp-644
    int v4 = &Ptr; // 0x402c9d
    int v5; // bp-608
    int v6 = &v5; // 0x402cbe
    int v7; // esi
    _3f__3f_0_LocaleUpdate_40__40_QAE_40_PAUlocaleinfo_struct_40__40__40_Z(a3, a4, v7, a2);
    int v8 = (int)__errno(); // 0x402cff
    int v9; // 0x403850
    if (a1 != 0) {
        // 0x402d39
        if ((*(char *)(a1 + 12) & 64) != 0) {
            goto lab_0x402d9d;
        } else {
            int v10 = __fileno((struct _IO_FILE *)a1); // 0x402d40
            v9 = &g11;
            int v11; // 0x402d62
            if (v10 <= 0xfffffffd) {
                int v12 = v10 / 32; // 0x402d5c
                int v13 = 64 * v10 & 1984; // 0x402d5f
                v11 = *(int *)(4 * v12 + (int)&g28) + v13;
            } else {
                v11 = &g11;
            }
            // 0x402d6d
            if ((*(char *)(v11 + 36) & 127) != 0) {
                goto lab_0x402d0e_2;
            } else {
                int v14; // 0x402d88
                if (v10 <= 0xfffffffd) {
                    int v15 = v10 / 32; // 0x402d82
                    int v16 = 64 * v10 & 1984; // 0x402d85
                    v14 = *(int *)(4 * v15 + (int)&g28) + v16;
                } else {
                    v14 = &g11;
                }
                // 0x402d93
                if (*(char *)(v14 + 36) <= -1) {
                    goto lab_0x402d0e_2;
                } else {
                    goto lab_0x402d9d;
                }
            }
        }
    } else {
        goto lab_0x402d0e_2;
    }
  lab_0x402d0e_2:
    // 0x402d0e
    *__errno() = 22;
    __invalid_parameter_noinfo();
    int v17;
    int v18;
    char v19;
    if (v19 != 0) {
        int * v20 = (int *)(v18 + 112); // 0x402d2d
        *v20 = *v20 & -3;
        v17 = -1;
    } else {
        v17 = -1;
    }
    goto lab_0x403870;
  lab_0x403832:;
    // 0x403832
    int v21;
    unsigned char v22 = *(char *)v21; // 0x403838
    if (v22 == 0) {
        // break -> 0x403857
        goto lab_0x403857_2;
    }
    // 0x403844
    int v23;
    a4 = v23;
    v9 = v9 & -256 | (int)v22;
    int v24 = v21 + 1; // 0x402dc9
    a2 = v24;
    g6 = 0;
    int v25; // bp-552
    if (v25 < 0) {
        // break -> 0x403857
        goto lab_0x403857_2;
    }
    int v26;
    int v27 = v26;
    int v28;
    int v29 = v28;
    int v30;
    int v31 = v30;
    int64_t v32;
    int64_t v33 = v32;
    int64_t v34;
    int64_t v35 = v34;
    char v36;
    char v37 = v36;
    int v38;
    int v39 = v38;
    int v40;
    int v41 = v40; // 0x402df6559
    goto lab_0x402dde;
  lab_0x40301a:;
    // 0x40301a
    int * v45; // 0x402dfe
    *v45 = v6;
    *(int *)(v1 - 8) = v9 & 255;
    int v116;
    int v48;
    if (__isleadbyte_l(v48) != 0) {
        // 0x40303c
        _write_char();
        int v117 = a2; // 0x40304d
        if (*(char *)v117 == 0) {
            goto lab_0x402d0e_2;
        }
        v116 = v117 + 1;
    } else {
        v116 = v24;
    }
    // 0x40305e
    _write_char();
    v40 = v48;
    v38 = v39;
    v36 = v37;
    v34 = v35;
    v32 = v33;
    v30 = v31;
    int v49; // 0x40301a
    v26 = v49 & v27;
    v28 = v29;
    v21 = v116;
    goto lab_0x403832;
  lab_0x402fc2:;
    int v64; // 0x402f9e
    unsigned char v65; // 0x402f9e
    if (v65 != 51) {
        goto lab_0x402fe4;
    } else {
        // 0x402fc6
        if (*(char *)(v64 + 1) != 50) {
            goto lab_0x402fe4;
        } else {
            // 0x402fcc
            v40 = 6;
            v38 = v39;
            v36 = v37;
            v34 = v35;
            v32 = v33;
            v30 = v31;
            v26 = v27;
            v28 = v29;
            v21 = v64 + 2;
            goto lab_0x403832;
        }
    }
  lab_0x4032de:;
    char v68 = v37 | 64;
    int v69 = 10;
    goto lab_0x4032ef;
  lab_0x402fe4:
    switch (v65) {
        case 100: {
            v40 = 6;
            v38 = v39;
            v36 = v37;
            v34 = v35;
            v32 = v33;
            v30 = v31;
            v26 = v27;
            v28 = v29;
            v21 = v24;
            goto lab_0x403832;
        }
        case 105: {
            goto lab_0x403832;
        }
        case 111: {
            goto lab_0x403832;
        }
        case 117: {
            goto lab_0x403832;
        }
        case 120: {
            goto lab_0x403832;
        }
        case 88: {
            goto lab_0x403832;
        }
        default: {
            int v242 = g6; // 0x403014
            v48 = v242;
            v49 = v242;
            goto lab_0x40301a;
        }
    }
  lab_0x4030f3:;
    int v243 = v33; // 0x4030f3
    int v244 = v243 != -1 ? v243 : 0x7fffffff;
    int v245 = a4; // 0x403103
    int v246 = v245 + 4; // 0x403103
    int v247 = *(int *)v245; // 0x403116
    char v105;
    int64_t v106;
    int v103;
    int v110;
    int v107;
    int v108;
    int v104;
    int v109;
    int v51;
    int v102; // 0x40364b
    if (((int)v37 & 2064) == 0) {
        int v248;
        if (v247 == 0) {
            // 0x403627
            v248 = *(int *)&g9;
        } else {
            v248 = v247;
        }
        // 0x403632
        int v249; // 0x403645
        if (v244 != 0) {
            int v250 = v248; // 0x403640
            while (true) {
                int v251 = v244 - 1; // 0x40363a
                if (*(char *)v250 == 0) {
                    v249 = v250;
                    // break -> 0x403645
                    break;
                }
                int v252 = v250 + 1; // 0x403640
                if (v251 == 0) {
                    v249 = v252;
                    // break -> 0x403645
                    break;
                }
                v250 = v252;
                v244 = v251;
            }
        } else {
            v249 = v248;
        }
        // 0x403645
        v102 = v249 - v248;
        v103 = v246;
        v104 = v39;
        v105 = v37;
        v106 = v33;
        v107 = v31;
        v108 = v27;
        v109 = v51;
        v110 = v248;
    } else {
        int v253;
        if (v247 == 0) {
            // 0x403129
            v253 = *(int *)&g10;
        } else {
            v253 = v247;
        }
        // 0x403134
        int v254; // 0x403619
        if (v244 != 0) {
            int v255 = v253; // 0x403612
            int v256 = v244; // 0x40360c
            while (true) {
                int v257 = v256 - 1; // 0x40360c
                if (*(int16_t *)v255 == (int16_t)g6) {
                    v254 = v255;
                    // break -> 0x403619
                    break;
                }
                int v258 = v255 + 2; // 0x403612
                if (v257 == 0) {
                    v254 = v258;
                    // break -> 0x403619
                    break;
                }
                v255 = v258;
                v256 = v257;
            }
        } else {
            v254 = v253;
        }
        // 0x403619
        v102 = (v254 - v253) / 2;
        v103 = v246;
        v104 = v39;
        v105 = v37;
        v106 = v33;
        v107 = v31;
        v108 = 1;
        v109 = v51;
        v110 = v253;
    }
    goto lab_0x40364b;
  lab_0x4034a6:;
    int v118 = 16; // bp-556
    int v121; // ecx
    char v129;
    char v124;
    int v128;
    int v123;
    int v80;
    char v136; // bp-560
    int v127;
    int v130;
    int v125;
    int v81;
    int v126; // 0x4032ef530
    int v122; // 0x4032ef531
    if (v37 > -1) {
        int v259 = v37; // 0x4032ef505
        v121 = v259;
        v122 = v259;
        v123 = v80;
        v124 = v37;
        v125 = v81;
        goto lab_0x4034e1;
    } else {
        // 0x4032ef
        v136 = 48;
        int v260 = v37; // 0x4032ef533
        v121 = v260;
        v126 = v260;
        v127 = 2;
        v128 = v80;
        v129 = v37;
        v130 = v81;
        goto lab_0x403301;
    }
  lab_0x4032ef:
    // 0x4032ef
    v118 = v69;
    int v119 = v33;
    int v120 = v68; // 0x4032ef
    v121 = v120;
    if (v68 > -1) {
        v122 = v120;
        v123 = v119;
        v124 = v68;
        v125 = v39;
        goto lab_0x4034e1;
    } else {
        v126 = v120;
        v127 = v31;
        v128 = v119;
        v129 = v68;
        v130 = v39;
        goto lab_0x403301;
    }
  lab_0x40364b:
    // 0x40364b
    v118 = v102;
    int v70 = v103;
    int v71 = v104;
    char v72 = v105;
    int64_t v73 = v106;
    int v74 = v107;
    int v75 = v29;
    int v76 = v108;
    int v77 = v109;
    int v78 = v110;
    goto lab_0x403651;
  lab_0x4034e1:;
    char v187;
    char v165;
    char v226;
    int v186;
    int v164;
    int v225;
    int v228;
    int v180;
    int v189;
    int v185;
    int v176;
    int v224;
    int v188;
    int v174;
    int v227;
    int v229; // 0x40352b
    int v183; // 0x40352b92
    int v181; // 0x40353193
    int v157; // 0x403549
    int v158; // 0x40357f
    int v230; // 0x40350a
    int v222;
    int v184; // 0x4032ef527
    int v160; // 0x4032ef528
    int v223; // 0x4032ef529
    if ((v122 & 0x1000) != 0) {
        v126 = v122;
        v127 = v31;
        v128 = v123;
        v129 = v124;
        v130 = v125;
        goto lab_0x403301;
    } else {
        int v233 = a4; // 0x4034ed
        int v234 = v233 + 4; // 0x4034ed
        if ((v122 & 32) == 0) {
            int v235 = *(int *)v233; // 0x40350d
            if ((v122 & 64) == 0) {
                // 0x403520
                v9 = 0;
                v160 = v122;
                v176 = v31;
                v164 = v123;
                v165 = v124;
                v174 = v125;
                v180 = v234;
                v158 = v235;
                v157 = 0;
                goto lab_0x40353f;
            } else {
                int v236 = v235 >> 31; // 0x403515
                v9 = v236;
                v184 = v122;
                v185 = v31;
                v186 = v123;
                v187 = v124;
                v188 = v125;
                v189 = v234;
                v181 = v236;
                v183 = v235;
                goto lab_0x403525;
            }
        } else {
            int v237 = v122 & 64; // 0x4034fb
            uint16_t v238 = *(int16_t *)v233; // 0x403506
            int v239 = v237 == 0 ? (int)v238 : (int)v238;
            v230 = v239 >> 31;
            v9 = v230;
            v223 = v122;
            v224 = v31;
            v225 = v123;
            v226 = v124;
            v227 = v125;
            v222 = v237;
            v229 = v239;
            v228 = v234;
            goto lab_0x403520;
        }
    }
  lab_0x403301:;
    int v240 = a4; // 0x403301
    int v241 = *(int *)(v240 + 4); // 0x403303
    v9 = v241;
    v223 = v126;
    v224 = v127;
    v225 = v128;
    v226 = v129;
    v227 = v130;
    v222 = v126 & 64;
    v229 = *(int *)v240;
    v230 = v241;
    v228 = v240 + 8;
    goto lab_0x403520;
  lab_0x403651:;
    char v86;
    int64_t v87;
    int v84;
    int v92;
    int v88;
    int v90;
    int v89;
    int v85;
    int v91;
    int v131; // 0x403064
    int v132; // 0x4036f2
    int v133; // 0x403768
    if (v75 == 0) {
        int v134 = v72; // 0x40365e
        baseAddress = v134;
        int v135;
        if ((v72 & 64) != 0) {
            if ((v134 & 256) == 0) {
                if ((v134 & 1) == 0) {
                    if ((v134 & 2) != 0) {
                        // 0x40368d
                        v136 = 32;
                        v135 = 1;
                    } else {
                        v135 = v74;
                    }
                } else {
                    // 0x40367f
                    v136 = 43;
                    v135 = 1;
                }
            } else {
                // 0x403671
                v136 = 45;
                v135 = 1;
            }
        } else {
            v135 = v74;
        }
        int v137 = (int)v35 - v118 - v135; // 0x4036aa
        if ((v134 & 12) == 0) {
            // 0x4036bb
            if (v137 >= 0 == (v137 != 0)) {
                int v138 = v137; // 0x4036cd543
                while (true) {
                    // 0x4036bf
                    baseAddress = a1;
                    g6 = v131;
                    a4 = v138 - 1;
                    _write_char();
                    if (v25 == -1) {
                        // break -> 0x4036e0
                        break;
                    }
                    int v139 = a4;
                    if (v139 >= 0 != v139 != 0) {
                        // break -> 0x4036e0
                        break;
                    }
                    v138 = v139;
                }
            }
        }
        // 0x4036e0
        *(int *)(v1 - 4) = v135;
        g5 = v8;
        g3 = a1;
        *(int *)(v1 - 8) = v132;
        g1 = v131;
        function_402c36((int)&g30, (int)&g30);
        baseAddress = *(int *)(v1 + 4);
        if ((v72 & 8) != 0) {
            if ((v72 & 4) == 0) {
                // 0x403718
                if (v137 >= 0 == (v137 != 0)) {
                    while (true) {
                        // 0x403720
                        g6 = v131;
                        baseAddress = g3;
                        a4 = v137 - 1;
                        _write_char();
                        if (v25 == -1) {
                            // break -> 0x40373d
                            break;
                        }
                        int v140 = a4;
                        if (v140 >= 0 != v140 != 0) {
                            // break -> 0x40373d
                            break;
                        }
                        v137 = v140;
                    }
                }
            }
        }
        int v141 = v118; // 0x403744
        if (v76 == 0 || v141 < 1) {
            // 0x4037c1
            g5 = v8;
            *(int *)(v1 - 4) = v141;
            *(int *)(v1 - 8) = v78;
            g1 = v131;
            function_402c36((int)&g30, (int)&g30);
        } else {
            // 0x403750
            g6 = v78;
            int v142 = v1; // 0x403765
            int v143 = v78; // 0x40375c
            while (true) {
                int v144 = v141 - 1; // 0x40375f
                *(int *)(v142 - 4) = (int)*(int16_t *)v143;
                *(int *)(v142 - 8) = 6;
                *(int *)(v142 - 12) = v133;
                int v145; // bp-628
                *(int *)(v142 - 16) = (int)&v145;
                g6 += 2;
                int v146 = _wctomb_s((int *)v144, (char *)&g30, (int)&g30, (int16_t)&g30); // 0x403776
                if (v146 != 0) {
                    // break -> 0x4037b8
                    break;
                }
                int v147 = v145; // 0x403782
                if (v147 == v146) {
                    // break -> 0x4037b8
                    break;
                }
                // 0x40378a
                *(int *)(v1 + 12) = v147;
                g5 = v8;
                g3 = a1;
                *(int *)(v1 + 8) = v133;
                g1 = v131;
                function_402c36((int)&g30, (int)&g30);
                baseAddress = *(int *)(v1 + 4);
                if (v144 == 0) {
                    goto lab_0x4037db;
                }
                // 0x40378a
                v142 = v1 + 8;
                v143 = g6;
                v141 = v144;
            }
            // 0x4037b8
            v25 = -1;
        }
      lab_0x4037db:
        // 0x4037db
        if ((v72 & 4) != 0 && v25 >= 0) {
            // 0x4037ed
            if (v137 >= 0 == (v137 != 0)) {
                int v148 = v137; // 0x403803557
                while (true) {
                    // 0x4037f5
                    a4 = v148 - 1;
                    _write_char();
                    if (v25 == -1) {
                        v84 = v70;
                        v85 = v71;
                        v86 = v72;
                        v87 = v73;
                        v88 = v135;
                        v89 = v75;
                        v90 = v76;
                        v91 = v77;
                        v92 = v78;
                        // break -> 0x403816
                        break;
                    }
                    int v149 = a4;
                    if (v149 >= 0 != v149 != 0) {
                        v84 = v70;
                        v85 = v71;
                        v86 = v72;
                        v87 = v73;
                        v88 = v135;
                        v89 = v75;
                        v90 = v76;
                        v91 = v77;
                        v92 = v78;
                        // break -> 0x403816
                        break;
                    }
                    v148 = v149;
                }
            } else {
                v84 = v70;
                v85 = v71;
                v86 = v72;
                v87 = v73;
                v88 = v135;
                v89 = v75;
                v90 = v76;
                v91 = v77;
                v92 = v78;
            }
        } else {
            v84 = v70;
            v85 = v71;
            v86 = v72;
            v87 = v73;
            v88 = v135;
            v89 = v75;
            v90 = v76;
            v91 = v77;
            v92 = v78;
        }
    } else {
        v84 = v70;
        v85 = v71;
        v86 = v72;
        v87 = v73;
        v88 = v74;
        v89 = v75;
        v90 = v76;
        v91 = v77;
        v92 = v78;
    }
    goto lab_0x403816;
  lab_0x403314:;
    // 0x403314
    int v194; // 0x40331b
    a2 = v194;
    int v204 = v33; // 0x403332
    uint v205 = g6; // 0x403332
    char v94;
    int64_t v206;
    int v207;
    char * v151; // bp-588
    int v208;
    int v93; // 0x403348
    int v209; // 0x4033d0
    if (v204 >= v205) {
        if (v204 != v205) {
            int64_t v210 = v204 > 512 ? 512 : v33;
            int v211 = v210; // 0x403367
            if (v211 > 163) {
                int v212 = v211 + 349; // 0x403379
                *v45 = v212;
                int v213 = __malloc_crt(512); // 0x403380
                v9 = v9 & -256 | (int)v94;
                int v214 = v1 + 4; // 0x40338b
                *(int *)&v151 = v213;
                if (v213 != 0) {
                    // 0x403396
                    a2 = v213;
                    v209 = v214;
                    v206 = v210;
                    v207 = v213;
                    v208 = v212;
                } else {
                    v209 = v214;
                    v206 = 163;
                    v207 = v194;
                    v208 = 512;
                }
            } else {
                v209 = v1;
                v206 = v210;
                v207 = v194;
                v208 = 512;
            }
        } else {
            // 0x403348
            v209 = v1;
            v206 = (char)v93 != 103 ? v33 : 1;
            v207 = v194;
            v208 = 512;
        }
    } else {
        v209 = v1;
        v206 = 6;
        v207 = v194;
        v208 = 512;
    }
    int v215 = a4; // 0x4033b0
    g6 = *(int *)0x40a040;
    Ptr = *(int *)v215;
    *(int *)(v209 - 4) = v6;
    int v95;
    *(int *)(v209 - 8) = v95;
    int v216 = v206; // 0x4033da
    *(int *)(v209 - 12) = v216;
    *(int *)(v209 - 16) = v9;
    *(int *)(v209 - 20) = v208;
    *(int *)(v209 - 24) = a2;
    *(int *)(v209 - 28) = v4;
    *(int *)(v209 - 32) = g12;
    DecodePointer((int *)Ptr);
    int v217 = (int)v37 & 128; // 0x403408
    int v218; // 0x403440
    if (v217 != 0 && v216 == 0) {
        // 0x403419
        *(int *)(v1 + 24) = v6;
        *(int *)(v1 + 20) = a2;
        *(int *)(v1 + 16) = g14;
        DecodePointer(&g30);
        v218 = v1 + 8;
    } else {
        v218 = v1 + 28;
    }
    int v219; // 0x403464
    if (v217 == 0 == v94 == 103) {
        // 0x40343a
        *(int *)(v218 - 4) = v6;
        *(int *)(v218 - 8) = a2;
        *(int *)(v218 - 12) = g13;
        DecodePointer(&g30);
        v219 = v1 + 8;
    } else {
        v219 = v218;
    }
    int v220 = a2; // 0x40344e
    int v221; // 0x40345d
    if (*(char *)v220 == 45) {
        // 0x403453
        v221 = v220 + 1;
    } else {
        v221 = v207;
    }
    // 0x403464
    *(int *)(v219 - 4) = v221;
    int v152 = v215 + 8;
    char v153 = v37 | 64;
    int64_t v154 = v206;
    int v155 = v95;
    int v156 = v221; // 0x40321f
    goto lab_0x40322b;
  lab_0x403520:
    if (v222 == 0) {
        v160 = v223;
        v176 = v224;
        v164 = v225;
        v165 = v226;
        v174 = v227;
        v180 = v228;
        v158 = v229;
        v157 = v230;
        goto lab_0x40353f;
    } else {
        v184 = v223;
        v185 = v224;
        v186 = v225;
        v187 = v226;
        v188 = v227;
        v189 = v228;
        v181 = v230;
        v183 = v229;
        goto lab_0x403525;
    }
  lab_0x4030a6:;
    // 0x4030a6
    int v67; // 0x403074
    char v231 = (char)v67 + 32; // 0x4030a6
    int v232 = (int)v231 | v67 & -256; // 0x4030a6
    v9 = v232;
    v93 = v232;
    v94 = v231;
    v95 = 1;
    goto lab_0x403314;
  lab_0x403816:;
    char * v150 = v151; // 0x403816
    int v79;
    if (v150 == NULL) {
        // 0x403816
        v40 = 7;
        v23 = v84;
        v38 = v85;
        v36 = v86;
        v34 = v35;
        v32 = v87;
        v30 = v88;
        v26 = v90;
        v28 = v89;
        v51 = v91;
        v21 = v24;
        v79 = v92;
    } else {
        // 0x40381f
        *(int *)(v1 - 4) = (int)v150;
        _free(&g30);
        v151 = NULL;
        v40 = 7;
        v23 = v84;
        v38 = v85;
        v36 = v86;
        v34 = v35;
        v32 = v87;
        v30 = v88;
        v26 = v90;
        v28 = v89;
        v51 = v91;
        v21 = v24;
        v79 = v92;
    }
    goto lab_0x403832;
  lab_0x40322b:
    // 0x40322b
    v102 = _strlen((char *)&g30);
    v103 = v152;
    v104 = v39;
    v105 = v153;
    v106 = v154;
    v107 = v31;
    v108 = v27;
    v109 = v155;
    v110 = v156;
    goto lab_0x40364b;
  lab_0x40353f:
    // 0x40353f
    a4 = v157;
    a2 = v158;
    int v159; // 0x403581
    if ((v160 & 0x9000) == 0) {
        // 0x40354f
        a4 = 0;
        v159 = 0;
    } else {
        v159 = v157;
    }
    uint v161 = g6; // 0x403551
    char v162;
    int v163;
    if (v164 >= v161) {
        // 0x403565
        v162 = v165 & -9;
        v163 = v164 > 512 ? 512 : v164;
    } else {
        v162 = v165;
        v163 = 1;
    }
    int v166 = v163;
    int v167; // 0x40358b
    int v168 = v167; // 0x4035d6
    int v169; // 0x403594
    while (true) {
        // 0x40358e
        v7 = v168;
        v169 = v166 - 1;
        if (v166 >= 0 != v166 != 0) {
            // 0x40359e
            if ((a4 || a2) == 0) {
                // break -> 0x4035d1
                break;
            }
        }
        int v170 = v118; // 0x4035a4
        int v171 = v170 >> 31; // 0x4035aa
        v9 = v171;
        *(int *)(v1 - 4) = v171;
        *(int *)(v1 - 8) = v170;
        *(int *)(v1 - 12) = a4;
        *(int *)(v1 - 16) = a2;
        int v172 = v121 + 48; // 0x4035b4
        v121 = v172;
        a2 = __aulldvrm(v169);
        a4 = v9;
        int v173; // 0x4035c6
        if ((char)v172 > 57) {
            // 0x4035c6
            v173 = v172 + v174;
            v121 = v173;
        } else {
            v173 = v172;
        }
        // 0x4035cc
        *(char *)v7 = (char)v173;
        v166 = v169;
        v168 = v7 - 1;
    }
    int v175 = ((v159 | v158) != 0 ? -1 : v161) & v176; // 0x403585
    int64_t v177 = v169;
    int v178 = v167 - v168; // 0x4035d4
    int v179 = v168 + 1; // 0x4035d6
    g6 = v179;
    v118 = v178;
    if (((int)v162 & 512) == 0) {
        v70 = v180;
        v71 = v174;
        v72 = v162;
        v73 = v177;
        v74 = v175;
        v75 = v29;
        v76 = v27;
        v77 = v51;
        v78 = v179;
        goto lab_0x403651;
    } else {
        if (v178 == 0) {
            goto lab_0x4035fa;
        } else {
            // 0x4035f3
            if (*(char *)v179 == 48) {
                v70 = v180;
                v71 = v174;
                v72 = v162;
                v73 = v177;
                v74 = v175;
                v75 = v29;
                v76 = v27;
                v77 = v51;
                v78 = v179;
                goto lab_0x403651;
            } else {
                goto lab_0x4035fa;
            }
        }
    }
  lab_0x403525:
    if (v181 < 0 && v181 >= 0 != v181 != 0) {
        int v182 = -(((int)(v183 != 0) + v181 + g6)); // 0x403533
        v9 = v182;
        v160 = v184;
        v176 = v185;
        v164 = v186;
        v165 = v187;
        v174 = v188;
        v180 = v189;
        v158 = -v183;
        v157 = v182;
    } else {
        v160 = v184;
        v176 = v185;
        v164 = v186;
        v165 = v187;
        v174 = v188;
        v180 = v189;
        v158 = v183;
        v157 = v181;
    }
    goto lab_0x40353f;
  lab_0x40321f:
    // 0x40321f
    v156 = *(int *)&g9;
    *v45 = v156;
    int v99; // 0x4031d7
    v152 = v99;
    v153 = v37;
    v154 = v33;
    v155 = v51;
    goto lab_0x40322b;
  lab_0x40316c:;
    // 0x40316c
    int v114; // 0x40316c
    int v190 = v114 + 4; // 0x40316c
    int v191; // bp-528
    int v192;
    int v113; // 0x40315f
    int v193; // 0x403192
    if (((int)v37 & 2064) == 0) {
        // 0x4031b1
        v191 = (int)*(char *)v114 | v113 & -256;
        v118 = 1;
        v192 = v29;
    } else {
        // 0x403181
        *v45 = (int)*(int16_t *)v114;
        *(int *)(v1 - 8) = 512;
        *(int *)(v1 - 12) = v194;
        *(int *)(v1 - 16) = v193;
        int v195 = _wctomb_s((int *)v190, (char *)&g30, (int)&g30, (int16_t)&g30); // 0x403199
        v192 = v195 == 0 ? v29 : 1;
    }
    // 0x4031c4
    v70 = v190;
    v71 = v39;
    v72 = v37;
    v73 = v33;
    v74 = v31;
    v75 = v192;
    v76 = v27;
    v77 = v51;
    v78 = v194;
    goto lab_0x403651;
  lab_0x4035fa:
    // 0x4035fa
    *(char *)v168 = 48;
    v102 = v178 + 1;
    v103 = v180;
    v104 = v174;
    v105 = v162;
    v106 = v177;
    v107 = v175;
    v108 = v27;
    v109 = v51;
    v110 = v168;
    goto lab_0x40364b;
  lab_0x402d9d:;
    int v196 = a2; // 0x402d9f
    if (v196 == 0) {
        goto lab_0x402d0e_2;
    } else {
        unsigned char v197 = *(char *)v196; // 0x402da7
        v25 = 0;
        v118 = 0;
        v151 = NULL;
        if (v197 != 0) {
            // 0x402dc9
            v131 = &v25;
            v132 = &v136;
            int v198; // bp-16
            v133 = &v198;
            int v199; // bp-17
            v167 = &v199;
            v194 = &v191;
            v193 = &v118;
            int v200 = v196 + 1; // 0x402dc9558
            a2 = v200;
            g6 = 0;
            v24 = v200;
            int v201;
            v79 = v201;
            int v202;
            v51 = v202;
            v22 = v197;
            v27 = 0;
            v29 = 0;
            v31 = 0;
            v33 = 0;
            v35 = 0;
            v37 = 0;
            v39 = 0;
            v23 = a4;
            v9 = v9 & -256 | (int)v197;
            v41 = 0;
            while (true) {
              lab_0x402dde:;
                // 0x402dde
                int v42;
                if ((char)(v9 - 32) < 89) {
                    char v43 = *(char *)(v9 + (int)&g7); // 0x402de8
                    v42 = (int)v43 & 15;
                } else {
                    v42 = 0;
                }
                char v44 = *(char *)(v41 + (int)&g8 + 8 * v42); // 0x402df6
                v45 = (int *)(v1 - 4);
                *v45 = 7;
                int v46 = (int)v44 / 16; // 0x402e00
                int v47 = *v45; // 0x402e03
                g29 = v46;
                switch (v46) {
                    case 0: {
                        // 0x402df6
                        v48 = 0;
                        v49 = g6;
                        goto lab_0x40301a;
                    }
                    case 1: {
                        int v50 = g6; // 0x402e20
                        v40 = 1;
                        v38 = v39;
                        v36 = v50;
                        v34 = v50;
                        v32 = -1;
                        v30 = v50;
                        v26 = v50;
                        v28 = v50;
                        v51 = v50;
                        v21 = v24;
                        goto lab_0x403832;
                    }
                    case 2: {
                        int v52 = v9; // 0x402e49
                        if (v52 == 32) {
                            char v53 = v37 | 2; // 0x402e9b
                            v40 = 2;
                            v38 = v39;
                            v36 = v53;
                            v34 = v35;
                            v32 = v33;
                            v30 = v31;
                            v26 = v27;
                            v28 = v29;
                            v21 = v24;
                        } else {
                            // 0x402e51
                            if (v52 == 35) {
                                // 0x402e8c
                                v40 = 2;
                                v38 = v39;
                                v36 = v37 | -128;
                                v34 = v35;
                                v32 = v33;
                                v30 = v31;
                                v26 = v27;
                                v28 = v29;
                                v21 = v24;
                            } else {
                                // 0x402e56
                                if (v52 == 43) {
                                    // 0x402e80
                                    v40 = 2;
                                    v38 = v39;
                                    v36 = v37 | 1;
                                    v34 = v35;
                                    v32 = v33;
                                    v30 = v31;
                                    v26 = v27;
                                    v28 = v29;
                                    v21 = v24;
                                } else {
                                    // 0x402e5b
                                    if (v52 == 45) {
                                        // 0x402e74
                                        v40 = 2;
                                        v38 = v39;
                                        v36 = v37 | 4;
                                        v34 = v35;
                                        v32 = v33;
                                        v30 = v31;
                                        v26 = v27;
                                        v28 = v29;
                                        v21 = v24;
                                    } else {
                                        // 0x402e5f
                                        v40 = 2;
                                        v38 = v39;
                                        v36 = v52 != 48 ? v37 : v37 | 8;
                                        v34 = v35;
                                        v32 = v33;
                                        v30 = v31;
                                        v26 = v27;
                                        v28 = v29;
                                        v21 = v24;
                                    }
                                }
                            }
                        }
                        goto lab_0x403832;
                    }
                    case 3: {
                        int v54 = v9; // 0x402ea7
                        if ((char)v54 != 42) {
                            int v55 = (int)(10 * 0x100000000 * v35 / 0x100000000) - 48 + v54; // 0x402ee4
                            v40 = 3;
                            v38 = v39;
                            v36 = v37;
                            v34 = v55;
                            v32 = v33;
                            v30 = v31;
                            v26 = v27;
                            v28 = v29;
                            v21 = v24;
                        } else {
                            int v56 = a4; // 0x402eac
                            int v57 = v56 + 4; // 0x402eac
                            int v58 = *(int *)v56; // 0x402eb5
                            if (v58 < g6) {
                                // 0x402ec6
                                v40 = 3;
                                v23 = v57;
                                v38 = v39;
                                v36 = v37 | 4;
                                v34 = -v58;
                                v32 = v33;
                                v30 = v31;
                                v26 = v27;
                                v28 = v29;
                                v21 = v24;
                            } else {
                                v40 = 3;
                                v23 = v57;
                                v38 = v39;
                                v36 = v37;
                                v34 = v58;
                                v32 = v33;
                                v30 = v31;
                                v26 = v27;
                                v28 = v29;
                                v21 = v24;
                            }
                        }
                        goto lab_0x403832;
                    }
                    case 4: {
                        // 0x402ef3
                        v40 = 4;
                        v38 = v39;
                        v36 = v37;
                        v34 = v35;
                        v32 = g6;
                        v30 = v31;
                        v26 = v27;
                        v28 = v29;
                        v21 = v24;
                        goto lab_0x403832;
                    }
                    case 5: {
                        int v59 = v9; // 0x402efe
                        if ((char)v59 != 42) {
                            int v60 = (int)(10 * 0x100000000 * v33 / 0x100000000) - 48 + v59; // 0x402f35
                            v40 = 5;
                            v38 = v39;
                            v36 = v37;
                            v34 = v35;
                            v32 = v60;
                            v30 = v31;
                            v26 = v27;
                            v28 = v29;
                            v21 = v24;
                        } else {
                            int v61 = a4; // 0x402f03
                            int v62 = *(int *)v61; // 0x402f0c
                            v40 = 5;
                            v23 = v61 + 4;
                            v38 = v39;
                            v36 = v37;
                            v34 = v35;
                            v32 = v62 < g6 ? -1 : (int64_t)v62;
                            v30 = v31;
                            v26 = v27;
                            v28 = v29;
                            v21 = v24;
                        }
                        goto lab_0x403832;
                    }
                    case 6: {
                        // 0x402f44
                        int v63; // 0x402f44
                        switch ((char)v63) {
                            case 73: {
                                // 0x402f9e
                                v64 = a2;
                                v65 = *(char *)v64;
                                if (v65 != 54) {
                                    goto lab_0x402fc2;
                                } else {
                                    // 0x402fa4
                                    if (*(char *)(v64 + 1) != 52) {
                                        goto lab_0x402fc2;
                                    } else {
                                        // 0x402faa
                                        v40 = 6;
                                        v38 = v39;
                                        v36 = v37;
                                        v34 = v35;
                                        v32 = v33;
                                        v30 = v31;
                                        v26 = v27;
                                        v28 = v29;
                                        v21 = v64 + 2;
                                        goto lab_0x403832;
                                    }
                                }
                            }
                            case 104: {
                                // 0x402f92
                                v40 = 6;
                                v38 = v39;
                                v36 = v37 | 32;
                                v34 = v35;
                                v32 = v33;
                                v30 = v31;
                                v26 = v27;
                                v28 = v29;
                                v21 = v24;
                                goto lab_0x403832;
                            }
                            case 108: {
                                int v66 = a2; // 0x402f6b
                                if (*(char *)v66 != 108) {
                                    // 0x402f86
                                    v40 = 6;
                                    v38 = v39;
                                    v36 = v37 | 16;
                                    v34 = v35;
                                    v32 = v33;
                                    v30 = v31;
                                    v26 = v27;
                                    v28 = v29;
                                    v21 = v24;
                                } else {
                                    // 0x402f70
                                    v40 = 6;
                                    v38 = v39;
                                    v36 = v37;
                                    v34 = v35;
                                    v32 = v33;
                                    v30 = v31;
                                    v26 = v27;
                                    v28 = v29;
                                    v21 = v66 + 1;
                                }
                                goto lab_0x403832;
                            }
                            default: {
                                v40 = 6;
                                v38 = v39;
                                v36 = v37;
                                v34 = v35;
                                v32 = v33;
                                v30 = v31;
                                v26 = v27;
                                v28 = v29;
                                v21 = v24;
                                goto lab_0x403832;
                            }
                        }
                    }
                    case 7: {
                        // 0x403074
                        v67 = v9;
                        if (v67 > 100) {
                            if (v67 > 112) {
                                // 0x40347c
                                if (v67 == 115) {
                                    goto lab_0x4030f3;
                                } else {
                                    // 0x403485
                                    if (v67 == 117) {
                                        v68 = v37;
                                        v69 = 10;
                                        goto lab_0x4032ef;
                                    } else {
                                        // 0x40348d
                                        if (v67 != 120) {
                                            v70 = v23;
                                            v71 = v39;
                                            v72 = v37;
                                            v73 = v33;
                                            v74 = v31;
                                            v75 = v29;
                                            v76 = v27;
                                            v77 = v51;
                                            v78 = v79;
                                            goto lab_0x403651;
                                        } else {
                                            // 0x403496
                                            a4 = v23;
                                            v80 = v33;
                                            v81 = 39;
                                            goto lab_0x4034a6;
                                        }
                                    }
                                }
                            } else {
                                if (v67 == 112) {
                                    v80 = 8;
                                    v81 = v47;
                                    goto lab_0x4034a6;
                                } else {
                                    if (v67 > 103) {
                                        switch (v67) {
                                            case 105: {
                                                // 0x4032d8
                                                a4 = v23;
                                                goto lab_0x4032de;
                                            }
                                            case 110: {
                                                int v82 = v23 + 4; // 0x40328f
                                                v7 = *(int *)v23;
                                                if (__get_printf_count_output(7) == 0) {
                                                    goto lab_0x402d0e_2;
                                                }
                                                int v83 = v25; // 0x4032c1
                                                if ((v37 & 32) == 0) {
                                                    // 0x4032c1
                                                    *(int *)v7 = v83;
                                                    v84 = v82;
                                                    v85 = v39;
                                                    v86 = v37;
                                                    v87 = v33;
                                                    v88 = v31;
                                                    v89 = 1;
                                                    v90 = v27;
                                                    v91 = v51;
                                                    v92 = v79;
                                                } else {
                                                    // 0x4032b5
                                                    *(int16_t *)v7 = (int16_t)v83;
                                                    v84 = v82;
                                                    v85 = v39;
                                                    v86 = v37;
                                                    v87 = v33;
                                                    v88 = v31;
                                                    v89 = 1;
                                                    v90 = v27;
                                                    v91 = v51;
                                                    v92 = v79;
                                                }
                                                goto lab_0x403816;
                                            }
                                            default: {
                                                if (v67 != 111) {
                                                    v70 = v23;
                                                    v71 = v39;
                                                    v72 = v37;
                                                    v73 = v33;
                                                    v74 = v31;
                                                    v75 = v29;
                                                    v76 = v27;
                                                    v77 = v51;
                                                    v78 = v79;
                                                    goto lab_0x403651;
                                                } else {
                                                    // 0x40326a
                                                    a4 = v23;
                                                    v68 = v37;
                                                    v69 = 8;
                                                    goto lab_0x4032ef;
                                                }
                                            }
                                        }
                                    } else {
                                        // 0x40330e
                                        a4 = v23;
                                        v93 = v67;
                                        v94 = v22;
                                        v95 = v51;
                                        goto lab_0x403314;
                                    }
                                }
                            }
                        } else {
                            if (v67 == 100) {
                                goto lab_0x4032de;
                            } else {
                                if (v67 > 83) {
                                    int v96 = v33;
                                    if (v67 == 88) {
                                        v80 = v96;
                                        v81 = v47;
                                        goto lab_0x4034a6;
                                    } else {
                                        int v97 = v67 - 90; // 0x403153
                                        if (v97 == 0) {
                                            int v98 = *(int *)a4; // 0x4031d5
                                            v99 = a4 + 4;
                                            if (v98 == 0) {
                                                goto lab_0x40321f;
                                            } else {
                                                int v100 = *(int *)(v98 + 4); // 0x4031e4
                                                if (v100 == 0) {
                                                    goto lab_0x40321f;
                                                } else {
                                                    int v101 = (int)*(int16_t *)v98; // 0x4031f5
                                                    if (((int)v37 & 2048) == 0) {
                                                        // 0x403214
                                                        v102 = v101;
                                                        v103 = v99;
                                                        v104 = v39;
                                                        v105 = v37;
                                                        v106 = v33;
                                                        v107 = v31;
                                                        v108 = g6 & v27;
                                                        v109 = v51;
                                                        v110 = v100;
                                                    } else {
                                                        int v111 = v101 >> 31; // 0x403200
                                                        v9 = v111;
                                                        v102 = (v101 - v111) / 2;
                                                        v103 = v99;
                                                        v104 = v39;
                                                        v105 = v37;
                                                        v106 = v33;
                                                        v107 = v31;
                                                        v108 = 1;
                                                        v109 = v51;
                                                        v110 = v100;
                                                    }
                                                    goto lab_0x40364b;
                                                }
                                            }
                                        } else {
                                            int v112 = v97 - v47; // 0x403156
                                            if (v112 == 0) {
                                                v93 = v67;
                                                v94 = v22;
                                                v95 = v51;
                                                goto lab_0x403314;
                                            } else {
                                                // 0x40315e
                                                v113 = v112 - 2;
                                                if (v113 != 0) {
                                                    v70 = v23;
                                                    v71 = v39;
                                                    v72 = v37;
                                                    v73 = v33;
                                                    v74 = v31;
                                                    v75 = v29;
                                                    v76 = v27;
                                                    v77 = v51;
                                                    v78 = v79;
                                                    goto lab_0x403651;
                                                } else {
                                                    // 0x403166
                                                    v114 = v23;
                                                    goto lab_0x40316c;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    if (v67 == 83) {
                                        goto lab_0x4030f3;
                                    } else {
                                        // 0x403091
                                        if (v67 == 65) {
                                            goto lab_0x4030a6;
                                        } else {
                                            // 0x403096
                                            if (v67 == 67) {
                                                int v115 = a4;
                                                v114 = v115;
                                                v113 = 0;
                                                goto lab_0x40316c;
                                            } else {
                                                // 0x40309a
                                                if (v67 == 69) {
                                                    goto lab_0x4030a6;
                                                } else {
                                                    // 0x40309e
                                                    if (v67 != 71) {
                                                        v70 = v23;
                                                        v71 = v39;
                                                        v72 = v37;
                                                        v73 = v33;
                                                        v74 = v31;
                                                        v75 = v29;
                                                        v76 = v27;
                                                        v77 = v51;
                                                        v78 = v79;
                                                        goto lab_0x403651;
                                                    } else {
                                                        goto lab_0x4030a6;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    default: {
                        v40 = v46;
                        v38 = v39;
                        v36 = v37;
                        v34 = v35;
                        v32 = v33;
                        v30 = v31;
                        v26 = v27;
                        v28 = v29;
                        v21 = v24;
                        goto lab_0x403832;
                    }
                }
            }
        }
      lab_0x403857_2:
        if (v19 != 0) {
            int * v203 = (int *)(v18 + 112); // 0x403866
            *v203 = *v203 & -3;
        }
        // 0x40386a
        v17 = v25;
        goto lab_0x403870;
    }
  lab_0x403870:
    // 0x403870
    g1 = v17;
    baseAddress = g2 ^ g15 ^ v3;
    return _40___security_check_cookie_40_4();
}

// Address range: 0x403ab1 - 0x403abf
int (*function_403ab1(int (*lpTopLevelExceptionFilter)(struct _EXCEPTION_POINTERS *)))(struct _EXCEPTION_POINTERS *) {
    // 0x403ab1
    SetUnhandledExceptionFilter(lpTopLevelExceptionFilter);
    return NULL;
}

// Address range: 0x4044cf - 0x4044d8
int * __encoded_null(int * Ptr) {
    // 0x4044cf
    return EncodePointer(Ptr);
}

// Address range: 0x4044d8 - 0x4044e1
int ___crtTlsAlloc_40_4(void) {
    // 0x4044d8
    return TlsAlloc();
}

// Address range: 0x4045f4 - 0x4045fd
int function_4045f4(void) {
    // 0x4045f4
    return __unlock(13);
}

// Address range: 0x4045fd - 0x404606
int function_4045fd(void) {
    // 0x4045fd
    return __unlock(12);
}

// Address range: 0x4047b3 - 0x4047bc
int function_4047b3(void) {
    // 0x4047b3
    return __unlock(13);
}

// Address range: 0x4047bf - 0x4047c8
int function_4047bf(void) {
    // 0x4047bf
    return __unlock(12);
}

// Address range: 0x404ea3 - 0x404ea9
int function_404ea3(void) {
    // 0x404ea3
    return __SEH_epilog4();
}

// Address range: 0x404ea9 - 0x404eba
int * __initp_eh_hooks(int * Ptr) {
    int * result = EncodePointer(Ptr); // 0x404eae
    g21 = (int)result;
    return result;
}

// Address range: 0x404f0f - 0x404f1c
int * ___get_sigabrt(int * Ptr) {
    // 0x404f0f
    return DecodePointer(Ptr);
}

// Address range: 0x405083 - 0x405092
int function_405083(void) {
    // 0x405083
    int result; // eax
    int v1; // ebp
    if (*(int *)(v1 - 28) == 0) {
        // branch -> 0x405091
    } else {
        // 0x405089
        result = __unlock(0);
    }
    // 0x405091
    return result;
}

// Address range: 0x405092 - 0x405096
int function_405092(void) {
    // 0x405092
    int result; // eax
    return result;
}

// Address range: 0x405096 - 0x4050b9
int function_405096(int a1) {
    // 0x405096
    int v1; // ebx
    switch (v1) {
        default: {
            if (v1 != 4) {
                // 0x4050b7
                return 0;
            }
        }
        case 8: {
        }
        case 11: {
            // 0x4050a6
            int v2; // ebp
            int v3; // edi
            *(int *)(v3 + 96) = *(int *)(v2 - 44);
            if (v1 == 8) {
                // 0x4050b1
                *(int *)(v3 + 100) = *(int *)(v2 - 48);
            }
            // break -> 0x4050b7
            break;
        }
    }
    // 0x4050b7
    return 0;
}

// Address range: 0x4050bf - 0x4050ce
int __initp_misc_rand_s(int result) {
    // 0x4050bf
    g22 = result;
    return result;
}

// Address range: 0x4050ce - 0x4050dd
int __initp_misc_purevirt(int result) {
    // 0x4050ce
    g23 = result;
    return result;
}

// Address range: 0x4050dd - 0x4050ec
int __initp_heap_handler(int result) {
    // 0x4050dd
    g24 = result;
    return result;
}

// Address range: 0x405231 - 0x405237
int function_405231(void) {
    // 0x405231
    return __unlockexit();
}

// Address range: 0x40590d - 0x405916
int function_40590d(void) {
    // 0x40590d
    return __unlock(13);
}

// Address range: 0x405cdc - 0x405ce5
int function_405cdc(void) {
    // 0x405cdc
    return __unlock(13);
}

// Address range: 0x405ce5 - 0x405ce7
int function_405ce5(void) {
    // 0x405ce5
    int result; // eax
    return result;
}

// Address range: 0x406060 - 0x40606c
int function_406060(void) {
    // 0x406060
    return __unlock(12);
}

// Address range: 0x406070 - 0x406075
int function_406070(int a1) {
    // 0x406070
    int v1; // edx
    return v1 - 1;
}

// Address range: 0x40613e - 0x406146
int __crt_debugger_hook(void) {
    // 0x40613e
    g27 = 0;
    int result; // eax
    return result;
}

// Address range: 0x406146 - 0x406155
int _40___security_check_cookie_40_4(void) {
    // 0x406146
    if (baseAddress != g15) {
        // 0x406150
        return ___report_gsfailure();
    }
    // 0x40614e
    return g1;
}

// Address range: 0x4062b6 - 0x4062d2
int function_4062b6(int a1) {
    int v1 = *(int *)(a1 + 24); // 0x4062c0
    int v2 = *(int *)(a1 + 40); // 0x4062c3
    int v3; // ebp
    return __local_unwind4(v2, v1, *(int *)(a1 + 28), v3);
}

// Address range: 0x406497 - 0x4064a1
int function_406497(void) {
    // 0x406497
    int v1; // ebp
    return __unlock_fhandle(*(int *)(v1 + 8));
}

// Address range: 0x406c6a - 0x406c72
int function_406c6a(void) {
    // 0x406c6a
    int v1; // ebx
    return __unlock_fhandle(v1);
}

// Address range: 0x406d11 - 0x406d17
int ___iob_func(void) {
    // 0x406d11
    return (int)&g16;
}

// Address range: 0x407c97 - 0x407c9e
int function_407c97(void) {
    // 0x407c97
    __amsg_exit(2);
    // UNREACHABLE
}

// Address range: 0x407c9e - 0x407ca0
int function_407c9e(int a1) {
    // 0x407c9e
    int result; // eax
    return result;
}

// Address range: 0x4087bc - 0x4087c5
int function_4087bc(void) {
    // 0x4087bc
    int result; // eax
    return result;
}

// Address range: 0x4087e4 - 0x4087e7
int __NLG_Call(void) {
    // 0x4087e4
    int result; // eax
    return result;
}

// Address range: 0x40896c - 0x408975
int function_40896c(void) {
    // 0x40896c
    return __unlock(10);
}

// Address range: 0x408ba1 - 0x408baa
int function_408ba1(void) {
    // 0x408ba1
    return __unlock(1);
}

// Address range: 0x408cfc - 0x408d0d
int function_408cfc(void) {
    int v1; // esi
    return __unlock_file2(v1, *(int *)(4 * v1 + g25));
}

// Address range: 0x408d2b - 0x408d34
int function_408d2b(void) {
    // 0x408d2b
    return __unlock(1);
}

// Address range: 0x408d34 - 0x408d3d
int __flushall(void) {
    // 0x408d34
    return _flsall(1);
}

// Address range: 0x408d56 - 0x408d6c
int function_408d56(void) {
    // 0x408d56
    return __chkstk();
}

// Address range: 0x4091a2 - 0x4091aa
int function_4091a2(void) {
    // 0x4091a2
    int v1;
    return __unlock_file(v1);
}

// Address range: 0x40927b - 0x409283
int function_40927b(void) {
    // 0x40927b
    int v1; // ebx
    return __unlock_fhandle(v1);
}

// Address range: 0x409559 - 0x409561
int function_409559(void) {
    // 0x409559
    int v1; // ebx
    return __unlock_fhandle(v1);
}

// Address range: 0x409684 - 0x40968a
void _RtlUnwind_40_16(int * TargetFrame, int * TargetIp, struct _EXCEPTION_RECORD * ExceptionRecord, int * ReturnValue) {
    // 0x409684
    RtlUnwind(TargetFrame, TargetIp, ExceptionRecord, ReturnValue);
}

// Address range: 0x288017b - 0x288017c
int function_288017b(void) {
    // 0x288017b
    int result; // eax
    return result;
}

// Address range: 0x2880327 - 0x2880328
int function_2880327(void) {
    // 0x2880327
    int result; // eax
    return result;
}

// --------------- Statically Linked Functions ----------------

// int _3f__3f_0_LocaleUpdate_40__40_QAE_40_PAUlocaleinfo_struct_40__40__40_Z(int a1, int a2, int a3, int a4);
// int ___report_gsfailure(void);
// int ___security_init_cookie(void);
// int ___tmainCRTStartup(void);
// int __amsg_exit(int a1);
// int __aulldvrm(int a1);
// int __chkstk(void);
// int * __errno(void);
// int fileno(FILE * stream);
// int __get_printf_count_output(int a1);
// int __invalid_parameter_noinfo(void);
// int __isleadbyte_l(int a1);
// int __local_unwind4(int a1, int a2, int a3, int a4);
// int __lock(int a1);
// int __malloc_crt(int a1);
// int putenv(char * string);
// int __SEH_epilog4(void);
// int snprintf(char * restrict s, size_t maxlen, const char * restrict format, ...);
// int __unlock(int a1);
// int __unlock_fhandle(int a1);
// int __unlock_file(int a1);
// int __unlock_file2(int a1, int a2);
// int __XcptFilter(int a1, int a2);
// int _doexit(int a1, int a2, int a3);
// int _flsall(int a1);
// void free(void * ptr);
// char * getenv(const char * name);
// size_t strlen(const char * s);
// char * strrchr(char * s, int c);
// errno_t __cdecl wctomb_s(_Out_opt_ int * SizeConverted, char * MbCh, _In_ rsize_t SizeInBytes, _In_ wchar_t WCh);
// int _write_char(void);

// --------------- Dynamically Linked Functions ---------------

// PVOID DecodePointer(_In_opt_ PVOID Ptr);
// PVOID EncodePointer(_In_opt_ PVOID Ptr);
// DWORD FormatMessageA(_In_ DWORD dwFlags, _In_opt_ LPCVOID lpSource, _In_ DWORD dwMessageId, _In_ DWORD dwLanguageId, _Out_ LPSTR lpBuffer, _In_ DWORD nSize, _In_opt_ va_list * Arguments);
// DWORD GetLastError(VOID);
// DWORD GetModuleFileNameA(_In_opt_ HMODULE hModule, LPSTR lpFilename, _In_ DWORD nSize);
// FARPROC GetProcAddress(_In_ HMODULE hModule, _In_ LPCSTR lpProcName);
// HMODULE LoadLibraryExA(_In_ LPCSTR lpLibFileName, HANDLE hFile, _In_ DWORD dwFlags);
// HLOCAL LocalFree(HLOCAL hMem);
// int MessageBoxA(_In_opt_ HWND hWnd, _In_opt_ LPCSTR lpText, _In_opt_ LPCSTR lpCaption, _In_ UINT uType);
// VOID RtlUnwind(_In_opt_ PVOID TargetFrame, _In_opt_ PVOID TargetIp, _In_opt_ PEXCEPTION_RECORD ExceptionRecord, _In_ PVOID ReturnValue);
// LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter(_In_opt_ LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter);
// DWORD TlsAlloc(VOID);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: microsoft linker (10.0)
// Detected language: C++
// Detected functions: 67
// Decompilation date: 2019-12-29 22:02:37
